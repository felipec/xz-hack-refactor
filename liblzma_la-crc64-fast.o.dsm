;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;;
;; Decompilation date: 2024-04-07 10:35:37
;; Architecture: x86
;;

;;
;; Code Segment
;;

; section: .text.x86_codd
; function: .Lx86_code.part.0 at 0x0 -- 0xa9f
0x0:      f3 0f 1e fa                           	endbr64 
0x4:      41 54                                 	push r12
0x6:      b9 02 00 00 00                        	mov ecx, 2
0xb:      49 89 f4                              	mov r12, rsi
0xe:      be 12 00 00 00                        	mov esi, 0x12
0x13:     55                                    	push rbp
0x14:     48 89 d5                              	mov rbp, rdx
0x17:     ba 46 00 00 00                        	mov edx, 0x46
0x1c:     53                                    	push rbx
0x1d:     48 89 fb                              	mov rbx, rdi
0x20:     31 ff                                 	xor edi, edi
0x22:     48 83 ec 20                           	sub rsp, 0x20
0x26:     e8 85 ab 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x2b:     85 c0                                 	test eax, eax
0x2d:     0f 84 b3 05 00 00                     	je 0x5e6 <.Lx86_code.part.0+0x5e6>
0x33:     33 c0                                 	xor eax, eax
0x35:     b9 16 00 00 00                        	mov ecx, 0x16
0x3a:     48 8b fb                              	mov rdi, rbx
0x3d:     4c 89 e2                              	mov rdx, r12
0x40:     f3 ab                                 	rep stosd dword ptr [rdi], eax
0x42:     49 39 ec                              	cmp r12, rbp
0x45:     0f 83 3a 0a 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x4b:     0f b6 02                              	movzx eax, byte ptr [rdx]
0x4e:     3c 67                                 	cmp al, 0x67
0x50:     77 3b                                 	ja 0x8d <.Lx86_code.part.0+0x8d>
0x52:     3c 2d                                 	cmp al, 0x2d
0x54:     77 12                                 	ja 0x68 <.Lx86_code.part.0+0x68>
0x56:     3c 0f                                 	cmp al, 0xf
0x58:     0f 84 ca 00 00 00                     	je 0x128 <.Lx86_code.part.0+0x128>
0x5e:     3c 26                                 	cmp al, 0x26
0x60:     0f 85 0b 01 00 00                     	jne 0x171 <.Lx86_code.part.0+0x171>
0x66:     eb 5f                                 	jmp 0xc7 <.Lx86_code.part.0+0xc7>
0x68:     48 be 01 01 01 00 00 00 c0 00         	movabs rsi, 0xc0000000010101
0x72:     8d 48 d2                              	lea ecx, [rax - 0x2e]
0x75:     48 0f a3 ce                           	bt rsi, rcx
0x79:     72 4c                                 	jb 0xc7 <.Lx86_code.part.0+0xc7>
0x7b:     3c 67                                 	cmp al, 0x67
0x7d:     0f 84 87 00 00 00                     	je 0x10a <.Lx86_code.part.0+0x10a>
0x83:     3c 66                                 	cmp al, 0x66
0x85:     0f 85 d3 00 00 00                     	jne 0x15e <.Lx86_code.part.0+0x15e>
0x8b:     eb 52                                 	jmp 0xdf <.Lx86_code.part.0+0xdf>
0x8d:     3c f0                                 	cmp al, 0xf0
0x8f:     74 1e                                 	je 0xaf <.Lx86_code.part.0+0xaf>
0x91:     77 11                                 	ja 0xa4 <.Lx86_code.part.0+0xa4>
0x93:     8d 48 3c                              	lea ecx, [rax + 0x3c]
0x96:     80 f9 01                              	cmp cl, 1
0x99:     0f 86 95 00 00 00                     	jbe 0x134 <.Lx86_code.part.0+0x134>
0x9f:     e9 cd 00 00 00                        	jmp 0x171 <.Lx86_code.part.0+0x171>
0xa4:     83 c0 0e                              	add eax, 0xe
0xa7:     3c 01                                 	cmp al, 1
0xa9:     0f 87 c2 00 00 00                     	ja 0x171 <.Lx86_code.part.0+0x171>
0xaf:     8a 43 10                              	mov al, byte ptr [rbx + 0x10]
0xb2:     a8 01                                 	test al, 1
0xb4:     0f 85 2c 05 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0xba:     83 c8 01                              	or eax, 1
0xbd:     88 43 10                              	mov byte ptr [rbx + 0x10], al
0xc0:     8a 02                                 	mov al, byte ptr [rdx]
0xc2:     88 43 14                              	mov byte ptr [rbx + 0x14], al
0xc5:     eb 59                                 	jmp 0x120 <.Lx86_code.part.0+0x120>
0xc7:     8a 43 10                              	mov al, byte ptr [rbx + 0x10]
0xca:     a8 02                                 	test al, 2
0xcc:     0f 85 14 05 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0xd2:     83 c8 02                              	or eax, 2
0xd5:     88 43 10                              	mov byte ptr [rbx + 0x10], al
0xd8:     8a 02                                 	mov al, byte ptr [rdx]
0xda:     88 43 15                              	mov byte ptr [rbx + 0x15], al
0xdd:     eb 41                                 	jmp 0x120 <.Lx86_code.part.0+0x120>
0xdf:     8a 43 10                              	mov al, byte ptr [rbx + 0x10]
0xe2:     a8 04                                 	test al, 4
0xe4:     74 0a                                 	je 0xf0 <.Lx86_code.part.0+0xf0>
0xe6:     80 7b 16 66                           	cmp byte ptr [rbx + 0x16], 0x66
0xea:     0f 85 f6 04 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0xf0:     a8 20                                 	test al, 0x20
0xf2:     48 8d 42 01                           	lea rax, [rdx + 1]
0xf6:     0f 85 56 05 00 00                     	jne 0x652 <.Lx86_code.part.0+0x652>
0xfc:     80 4b 10 04                           	or byte ptr [rbx + 0x10], 4
0x100:    8a 12                                 	mov dl, byte ptr [rdx]
0x102:    88 53 16                              	mov byte ptr [rbx + 0x16], dl
0x105:    e9 48 05 00 00                        	jmp 0x652 <.Lx86_code.part.0+0x652>
0x10a:    8a 43 10                              	mov al, byte ptr [rbx + 0x10]
0x10d:    a8 08                                 	test al, 8
0x10f:    0f 85 d1 04 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0x115:    83 c8 08                              	or eax, 8
0x118:    88 43 10                              	mov byte ptr [rbx + 0x10], al
0x11b:    8a 02                                 	mov al, byte ptr [rdx]
0x11d:    88 43 17                              	mov byte ptr [rbx + 0x17], al
0x120:    48 ff c2                              	inc rdx
0x123:    e9 2d 05 00 00                        	jmp 0x655 <.Lx86_code.part.0+0x655>
0x128:    c7 43 28 0f 00 00 00                  	mov dword ptr [rbx + 0x28], 0xf
0x12f:    48 ff c2                              	inc rdx
0x132:    eb 75                                 	jmp 0x1a9 <.Lx86_code.part.0+0x1a9>
0x134:    8a 4b 10                              	mov cl, byte ptr [rbx + 0x10]
0x137:    f6 c1 20                              	test cl, 0x20
0x13a:    0f 85 a6 04 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0x140:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x143:    40 8a 3a                              	mov dil, byte ptr [rdx]
0x146:    83 c9 10                              	or ecx, 0x10
0x149:    48 8d 72 01                           	lea rsi, [rdx + 1]
0x14d:    88 4b 10                              	mov byte ptr [rbx + 0x10], cl
0x150:    40 88 7b 18                           	mov byte ptr [rbx + 0x18], dil
0x154:    48 3b f5                              	cmp rsi, rbp
0x157:    72 22                                 	jb 0x17b <.Lx86_code.part.0+0x17b>
0x159:    e9 27 09 00 00                        	jmp 0xa85 <.Lx86_code.part.0+0xa85>
0x15e:    83 e0 f0                              	and eax, 0xfffffff0
0x161:    3c 40                                 	cmp al, 0x40
0x163:    75 0c                                 	jne 0x171 <.Lx86_code.part.0+0x171>
0x165:    80 4b 10 20                           	or byte ptr [rbx + 0x10], 0x20
0x169:    8a 02                                 	mov al, byte ptr [rdx]
0x16b:    48 ff c2                              	inc rdx
0x16e:    88 43 1b                              	mov byte ptr [rbx + 0x1b], al
0x171:    48 3b d5                              	cmp rdx, rbp
0x174:    72 7b                                 	jb 0x1f1 <.Lx86_code.part.0+0x1f1>
0x176:    e9 0a 09 00 00                        	jmp 0xa85 <.Lx86_code.part.0+0xa85>
0x17b:    44 8a 42 01                           	mov r8b, byte ptr [rdx + 1]
0x17f:    c1 e0 08                              	shl eax, 8
0x182:    c6 43 1b 40                           	mov byte ptr [rbx + 0x1b], 0x40
0x186:    83 c8 0f                              	or eax, 0xf
0x189:    44 88 43 19                           	mov byte ptr [rbx + 0x19], r8b
0x18d:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x190:    8a 4a 01                              	mov cl, byte ptr [rdx + 1]
0x193:    c0 f9 07                              	sar cl, 7
0x196:    83 e1 fc                              	and ecx, 0xfffffffc
0x199:    83 c1 44                              	add ecx, 0x44
0x19c:    88 4b 1b                              	mov byte ptr [rbx + 0x1b], cl
0x19f:    40 80 ff c5                           	cmp dil, 0xc5
0x1a3:    75 12                                 	jne 0x1b7 <.Lx86_code.part.0+0x1b7>
0x1a5:    48 8d 56 01                           	lea rdx, [rsi + 1]
0x1a9:    48 39 ea                              	cmp rdx, rbp
0x1ac:    0f 82 fd 01 00 00                     	jb 0x3af <.Lx86_code.part.0+0x3af>
0x1b2:    e9 ce 08 00 00                        	jmp 0xa85 <.Lx86_code.part.0+0xa85>
0x1b7:    40 80 ff c4                           	cmp dil, 0xc4
0x1bb:    0f 85 25 04 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0x1c1:    40 8a 7a 01                           	mov dil, byte ptr [rdx + 1]
0x1c5:    8b f7                                 	mov esi, edi
0x1c7:    83 e6 1f                              	and esi, 0x1f
0x1ca:    40 80 e7 40                           	and dil, 0x40
0x1ce:    75 06                                 	jne 0x1d6 <.Lx86_code.part.0+0x1d6>
0x1d0:    83 c9 02                              	or ecx, 2
0x1d3:    88 4b 1b                              	mov byte ptr [rbx + 0x1b], cl
0x1d6:    f6 42 01 20                           	test byte ptr [rdx + 1], 0x20
0x1da:    75 04                                 	jne 0x1e0 <.Lx86_code.part.0+0x1e0>
0x1dc:    80 4b 1b 01                           	or byte ptr [rbx + 0x1b], 1
0x1e0:    ff ce                                 	dec esi
0x1e2:    40 80 fe 02                           	cmp sil, 2
0x1e6:    0f 86 44 08 00 00                     	jbe 0xa30 <.Lx86_code.part.0+0xa30>
0x1ec:    e9 f5 03 00 00                        	jmp 0x5e6 <.Lx86_code.part.0+0x5e6>
0x1f1:    8a 0a                                 	mov cl, byte ptr [rdx]
0x1f3:    80 f9 0f                              	cmp cl, 0xf
0x1f6:    75 0c                                 	jne 0x204 <.Lx86_code.part.0+0x204>
0x1f8:    c7 43 28 0f 00 00 00                  	mov dword ptr [rbx + 0x28], 0xf
0x1ff:    48 8b f2                              	mov rsi, rdx
0x202:    eb a1                                 	jmp 0x1a5 <.Lx86_code.part.0+0x1a5>
0x204:    0f b6 c1                              	movzx eax, cl
0x207:    48 8d 35 92 ab 00 00                  	lea rsi, [rip + 0xab92]
0x20e:    41 89 c8                              	mov r8d, ecx
0x211:    41 89 c2                              	mov r10d, eax
0x214:    41 83 e0 07                           	and r8d, 7
0x218:    41 c1 ea 03                           	shr r10d, 3
0x21c:    42 0f b6 34 16                        	movzx esi, byte ptr [rsi + r10]
0x221:    44 0f a3 c6                           	bt esi, r8d
0x225:    0f 82 bb 03 00 00                     	jb 0x5e6 <.Lx86_code.part.0+0x5e6>
0x22b:    48 bf 30 30 30 30 30 30 30 30         	movabs rdi, 0x3030303030303030
0x235:    8b f1                                 	mov esi, ecx
0x237:    49 89 d1                              	mov r9, rdx
0x23a:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x23d:    48 89 3c 24                           	mov qword ptr [rsp], rdi
0x241:    bf 3f fc ff 03                        	mov edi, 0x3fffc3f
0x246:    40 c0 ee 06                           	shr sil, 6
0x24a:    4d 29 e1                              	sub r9, r12
0x24d:    48 c1 e7 26                           	shl rdi, 0x26
0x251:    83 e6 03                              	and esi, 3
0x254:    44 88 4b 50                           	mov byte ptr [rbx + 0x50], r9b
0x258:    48 89 7c 24 08                        	mov qword ptr [rsp + 8], rdi
0x25d:    48 bf 0b 00 00 00 00 03 ff ff         	movabs rdi, 0xffff03000000000b
0x267:    48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0x26c:    48 bf c7 25 00 00 ff 0b c0 00         	movabs rdi, 0xc00bff000025c7
0x276:    48 89 7c 24 18                        	mov qword ptr [rsp + 0x18], rdi
0x27b:    48 8b 34 f4                           	mov rsi, qword ptr [rsp + rsi*8]
0x27f:    48 d3 ee                              	shr rsi, cl
0x282:    83 e6 01                              	and esi, 1
0x285:    0f 84 8b 00 00 00                     	je 0x316 <.Lx86_code.part.0+0x316>
0x28b:    80 f9 f7                              	cmp cl, 0xf7
0x28e:    0f 87 90 00 00 00                     	ja 0x324 <.Lx86_code.part.0+0x324>
0x294:    80 f9 c1                              	cmp cl, 0xc1
0x297:    77 1f                                 	ja 0x2b8 <.Lx86_code.part.0+0x2b8>
0x299:    80 f9 69                              	cmp cl, 0x69
0x29c:    77 64                                 	ja 0x302 <.Lx86_code.part.0+0x302>
0x29e:    80 f9 2c                              	cmp cl, 0x2c
0x2a1:    77 43                                 	ja 0x2e6 <.Lx86_code.part.0+0x2e6>
0x2a3:    8d 79 fb                              	lea edi, [rcx - 5]
0x2a6:    40 80 ff 20                           	cmp dil, 0x20
0x2aa:    77 78                                 	ja 0x324 <.Lx86_code.part.0+0x324>
0x2ac:    48 bf 20 20 20 20 20 00 00 00         	movabs rdi, 0x2020202020
0x2b6:    eb 3b                                 	jmp 0x2f3 <.Lx86_code.part.0+0x2f3>
0x2b8:    83 c1 3e                              	add ecx, 0x3e
0x2bb:    bf 01 00 00 00                        	mov edi, 1
0x2c0:    48 d3 e7                              	shl rdi, cl
0x2c3:    48 89 f9                              	mov rcx, rdi
0x2c6:    48 bf 20 00 00 00 c8 00 20 00         	movabs rdi, 0x2000c800000020
0x2d0:    48 85 f9                              	test rcx, rdi
0x2d3:    75 4a                                 	jne 0x31f <.Lx86_code.part.0+0x31f>
0x2d5:    f7 c1 01 01 00 00                     	test ecx, 0x101
0x2db:    b9 02 00 00 00                        	mov ecx, 2
0x2e0:    48 0f 45 f1                           	cmovne rsi, rcx
0x2e4:    eb 3e                                 	jmp 0x324 <.Lx86_code.part.0+0x324>
0x2e6:    48 bf 01 01 01 00 00 00 00 18         	movabs rdi, 0x1800000000010101
0x2f0:    83 e9 2d                              	sub ecx, 0x2d
0x2f3:    48 0f a3 cf                           	bt rdi, rcx
0x2f7:    b9 04 00 00 00                        	mov ecx, 4
0x2fc:    48 0f 42 f1                           	cmovb rsi, rcx
0x300:    eb 22                                 	jmp 0x324 <.Lx86_code.part.0+0x324>
0x302:    48 bf 01 00 00 00 00 01 80 7f         	movabs rdi, 0x7f80010000000001
0x30c:    83 c1 7f                              	add ecx, 0x7f
0x30f:    80 f9 3e                              	cmp cl, 0x3e
0x312:    76 df                                 	jbe 0x2f3 <.Lx86_code.part.0+0x2f3>
0x314:    eb 0e                                 	jmp 0x324 <.Lx86_code.part.0+0x324>
0x316:    45 31 db                              	xor r11d, r11d
0x319:    4c 89 5b 48                           	mov qword ptr [rbx + 0x48], r11
0x31d:    eb 0d                                 	jmp 0x32c <.Lx86_code.part.0+0x32c>
0x31f:    be 04 00 00 00                        	mov esi, 4
0x324:    80 4b 11 08                           	or byte ptr [rbx + 0x11], 8
0x328:    48 89 73 48                           	mov qword ptr [rbx + 0x48], rsi
0x32c:    48 8d 0d 4d aa 00 00                  	lea rcx, [rip + 0xaa4d]
0x333:    42 0f b6 34 11                        	movzx esi, byte ptr [rcx + r10]
0x338:    44 89 c1                              	mov ecx, r8d
0x33b:    d3 fe                                 	sar esi, cl
0x33d:    40 80 e6 01                           	and sil, 1
0x341:    0f 85 5e 05 00 00                     	jne 0x8a5 <.Lx86_code.part.0+0x8a5>
0x347:    8d 88 60 ff ff ff                     	lea ecx, [rax - 0xa0]
0x34d:    83 f9 03                              	cmp ecx, 3
0x350:    77 09                                 	ja 0x35b <.Lx86_code.part.0+0x35b>
0x352:    80 4b 11 05                           	or byte ptr [rbx + 0x11], 5
0x356:    e9 e4 02 00 00                        	jmp 0x63f <.Lx86_code.part.0+0x63f>
0x35b:    8a 4b 11                              	mov cl, byte ptr [rbx + 0x11]
0x35e:    f6 c1 08                              	test cl, 8
0x361:    75 0c                                 	jne 0x36f <.Lx86_code.part.0+0x36f>
0x363:    4c 89 23                              	mov qword ptr [rbx], r12
0x366:    49 8d 51 01                           	lea rdx, [r9 + 1]
0x36a:    e9 52 01 00 00                        	jmp 0x4c1 <.Lx86_code.part.0+0x4c1>
0x36f:    f6 43 10 20                           	test byte ptr [rbx + 0x10], 0x20
0x373:    0f 84 e4 02 00 00                     	je 0x65d <.Lx86_code.part.0+0x65d>
0x379:    f6 43 1b 08                           	test byte ptr [rbx + 0x1b], 8
0x37d:    0f 84 da 02 00 00                     	je 0x65d <.Lx86_code.part.0+0x65d>
0x383:    83 e0 f8                              	and eax, 0xfffffff8
0x386:    3d b8 00 00 00                        	cmp eax, 0xb8
0x38b:    0f 85 cc 02 00 00                     	jne 0x65d <.Lx86_code.part.0+0x65d>
0x391:    83 c9 10                              	or ecx, 0x10
0x394:    48 c7 43 48 08 00 00 00               	mov qword ptr [rbx + 0x48], 8
0x39c:    88 4b 11                              	mov byte ptr [rbx + 0x11], cl
0x39f:    44 88 43 20                           	mov byte ptr [rbx + 0x20], r8b
0x3a3:    c7 43 28 b8 00 00 00                  	mov dword ptr [rbx + 0x28], 0xb8
0x3aa:    e9 ae 02 00 00                        	jmp 0x65d <.Lx86_code.part.0+0x65d>
0x3af:    8b 4b 28                              	mov ecx, dword ptr [rbx + 0x28]
0x3b2:    c1 e1 08                              	shl ecx, 8
0x3b5:    89 4b 28                              	mov dword ptr [rbx + 0x28], ecx
0x3b8:    0f b6 02                              	movzx eax, byte ptr [rdx]
0x3bb:    0b c1                                 	or eax, ecx
0x3bd:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x3c0:    40 8a 32                              	mov sil, byte ptr [rdx]
0x3c3:    8b ce                                 	mov ecx, esi
0x3c5:    83 e1 fd                              	and ecx, 0xfffffffd
0x3c8:    80 f9 38                              	cmp cl, 0x38
0x3cb:    75 1b                                 	jne 0x3e8 <.Lx86_code.part.0+0x3e8>
0x3cd:    f6 43 10 10                           	test byte ptr [rbx + 0x10], 0x10
0x3d1:    0f 85 0f 02 00 00                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0x3d7:    48 ff c2                              	inc rdx
0x3da:    48 3b d5                              	cmp rdx, rbp
0x3dd:    0f 82 fb 00 00 00                     	jb 0x4de <.Lx86_code.part.0+0x4de>
0x3e3:    e9 9d 06 00 00                        	jmp 0xa85 <.Lx86_code.part.0+0xa85>
0x3e8:    48 89 f1                              	mov rcx, rsi
0x3eb:    48 8d 3d 6e a9 00 00                  	lea rdi, [rip + 0xa96e]
0x3f2:    48 c1 e9 03                           	shr rcx, 3
0x3f6:    83 e1 1f                              	and ecx, 0x1f
0x3f9:    0f b6 3c 0f                           	movzx edi, byte ptr [rdi + rcx]
0x3fd:    8b ce                                 	mov ecx, esi
0x3ff:    83 e1 07                              	and ecx, 7
0x402:    d3 ff                                 	sar edi, cl
0x404:    40 80 e7 01                           	and dil, 1
0x408:    0f 84 d8 01 00 00                     	je 0x5e6 <.Lx86_code.part.0+0x5e6>
0x40e:    80 7b 14 f3                           	cmp byte ptr [rbx + 0x14], 0xf3
0x412:    75 0a                                 	jne 0x41e <.Lx86_code.part.0+0x41e>
0x414:    40 80 fe 1e                           	cmp sil, 0x1e
0x418:    0f 84 d5 05 00 00                     	je 0x9f3 <.Lx86_code.part.0+0x9f3>
0x41e:    48 8b fa                              	mov rdi, rdx
0x421:    8b f0                                 	mov esi, eax
0x423:    4c 29 e7                              	sub rdi, r12
0x426:    40 88 7b 50                           	mov byte ptr [rbx + 0x50], dil
0x42a:    f6 43 10 10                           	test byte ptr [rbx + 0x10], 0x10
0x42e:    74 03                                 	je 0x433 <.Lx86_code.part.0+0x433>
0x430:    0f b7 f0                              	movzx esi, ax
0x433:    89 f1                                 	mov ecx, esi
0x435:    81 e1 f0 00 00 00                     	and ecx, 0xf0
0x43b:    81 f9 80 00 00 00                     	cmp ecx, 0x80
0x441:    74 38                                 	je 0x47b <.Lx86_code.part.0+0x47b>
0x443:    40 0f b6 ce                           	movzx ecx, sil
0x447:    40 80 fe 73                           	cmp sil, 0x73
0x44b:    77 07                                 	ja 0x454 <.Lx86_code.part.0+0x454>
0x44d:    83 f9 6f                              	cmp ecx, 0x6f
0x450:    76 20                                 	jbe 0x472 <.Lx86_code.part.0+0x472>
0x452:    eb 2e                                 	jmp 0x482 <.Lx86_code.part.0+0x482>
0x454:    81 e9 a4 00 00 00                     	sub ecx, 0xa4
0x45a:    83 f9 22                              	cmp ecx, 0x22
0x45d:    77 13                                 	ja 0x472 <.Lx86_code.part.0+0x472>
0x45f:    49 b8 01 01 40 40 07 00 00 00         	movabs r8, 0x740400101
0x469:    49 d3 e8                              	shr r8, cl
0x46c:    41 80 e0 01                           	and r8b, 1
0x470:    75 10                                 	jne 0x482 <.Lx86_code.part.0+0x482>
0x472:    45 31 c9                              	xor r9d, r9d
0x475:    4c 89 4b 48                           	mov qword ptr [rbx + 0x48], r9
0x479:    eb 14                                 	jmp 0x48f <.Lx86_code.part.0+0x48f>
0x47b:    b9 04 00 00 00                        	mov ecx, 4
0x480:    eb 05                                 	jmp 0x487 <.Lx86_code.part.0+0x487>
0x482:    b9 01 00 00 00                        	mov ecx, 1
0x487:    80 4b 11 08                           	or byte ptr [rbx + 0x11], 8
0x48b:    48 89 4b 48                           	mov qword ptr [rbx + 0x48], rcx
0x48f:    89 f1                                 	mov ecx, esi
0x491:    4c 8d 05 a8 a8 00 00                  	lea r8, [rip + 0xa8a8]
0x498:    83 e6 07                              	and esi, 7
0x49b:    c1 e9 03                              	shr ecx, 3
0x49e:    83 e1 1f                              	and ecx, 0x1f
0x4a1:    45 0f b6 04 08                        	movzx r8d, byte ptr [r8 + rcx]
0x4a6:    41 0f a3 f0                           	bt r8d, esi
0x4aa:    0f 82 f5 03 00 00                     	jb 0x8a5 <.Lx86_code.part.0+0x8a5>
0x4b0:    f6 43 11 08                           	test byte ptr [rbx + 0x11], 8
0x4b4:    0f 85 a3 01 00 00                     	jne 0x65d <.Lx86_code.part.0+0x65d>
0x4ba:    4c 89 23                              	mov qword ptr [rbx], r12
0x4bd:    48 8d 57 01                           	lea rdx, [rdi + 1]
0x4c1:    48 89 53 08                           	mov qword ptr [rbx + 8], rdx
0x4c5:    48 85 d2                              	test rdx, rdx
0x4c8:    0f 84 18 01 00 00                     	je 0x5e6 <.Lx86_code.part.0+0x5e6>
0x4ce:    83 e8 80                              	sub eax, -0x80
0x4d1:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x4d4:    b8 01 00 00 00                        	mov eax, 1
0x4d9:    e9 b8 05 00 00                        	jmp 0xa96 <.Lx86_code.part.0+0xa96>
0x4de:    8b 4b 28                              	mov ecx, dword ptr [rbx + 0x28]
0x4e1:    c1 e1 08                              	shl ecx, 8
0x4e4:    89 4b 28                              	mov dword ptr [rbx + 0x28], ecx
0x4e7:    0f b6 02                              	movzx eax, byte ptr [rdx]
0x4ea:    0b c1                                 	or eax, ecx
0x4ec:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x4ef:    89 c6                                 	mov esi, eax
0x4f1:    f6 43 10 10                           	test byte ptr [rbx + 0x10], 0x10
0x4f5:    74 06                                 	je 0x4fd <.Lx86_code.part.0+0x4fd>
0x4f7:    81 e6 ff ff ff 00                     	and esi, 0xffffff
0x4fd:    41 89 f0                              	mov r8d, esi
0x500:    41 81 e0 00 ff 00 00                  	and r8d, 0xff00
0x507:    41 81 f8 00 38 00 00                  	cmp r8d, 0x3800
0x50e:    75 49                                 	jne 0x559 <.Lx86_code.part.0+0x559>
0x510:    8b fe                                 	mov edi, esi
0x512:    48 8d 0d 07 a8 00 00                  	lea rcx, [rip + 0xa807]
0x519:    83 e6 07                              	and esi, 7
0x51c:    c1 ef 03                              	shr edi, 3
0x51f:    83 e7 1f                              	and edi, 0x1f
0x522:    0f b6 0c 39                           	movzx ecx, byte ptr [rcx + rdi]
0x526:    0f a3 f1                              	bt ecx, esi
0x529:    0f 83 b7 00 00 00                     	jae 0x5e6 <.Lx86_code.part.0+0x5e6>
0x52f:    45 31 c0                              	xor r8d, r8d
0x532:    48 89 d1                              	mov rcx, rdx
0x535:    4c 89 43 48                           	mov qword ptr [rbx + 0x48], r8
0x539:    4c 8d 05 c0 a7 00 00                  	lea r8, [rip + 0xa7c0]
0x540:    4c 29 e1                              	sub rcx, r12
0x543:    41 0f b6 3c 38                        	movzx edi, byte ptr [r8 + rdi]
0x548:    88 4b 50                              	mov byte ptr [rbx + 0x50], cl
0x54b:    0f a3 f7                              	bt edi, esi
0x54e:    0f 83 d9 00 00 00                     	jae 0x62d <.Lx86_code.part.0+0x62d>
0x554:    e9 4c 03 00 00                        	jmp 0x8a5 <.Lx86_code.part.0+0x8a5>
0x559:    40 0f b6 c6                           	movzx eax, sil
0x55d:    40 80 fe f0                           	cmp sil, 0xf0
0x561:    77 53                                 	ja 0x5b6 <.Lx86_code.part.0+0x5b6>
0x563:    3d cb 00 00 00                        	cmp eax, 0xcb
0x568:    77 12                                 	ja 0x57c <.Lx86_code.part.0+0x57c>
0x56a:    83 f8 39                              	cmp eax, 0x39
0x56d:    77 28                                 	ja 0x597 <.Lx86_code.part.0+0x597>
0x56f:    83 f8 37                              	cmp eax, 0x37
0x572:    77 2b                                 	ja 0x59f <.Lx86_code.part.0+0x59f>
0x574:    8d 48 e0                              	lea ecx, [rax - 0x20]
0x577:    83 f9 02                              	cmp ecx, 2
0x57a:    eb 21                                 	jmp 0x59d <.Lx86_code.part.0+0x59d>
0x57c:    48 bf 01 00 08 00 10 00 00 00         	movabs rdi, 0x1000080001
0x586:    8d 88 34 ff ff ff                     	lea ecx, [rax - 0xcc]
0x58c:    48 d3 ef                              	shr rdi, cl
0x58f:    40 80 e7 01                           	and dil, 1
0x593:    74 21                                 	je 0x5b6 <.Lx86_code.part.0+0x5b6>
0x595:    eb 08                                 	jmp 0x59f <.Lx86_code.part.0+0x59f>
0x597:    8d 48 a0                              	lea ecx, [rax - 0x60]
0x59a:    83 f9 03                              	cmp ecx, 3
0x59d:    77 17                                 	ja 0x5b6 <.Lx86_code.part.0+0x5b6>
0x59f:    48 89 d0                              	mov rax, rdx
0x5a2:    4c 29 e0                              	sub rax, r12
0x5a5:    88 43 50                              	mov byte ptr [rbx + 0x50], al
0x5a8:    41 81 f8 00 3a 00 00                  	cmp r8d, 0x3a00
0x5af:    74 6b                                 	je 0x61c <.Lx86_code.part.0+0x61c>
0x5b1:    e9 91 00 00 00                        	jmp 0x647 <.Lx86_code.part.0+0x647>
0x5b6:    8b ce                                 	mov ecx, esi
0x5b8:    8b fe                                 	mov edi, esi
0x5ba:    40 c0 ee 04                           	shr sil, 4
0x5be:    83 e1 0f                              	and ecx, 0xf
0x5c1:    40 80 fe 01                           	cmp sil, 1
0x5c5:    74 14                                 	je 0x5db <.Lx86_code.part.0+0x5db>
0x5c7:    40 80 fe 04                           	cmp sil, 4
0x5cb:    74 27                                 	je 0x5f4 <.Lx86_code.part.0+0x5f4>
0x5cd:    40 84 f6                              	test sil, sil
0x5d0:    75 14                                 	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0x5d2:    83 e7 0b                              	and edi, 0xb
0x5d5:    40 80 ff 03                           	cmp dil, 3
0x5d9:    eb 09                                 	jmp 0x5e4 <.Lx86_code.part.0+0x5e4>
0x5db:    80 f9 09                              	cmp cl, 9
0x5de:    77 0d                                 	ja 0x5ed <.Lx86_code.part.0+0x5ed>
0x5e0:    40 80 e7 0c                           	and dil, 0xc
0x5e4:    75 1c                                 	jne 0x602 <.Lx86_code.part.0+0x602>
0x5e6:    31 c0                                 	xor eax, eax
0x5e8:    e9 a9 04 00 00                        	jmp 0xa96 <.Lx86_code.part.0+0xa96>
0x5ed:    80 f9 0d                              	cmp cl, 0xd
0x5f0:    74 10                                 	je 0x602 <.Lx86_code.part.0+0x602>
0x5f2:    eb f2                                 	jmp 0x5e6 <.Lx86_code.part.0+0x5e6>
0x5f4:    be 57 1c 00 00                        	mov esi, 0x1c57
0x5f9:    48 d3 ee                              	shr rsi, cl
0x5fc:    40 80 e6 01                           	and sil, 1
0x600:    eb e2                                 	jmp 0x5e4 <.Lx86_code.part.0+0x5e4>
0x602:    48 8b ca                              	mov rcx, rdx
0x605:    4c 29 e1                              	sub rcx, r12
0x608:    88 4b 50                              	mov byte ptr [rbx + 0x50], cl
0x60b:    41 81 f8 00 3a 00 00                  	cmp r8d, 0x3a00
0x612:    75 33                                 	jne 0x647 <.Lx86_code.part.0+0x647>
0x614:    83 e8 4a                              	sub eax, 0x4a
0x617:    83 f8 02                              	cmp eax, 2
0x61a:    76 2b                                 	jbe 0x647 <.Lx86_code.part.0+0x647>
0x61c:    80 4b 11 08                           	or byte ptr [rbx + 0x11], 8
0x620:    48 c7 43 48 01 00 00 00               	mov qword ptr [rbx + 0x48], 1
0x628:    e9 78 02 00 00                        	jmp 0x8a5 <.Lx86_code.part.0+0x8a5>
0x62d:    f6 43 11 08                           	test byte ptr [rbx + 0x11], 8
0x631:    75 2a                                 	jne 0x65d <.Lx86_code.part.0+0x65d>
0x633:    4c 89 23                              	mov qword ptr [rbx], r12
0x636:    48 8d 51 01                           	lea rdx, [rcx + 1]
0x63a:    e9 82 fe ff ff                        	jmp 0x4c1 <.Lx86_code.part.0+0x4c1>
0x63f:    48 ff c2                              	inc rdx
0x642:    e9 d5 00 00 00                        	jmp 0x71c <.Lx86_code.part.0+0x71c>
0x647:    31 c0                                 	xor eax, eax
0x649:    48 89 43 48                           	mov qword ptr [rbx + 0x48], rax
0x64d:    e9 53 02 00 00                        	jmp 0x8a5 <.Lx86_code.part.0+0x8a5>
0x652:    48 8b d0                              	mov rdx, rax
0x655:    48 3b d5                              	cmp rdx, rbp
0x658:    e9 e8 f9 ff ff                        	jmp 0x45 <.Lx86_code.part.0+0x45>
0x65d:    48 ff c2                              	inc rdx
0x660:    48 3b d5                              	cmp rdx, rbp
0x663:    0f 83 1c 04 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x669:    48 8b 43 48                           	mov rax, qword ptr [rbx + 0x48]
0x66d:    0f b6 32                              	movzx esi, byte ptr [rdx]
0x670:    48 83 f8 01                           	cmp rax, 1
0x674:    75 1e                                 	jne 0x694 <.Lx86_code.part.0+0x694>
0x676:    4c 29 e0                              	sub rax, r12
0x679:    48 0f be ce                           	movsx rcx, sil
0x67d:    48 89 73 40                           	mov qword ptr [rbx + 0x40], rsi
0x681:    48 01 c2                              	add rdx, rax
0x684:    48 89 4b 38                           	mov qword ptr [rbx + 0x38], rcx
0x688:    4c 89 23                              	mov qword ptr [rbx], r12
0x68b:    48 89 53 08                           	mov qword ptr [rbx + 8], rdx
0x68f:    e9 37 01 00 00                        	jmp 0x7cb <.Lx86_code.part.0+0x7cb>
0x694:    48 b9 04 00 00 00 00 00 ff 00         	movabs rcx, 0xff000000000004
0x69e:    48 23 4b 10                           	and rcx, qword ptr [rbx + 0x10]
0x6a2:    48 8d 52 01                           	lea rdx, [rdx + 1]
0x6a6:    48 bf 04 00 00 00 00 00 66 00         	movabs rdi, 0x66000000000004
0x6b0:    48 39 f9                              	cmp rcx, rdi
0x6b3:    75 1e                                 	jne 0x6d3 <.Lx86_code.part.0+0x6d3>
0x6b5:    48 83 f8 02                           	cmp rax, 2
0x6b9:    75 0a                                 	jne 0x6c5 <.Lx86_code.part.0+0x6c5>
0x6bb:    48 c7 43 48 04 00 00 00               	mov qword ptr [rbx + 0x48], 4
0x6c3:    eb 0e                                 	jmp 0x6d3 <.Lx86_code.part.0+0x6d3>
0x6c5:    48 83 f8 04                           	cmp rax, 4
0x6c9:    75 08                                 	jne 0x6d3 <.Lx86_code.part.0+0x6d3>
0x6cb:    48 c7 43 48 02 00 00 00               	mov qword ptr [rbx + 0x48], 2
0x6d3:    48 39 ea                              	cmp rdx, rbp
0x6d6:    0f 83 a9 03 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x6dc:    0f b6 02                              	movzx eax, byte ptr [rdx]
0x6df:    48 8b 7b 48                           	mov rdi, qword ptr [rbx + 0x48]
0x6e3:    48 c1 e0 08                           	shl rax, 8
0x6e7:    48 0b c6                              	or rax, rsi
0x6ea:    48 83 ff 02                           	cmp rdi, 2
0x6ee:    0f 85 e5 00 00 00                     	jne 0x7d9 <.Lx86_code.part.0+0x7d9>
0x6f4:    48 89 43 40                           	mov qword ptr [rbx + 0x40], rax
0x6f8:    4c 29 e2                              	sub rdx, r12
0x6fb:    48 0f bf c0                           	movsx rax, ax
0x6ff:    48 89 43 38                           	mov qword ptr [rbx + 0x38], rax
0x703:    48 8d 42 01                           	lea rax, [rdx + 1]
0x707:    4c 89 23                              	mov qword ptr [rbx], r12
0x70a:    e9 b5 00 00 00                        	jmp 0x7c4 <.Lx86_code.part.0+0x7c4>
0x70f:    f6 c1 01                              	test cl, 1
0x712:    0f 84 92 02 00 00                     	je 0x9aa <.Lx86_code.part.0+0x9aa>
0x718:    48 83 c2 02                           	add rdx, 2
0x71c:    48 39 ea                              	cmp rdx, rbp
0x71f:    0f 83 60 03 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x725:    48 8d 42 01                           	lea rax, [rdx + 1]
0x729:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x72c:    48 3b c5                              	cmp rax, rbp
0x72f:    0f 83 50 03 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x735:    0f b6 42 01                           	movzx eax, byte ptr [rdx + 1]
0x739:    c1 e0 08                              	shl eax, 8
0x73c:    48 0b c1                              	or rax, rcx
0x73f:    48 8d 4a 02                           	lea rcx, [rdx + 2]
0x743:    48 39 e9                              	cmp rcx, rbp
0x746:    0f 83 39 03 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x74c:    0f b6 4a 02                           	movzx ecx, byte ptr [rdx + 2]
0x750:    48 8d 72 03                           	lea rsi, [rdx + 3]
0x754:    c1 e1 10                              	shl ecx, 0x10
0x757:    48 09 c1                              	or rcx, rax
0x75a:    48 39 ee                              	cmp rsi, rbp
0x75d:    0f 83 22 03 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x763:    0f b6 42 03                           	movzx eax, byte ptr [rdx + 3]
0x767:    c1 e0 18                              	shl eax, 0x18
0x76a:    0b c1                                 	or eax, ecx
0x76c:    8a 4b 11                              	mov cl, byte ptr [rbx + 0x11]
0x76f:    48 98                                 	cdqe 
0x771:    48 89 43 30                           	mov qword ptr [rbx + 0x30], rax
0x775:    f6 c1 04                              	test cl, 4
0x778:    0f 84 10 01 00 00                     	je 0x88e <.Lx86_code.part.0+0x88e>
0x77e:    48 8d 42 04                           	lea rax, [rdx + 4]
0x782:    48 39 e8                              	cmp rax, rbp
0x785:    0f 83 fa 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x78b:    48 8d 42 05                           	lea rax, [rdx + 5]
0x78f:    48 3b c5                              	cmp rax, rbp
0x792:    0f 83 ed 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x798:    48 8d 42 06                           	lea rax, [rdx + 6]
0x79c:    48 3b c5                              	cmp rax, rbp
0x79f:    0f 83 e0 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x7a5:    48 8d 42 07                           	lea rax, [rdx + 7]
0x7a9:    48 39 e8                              	cmp rax, rbp
0x7ac:    0f 83 d3 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x7b2:    80 e1 08                              	and cl, 8
0x7b5:    0f 85 e1 00 00 00                     	jne 0x89c <.Lx86_code.part.0+0x89c>
0x7bb:    4c 89 23                              	mov qword ptr [rbx], r12
0x7be:    4c 29 e0                              	sub rax, r12
0x7c1:    48 ff c0                              	inc rax
0x7c4:    48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x7c8:    48 85 c0                              	test rax, rax
0x7cb:    0f 84 15 fe ff ff                     	je 0x5e6 <.Lx86_code.part.0+0x5e6>
0x7d1:    8b 43 28                              	mov eax, dword ptr [rbx + 0x28]
0x7d4:    e9 f5 fc ff ff                        	jmp 0x4ce <.Lx86_code.part.0+0x4ce>
0x7d9:    48 8d 4a 01                           	lea rcx, [rdx + 1]
0x7dd:    48 39 e9                              	cmp rcx, rbp
0x7e0:    0f 83 9f 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x7e6:    0f b6 4a 01                           	movzx ecx, byte ptr [rdx + 1]
0x7ea:    48 8d 72 02                           	lea rsi, [rdx + 2]
0x7ee:    48 c1 e1 10                           	shl rcx, 0x10
0x7f2:    48 0b c8                              	or rcx, rax
0x7f5:    48 39 ee                              	cmp rsi, rbp
0x7f8:    0f 83 87 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x7fe:    0f b6 42 02                           	movzx eax, byte ptr [rdx + 2]
0x802:    48 c1 e0 18                           	shl rax, 0x18
0x806:    48 0b c1                              	or rax, rcx
0x809:    48 83 ff 04                           	cmp rdi, 4
0x80d:    75 08                                 	jne 0x817 <.Lx86_code.part.0+0x817>
0x80f:    48 89 43 40                           	mov qword ptr [rbx + 0x40], rax
0x813:    48 98                                 	cdqe 
0x815:    eb 64                                 	jmp 0x87b <.Lx86_code.part.0+0x87b>
0x817:    48 8d 4a 03                           	lea rcx, [rdx + 3]
0x81b:    48 3b cd                              	cmp rcx, rbp
0x81e:    0f 83 61 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x824:    0f b6 4a 03                           	movzx ecx, byte ptr [rdx + 3]
0x828:    48 c1 e1 20                           	shl rcx, 0x20
0x82c:    48 09 c1                              	or rcx, rax
0x82f:    48 8d 42 04                           	lea rax, [rdx + 4]
0x833:    48 3b c5                              	cmp rax, rbp
0x836:    0f 83 49 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x83c:    0f b6 42 04                           	movzx eax, byte ptr [rdx + 4]
0x840:    48 c1 e0 28                           	shl rax, 0x28
0x844:    48 09 c8                              	or rax, rcx
0x847:    48 8d 4a 05                           	lea rcx, [rdx + 5]
0x84b:    48 3b cd                              	cmp rcx, rbp
0x84e:    0f 83 31 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x854:    0f b6 4a 05                           	movzx ecx, byte ptr [rdx + 5]
0x858:    48 8d 72 06                           	lea rsi, [rdx + 6]
0x85c:    48 c1 e1 30                           	shl rcx, 0x30
0x860:    48 09 c1                              	or rcx, rax
0x863:    48 3b f5                              	cmp rsi, rbp
0x866:    0f 83 19 02 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x86c:    0f b6 42 06                           	movzx eax, byte ptr [rdx + 6]
0x870:    48 c1 e0 38                           	shl rax, 0x38
0x874:    48 09 c8                              	or rax, rcx
0x877:    48 89 43 40                           	mov qword ptr [rbx + 0x40], rax
0x87b:    48 89 43 38                           	mov qword ptr [rbx + 0x38], rax
0x87f:    4c 29 e6                              	sub rsi, r12
0x882:    4c 89 23                              	mov qword ptr [rbx], r12
0x885:    48 8d 46 01                           	lea rax, [rsi + 1]
0x889:    e9 36 ff ff ff                        	jmp 0x7c4 <.Lx86_code.part.0+0x7c4>
0x88e:    80 e1 08                              	and cl, 8
0x891:    74 ec                                 	je 0x87f <.Lx86_code.part.0+0x87f>
0x893:    48 83 c2 04                           	add rdx, 4
0x897:    e9 c4 fd ff ff                        	jmp 0x660 <.Lx86_code.part.0+0x660>
0x89c:    48 83 c2 08                           	add rdx, 8
0x8a0:    e9 bb fd ff ff                        	jmp 0x660 <.Lx86_code.part.0+0x660>
0x8a5:    48 ff c2                              	inc rdx
0x8a8:    48 39 ea                              	cmp rdx, rbp
0x8ab:    0f 83 d4 01 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x8b1:    40 8a 73 10                           	mov sil, byte ptr [rbx + 0x10]
0x8b5:    8b c6                                 	mov eax, esi
0x8b7:    83 c8 40                              	or eax, 0x40
0x8ba:    88 43 10                              	mov byte ptr [rbx + 0x10], al
0x8bd:    8a 02                                 	mov al, byte ptr [rdx]
0x8bf:    88 43 1c                              	mov byte ptr [rbx + 0x1c], al
0x8c2:    c0 e8 06                              	shr al, 6
0x8c5:    88 43 1d                              	mov byte ptr [rbx + 0x1d], al
0x8c8:    0f b6 0a                              	movzx ecx, byte ptr [rdx]
0x8cb:    c1 f9 03                              	sar ecx, 3
0x8ce:    83 e1 07                              	and ecx, 7
0x8d1:    88 4b 1e                              	mov byte ptr [rbx + 0x1e], cl
0x8d4:    40 8a 3a                              	mov dil, byte ptr [rdx]
0x8d7:    83 e7 07                              	and edi, 7
0x8da:    40 88 7b 1f                           	mov byte ptr [rbx + 0x1f], dil
0x8de:    3c 03                                 	cmp al, 3
0x8e0:    75 11                                 	jne 0x8f3 <.Lx86_code.part.0+0x8f3>
0x8e2:    8b 43 1c                              	mov eax, dword ptr [rbx + 0x1c]
0x8e5:    25 00 ff 00 ff                        	and eax, 0xff00ff00
0x8ea:    3d 00 00 00 05                        	cmp eax, 0x5000000
0x8ef:    75 21                                 	jne 0x912 <.Lx86_code.part.0+0x912>
0x8f1:    eb 1b                                 	jmp 0x90e <.Lx86_code.part.0+0x90e>
0x8f3:    40 80 ff 04                           	cmp dil, 4
0x8f7:    75 07                                 	jne 0x900 <.Lx86_code.part.0+0x900>
0x8f9:    83 ce c0                              	or esi, 0xffffffc0
0x8fc:    40 88 73 10                           	mov byte ptr [rbx + 0x10], sil
0x900:    3c 01                                 	cmp al, 1
0x902:    75 06                                 	jne 0x90a <.Lx86_code.part.0+0x90a>
0x904:    80 4b 11 03                           	or byte ptr [rbx + 0x11], 3
0x908:    eb 08                                 	jmp 0x912 <.Lx86_code.part.0+0x912>
0x90a:    3c 02                                 	cmp al, 2
0x90c:    75 d4                                 	jne 0x8e2 <.Lx86_code.part.0+0x8e2>
0x90e:    80 4b 11 01                           	or byte ptr [rbx + 0x11], 1
0x912:    8b 43 28                              	mov eax, dword ptr [rbx + 0x28]
0x915:    8d b0 0a ff ff ff                     	lea esi, [rax - 0xf6]
0x91b:    83 fe 01                              	cmp esi, 1
0x91e:    77 0e                                 	ja 0x92e <.Lx86_code.part.0+0x92e>
0x920:    84 c9                                 	test cl, cl
0x922:    74 0a                                 	je 0x92e <.Lx86_code.part.0+0x92e>
0x924:    33 c9                                 	xor ecx, ecx
0x926:    80 63 11 f7                           	and byte ptr [rbx + 0x11], 0xf7
0x92a:    48 89 4b 48                           	mov qword ptr [rbx + 0x48], rcx
0x92e:    80 7b 10 00                           	cmp byte ptr [rbx + 0x10], 0
0x932:    79 0e                                 	jns 0x942 <.Lx86_code.part.0+0x942>
0x934:    48 8d 72 01                           	lea rsi, [rdx + 1]
0x938:    48 39 ee                              	cmp rsi, rbp
0x93b:    72 1e                                 	jb 0x95b <.Lx86_code.part.0+0x95b>
0x93d:    e9 43 01 00 00                        	jmp 0xa85 <.Lx86_code.part.0+0xa85>
0x942:    8a 4b 11                              	mov cl, byte ptr [rbx + 0x11]
0x945:    f6 c1 02                              	test cl, 2
0x948:    75 7d                                 	jne 0x9c7 <.Lx86_code.part.0+0x9c7>
0x94a:    f6 c1 01                              	test cl, 1
0x94d:    0f 85 ec fc ff ff                     	jne 0x63f <.Lx86_code.part.0+0x63f>
0x953:    80 e1 08                              	and cl, 8
0x956:    e9 84 00 00 00                        	jmp 0x9df <.Lx86_code.part.0+0x9df>
0x95b:    8a 4a 01                              	mov cl, byte ptr [rdx + 1]
0x95e:    88 4b 21                              	mov byte ptr [rbx + 0x21], cl
0x961:    c0 e9 06                              	shr cl, 6
0x964:    88 4b 22                              	mov byte ptr [rbx + 0x22], cl
0x967:    0f b6 4a 01                           	movzx ecx, byte ptr [rdx + 1]
0x96b:    c1 f9 03                              	sar ecx, 3
0x96e:    83 e1 07                              	and ecx, 7
0x971:    88 4b 23                              	mov byte ptr [rbx + 0x23], cl
0x974:    8a 4a 01                              	mov cl, byte ptr [rdx + 1]
0x977:    83 e1 07                              	and ecx, 7
0x97a:    88 4b 24                              	mov byte ptr [rbx + 0x24], cl
0x97d:    80 f9 05                              	cmp cl, 5
0x980:    75 16                                 	jne 0x998 <.Lx86_code.part.0+0x998>
0x982:    8a 4b 1d                              	mov cl, byte ptr [rbx + 0x1d]
0x985:    f6 c1 fd                              	test cl, 0xfd
0x988:    75 06                                 	jne 0x990 <.Lx86_code.part.0+0x990>
0x98a:    80 4b 11 01                           	or byte ptr [rbx + 0x11], 1
0x98e:    eb 08                                 	jmp 0x998 <.Lx86_code.part.0+0x998>
0x990:    fe c9                                 	dec cl
0x992:    75 04                                 	jne 0x998 <.Lx86_code.part.0+0x998>
0x994:    80 4b 11 03                           	or byte ptr [rbx + 0x11], 3
0x998:    8a 4b 11                              	mov cl, byte ptr [rbx + 0x11]
0x99b:    f6 c1 02                              	test cl, 2
0x99e:    0f 84 6b fd ff ff                     	je 0x70f <.Lx86_code.part.0+0x70f>
0x9a4:    48 83 c2 02                           	add rdx, 2
0x9a8:    eb 20                                 	jmp 0x9ca <.Lx86_code.part.0+0x9ca>
0x9aa:    80 e1 08                              	and cl, 8
0x9ad:    74 09                                 	je 0x9b8 <.Lx86_code.part.0+0x9b8>
0x9af:    48 83 c2 02                           	add rdx, 2
0x9b3:    e9 a8 fc ff ff                        	jmp 0x660 <.Lx86_code.part.0+0x660>
0x9b8:    4c 29 e6                              	sub rsi, r12
0x9bb:    4c 89 23                              	mov qword ptr [rbx], r12
0x9be:    48 8d 56 01                           	lea rdx, [rsi + 1]
0x9c2:    e9 fa fa ff ff                        	jmp 0x4c1 <.Lx86_code.part.0+0x4c1>
0x9c7:    48 ff c2                              	inc rdx
0x9ca:    48 3b d5                              	cmp rdx, rbp
0x9cd:    0f 83 b2 00 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0x9d3:    48 0f be 0a                           	movsx rcx, byte ptr [rdx]
0x9d7:    f6 43 11 08                           	test byte ptr [rbx + 0x11], 8
0x9db:    48 89 4b 30                           	mov qword ptr [rbx + 0x30], rcx
0x9df:    0f 85 78 fc ff ff                     	jne 0x65d <.Lx86_code.part.0+0x65d>
0x9e5:    4c 29 e2                              	sub rdx, r12
0x9e8:    4c 89 23                              	mov qword ptr [rbx], r12
0x9eb:    48 ff c2                              	inc rdx
0x9ee:    e9 ce fa ff ff                        	jmp 0x4c1 <.Lx86_code.part.0+0x4c1>
0x9f3:    48 8d 42 01                           	lea rax, [rdx + 1]
0x9f7:    48 3b c5                              	cmp rax, rbp
0x9fa:    0f 83 85 00 00 00                     	jae 0xa85 <.Lx86_code.part.0+0xa85>
0xa00:    48 8d 73 10                           	lea rsi, [rbx + 0x10]
0xa04:    33 c0                                 	xor eax, eax
0xa06:    b9 12 00 00 00                        	mov ecx, 0x12
0xa0b:    48 89 f7                              	mov rdi, rsi
0xa0e:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa10:    31 c0                                 	xor eax, eax
0xa12:    4c 89 23                              	mov qword ptr [rbx], r12
0xa15:    48 c7 43 08 04 00 00 00               	mov qword ptr [rbx + 8], 4
0xa1d:    80 7a 01 fa                           	cmp byte ptr [rdx + 1], 0xfa
0xa21:    0f 94 c0                              	sete al
0xa24:    8d 84 00 fc a5 00 00                  	lea eax, [rax + rax + 0xa5fc]
0xa2b:    e9 a1 fa ff ff                        	jmp 0x4d1 <.Lx86_code.part.0+0x4d1>
0xa30:    48 8d 4a 02                           	lea rcx, [rdx + 2]
0xa34:    48 39 e9                              	cmp rcx, rbp
0xa37:    73 4c                                 	jae 0xa85 <.Lx86_code.part.0+0xa85>
0xa39:    40 8a 72 02                           	mov sil, byte ptr [rdx + 2]
0xa3d:    44 89 c1                              	mov ecx, r8d
0xa40:    83 e1 1f                              	and ecx, 0x1f
0xa43:    40 88 73 1a                           	mov byte ptr [rbx + 0x1a], sil
0xa47:    40 84 f6                              	test sil, sil
0xa4a:    78 04                                 	js 0xa50 <.Lx86_code.part.0+0xa50>
0xa4c:    80 4b 1b 08                           	or byte ptr [rbx + 0x1b], 8
0xa50:    c1 e0 08                              	shl eax, 8
0xa53:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0xa56:    80 f9 02                              	cmp cl, 2
0xa59:    75 05                                 	jne 0xa60 <.Lx86_code.part.0+0xa60>
0xa5b:    83 c8 38                              	or eax, 0x38
0xa5e:    eb 08                                 	jmp 0xa68 <.Lx86_code.part.0+0xa68>
0xa60:    80 f9 03                              	cmp cl, 3
0xa63:    75 0f                                 	jne 0xa74 <.Lx86_code.part.0+0xa74>
0xa65:    83 c8 3a                              	or eax, 0x3a
0xa68:    89 43 28                              	mov dword ptr [rbx + 0x28], eax
0xa6b:    48 83 c2 03                           	add rdx, 3
0xa6f:    e9 66 f9 ff ff                        	jmp 0x3da <.Lx86_code.part.0+0x3da>
0xa74:    fe c9                                 	dec cl
0xa76:    0f 85 6a fb ff ff                     	jne 0x5e6 <.Lx86_code.part.0+0x5e6>
0xa7c:    48 83 c2 03                           	add rdx, 3
0xa80:    e9 24 f7 ff ff                        	jmp 0x1a9 <.Lx86_code.part.0+0x1a9>
0xa85:    b9 16 00 00 00                        	mov ecx, 0x16
0xa8a:    31 c0                                 	xor eax, eax
0xa8c:    48 8b fb                              	mov rdi, rbx
0xa8f:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa91:    e9 50 fb ff ff                        	jmp 0x5e6 <.Lx86_code.part.0+0x5e6>
0xa96:    48 83 c4 20                           	add rsp, 0x20
0xa9a:    5b                                    	pop rbx
0xa9b:    5d                                    	pop rbp
0xa9c:    41 5c                                 	pop r12
0xa9e:    c3                                    	ret 
; section: .text.lzma_block_buffer_encoda
; function: .Llzma_block_buffer_encode.0 at 0xaa0 -- 0xaeb
0xaa0:    f3 0f 1e fa                           	endbr64 
0xaa4:    48 29 fe                              	sub rsi, rdi
0xaa7:    c7 44 24 f8 e2 05 00 00               	mov dword ptr [rsp - 8], 0x5e2
0xaaf:    89 d0                                 	mov eax, edx
0xab1:    31 d2                                 	xor edx, edx
0xab3:    c7 44 24 fc 23 f2 00 00               	mov dword ptr [rsp - 4], 0xf223
0xabb:    48 83 fe 03                           	cmp rsi, 3
0xabf:    7e 27                                 	jle 0xae8 <.Llzma_block_buffer_encode.0+0x48>
0xac1:    8b 54 24 f8                           	mov edx, dword ptr [rsp - 8]
0xac5:    c1 e2 10                              	shl edx, 0x10
0xac8:    89 54 24 f8                           	mov dword ptr [rsp - 8], edx
0xacc:    8b 54 24 f8                           	mov edx, dword ptr [rsp - 8]
0xad0:    09 c2                                 	or edx, eax
0xad2:    89 54 24 f8                           	mov dword ptr [rsp - 8], edx
0xad6:    8b 44 24 f8                           	mov eax, dword ptr [rsp - 8]
0xada:    8b 54 24 fc                           	mov edx, dword ptr [rsp - 4]
0xade:    03 07                                 	add eax, dword ptr [rdi]
0xae0:    39 d0                                 	cmp eax, edx
0xae2:    0f 94 c2                              	sete dl
0xae5:    0f b6 d2                              	movzx edx, dl
0xae8:    89 d0                                 	mov eax, edx
0xaea:    c3                                    	ret 
; section: .text.lzma_raw_coder_memusaga
; function: function_af0 at 0xaf0 -- 0xb75
0xaf0:    55                                    	push rbp
0xaf1:    49 89 f8                              	mov r8, rdi
0xaf4:    48 89 d5                              	mov rbp, rdx
0xaf7:    53                                    	push rbx
0xaf8:    48 83 ec 68                           	sub rsp, 0x68
0xafc:    85 c9                                 	test ecx, ecx
0xafe:    74 1e                                 	je 0xb1e <function_af0+0x2e>
0xb00:    ba 30 e2 00 00                        	mov edx, 0xe230
0xb05:    e8 96 ff ff ff                        	call 0xaa0 <.Llzma_block_buffer_encode.0>
0xb0a:    85 c0                                 	test eax, eax
0xb0c:    74 60                                 	je 0xb6e <function_af0+0x7e>
0xb0e:    48 85 ed                              	test rbp, rbp
0xb11:    74 04                                 	je 0xb17 <function_af0+0x27>
0xb13:    48 89 7d 00                           	mov qword ptr [rbp], rdi
0xb17:    b8 01 00 00 00                        	mov eax, 1
0xb1c:    eb 50                                 	jmp 0xb6e <function_af0+0x7e>
0xb1e:    89 cb                                 	mov ebx, ecx
0xb20:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xb25:    b9 16 00 00 00                        	mov ecx, 0x16
0xb2a:    48 89 f2                              	mov rdx, rsi
0xb2d:    89 d8                                 	mov eax, ebx
0xb2f:    4c 89 c6                              	mov rsi, r8
0xb32:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xb34:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xb39:    e8 c2 f4 ff ff                        	call 0 <.Lx86_code.part.0>
0xb3e:    85 c0                                 	test eax, eax
0xb40:    74 2a                                 	je 0xb6c <function_af0+0x7c>
0xb42:    81 7c 24 30 9f 0f 00 00               	cmp dword ptr [rsp + 0x30], 0xf9f
0xb4a:    75 20                                 	jne 0xb6c <function_af0+0x7c>
0xb4c:    48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0xb51:    48 03 44 24 08                        	add rax, qword ptr [rsp + 8]
0xb56:    a8 0f                                 	test al, 0xf
0xb58:    75 12                                 	jne 0xb6c <function_af0+0x7c>
0xb5a:    48 85 ed                              	test rbp, rbp
0xb5d:    75 07                                 	jne 0xb66 <function_af0+0x76>
0xb5f:    bb 01 00 00 00                        	mov ebx, 1
0xb64:    eb 06                                 	jmp 0xb6c <function_af0+0x7c>
0xb66:    48 89 45 00                           	mov qword ptr [rbp], rax
0xb6a:    eb f3                                 	jmp 0xb5f <function_af0+0x6f>
0xb6c:    89 d8                                 	mov eax, ebx
0xb6e:    48 83 c4 68                           	add rsp, 0x68
0xb72:    5b                                    	pop rbx
0xb73:    5d                                    	pop rbp
0xb74:    c3                                    	ret 
; section: .text.lzma2_encoder_inia
; function: .Llzma2_encoder_init.1 at 0xb80 -- 0xc70
0xb80:    f3 0f 1e fa                           	endbr64 
0xb84:    41 57                                 	push r15
0xb86:    31 c0                                 	xor eax, eax
0xb88:    41 56                                 	push r14
0xb8a:    41 55                                 	push r13
0xb8c:    49 89 d5                              	mov r13, rdx
0xb8f:    41 54                                 	push r12
0xb91:    55                                    	push rbp
0xb92:    4c 89 c5                              	mov rbp, r8
0xb95:    53                                    	push rbx
0xb96:    48 89 fb                              	mov rbx, rdi
0xb99:    48 83 ec 28                           	sub rsp, 0x28
0xb9d:    48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0xba2:    48 8d 44 24 18                        	lea rax, [rsp + 0x18]
0xba7:    44 89 4c 24 04                        	mov dword ptr [rsp + 4], r9d
0xbac:    48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xbb1:    48 85 f6                              	test rsi, rsi
0xbb4:    74 58                                 	je 0xc0e <.Llzma2_encoder_init.1+0x8e>
0xbb6:    49 89 f6                              	mov r14, rsi
0xbb9:    49 89 cc                              	mov r12, rcx
0xbbc:    49 89 ff                              	mov r15, rdi
0xbbf:    4d 39 fc                              	cmp r12, r15
0xbc2:    72 0c                                 	jb 0xbd0 <.Llzma2_encoder_init.1+0x50>
0xbc4:    4c 8b 7c 24 18                        	mov r15, qword ptr [rsp + 0x18]
0xbc9:    4d 85 ff                              	test r15, r15
0xbcc:    75 1f                                 	jne 0xbed <.Llzma2_encoder_init.1+0x6d>
0xbce:    eb 37                                 	jmp 0xc07 <.Llzma2_encoder_init.1+0x87>
0xbd0:    8b 4c 24 04                           	mov ecx, dword ptr [rsp + 4]
0xbd4:    48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xbd9:    48 89 ee                              	mov rsi, rbp
0xbdc:    4c 89 ff                              	mov rdi, r15
0xbdf:    e8 0c ff ff ff                        	call 0xaf0 <function_af0>
0xbe4:    85 c0                                 	test eax, eax
0xbe6:    75 dc                                 	jne 0xbc4 <.Llzma2_encoder_init.1+0x44>
0xbe8:    49 ff cf                              	dec r15
0xbeb:    eb d2                                 	jmp 0xbbf <.Llzma2_encoder_init.1+0x3f>
0xbed:    4d 39 e7                              	cmp r15, r12
0xbf0:    75 19                                 	jne 0xc0b <.Llzma2_encoder_init.1+0x8b>
0xbf2:    8b 4c 24 04                           	mov ecx, dword ptr [rsp + 4]
0xbf6:    31 d2                                 	xor edx, edx
0xbf8:    48 89 ee                              	mov rsi, rbp
0xbfb:    4c 89 e7                              	mov rdi, r12
0xbfe:    e8 ed fe ff ff                        	call 0xaf0 <function_af0>
0xc03:    85 c0                                 	test eax, eax
0xc05:    75 04                                 	jne 0xc0b <.Llzma2_encoder_init.1+0x8b>
0xc07:    31 c0                                 	xor eax, eax
0xc09:    eb 56                                 	jmp 0xc61 <.Llzma2_encoder_init.1+0xe1>
0xc0b:    4d 89 3e                              	mov qword ptr [r14], r15
0xc0e:    48 ff c3                              	inc rbx
0xc11:    4c 8d 75 fc                           	lea r14, [rbp - 4]
0xc15:    4d 85 ed                              	test r13, r13
0xc18:    75 1f                                 	jne 0xc39 <.Llzma2_encoder_init.1+0xb9>
0xc1a:    b8 01 00 00 00                        	mov eax, 1
0xc1f:    eb 40                                 	jmp 0xc61 <.Llzma2_encoder_init.1+0xe1>
0xc21:    8b 4c 24 04                           	mov ecx, dword ptr [rsp + 4]
0xc25:    31 d2                                 	xor edx, edx
0xc27:    48 89 ee                              	mov rsi, rbp
0xc2a:    48 89 df                              	mov rdi, rbx
0xc2d:    e8 be fe ff ff                        	call 0xaf0 <function_af0>
0xc32:    85 c0                                 	test eax, eax
0xc34:    75 22                                 	jne 0xc58 <.Llzma2_encoder_init.1+0xd8>
0xc36:    48 ff c3                              	inc rbx
0xc39:    4c 39 f3                              	cmp rbx, r14
0xc3c:    72 e3                                 	jb 0xc21 <.Llzma2_encoder_init.1+0xa1>
0xc3e:    49 39 de                              	cmp r14, rbx
0xc41:    75 15                                 	jne 0xc58 <.Llzma2_encoder_init.1+0xd8>
0xc43:    8b 4c 24 04                           	mov ecx, dword ptr [rsp + 4]
0xc47:    31 d2                                 	xor edx, edx
0xc49:    48 89 ee                              	mov rsi, rbp
0xc4c:    48 89 df                              	mov rdi, rbx
0xc4f:    e8 9c fe ff ff                        	call 0xaf0 <function_af0>
0xc54:    85 c0                                 	test eax, eax
0xc56:    74 03                                 	je 0xc5b <.Llzma2_encoder_init.1+0xdb>
0xc58:    48 89 dd                              	mov rbp, rbx
0xc5b:    49 89 6d 00                           	mov qword ptr [r13], rbp
0xc5f:    eb b9                                 	jmp 0xc1a <.Llzma2_encoder_init.1+0x9a>
0xc61:    48 83 c4 28                           	add rsp, 0x28
0xc65:    5b                                    	pop rbx
0xc66:    5d                                    	pop rbp
0xc67:    41 5c                                 	pop r12
0xc69:    41 5d                                 	pop r13
0xc6b:    41 5e                                 	pop r14
0xc6d:    41 5f                                 	pop r15
0xc6f:    c3                                    	ret 
; section: .text.lzma_optimum_normaa
; function: .Llzma_optimum_normal.0 at 0xc70 -- 0xd12
0xc70:    f3 0f 1e fa                           	endbr64 
0xc74:    41 55                                 	push r13
0xc76:    49 89 d5                              	mov r13, rdx
0xc79:    ba 04 00 00 00                        	mov edx, 4
0xc7e:    41 54                                 	push r12
0xc80:    49 89 f4                              	mov r12, rsi
0xc83:    be 81 00 00 00                        	mov esi, 0x81
0xc88:    55                                    	push rbp
0xc89:    48 89 fd                              	mov rbp, rdi
0xc8c:    31 ff                                 	xor edi, edi
0xc8e:    53                                    	push rbx
0xc8f:    48 89 cb                              	mov rbx, rcx
0xc92:    b9 07 00 00 00                        	mov ecx, 7
0xc97:    48 83 ec 68                           	sub rsp, 0x68
0xc9b:    e8 10 9f 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0xca0:    85 c0                                 	test eax, eax
0xca2:    75 04                                 	jne 0xca8 <.Llzma_optimum_normal.0+0x38>
0xca4:    33 c0                                 	xor eax, eax
0xca6:    eb 5f                                 	jmp 0xd07 <.Llzma_optimum_normal.0+0x97>
0xca8:    33 c0                                 	xor eax, eax
0xcaa:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xcaf:    b9 16 00 00 00                        	mov ecx, 0x16
0xcb4:    48 85 db                              	test rbx, rbx
0xcb7:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xcb9:    48 8d 44 24 08                        	lea rax, [rsp + 8]
0xcbe:    48 0f 44 d8                           	cmove rbx, rax
0xcc2:    4c 39 e5                              	cmp rbp, r12
0xcc5:    73 dd                                 	jae 0xca4 <.Llzma_optimum_normal.0+0x34>
0xcc7:    4c 89 e2                              	mov rdx, r12
0xcca:    48 8b f5                              	mov rsi, rbp
0xccd:    48 89 df                              	mov rdi, rbx
0xcd0:    e8 2b f3 ff ff                        	call 0 <.Lx86_code.part.0>
0xcd5:    85 c0                                 	test eax, eax
0xcd7:    74 24                                 	je 0xcfd <.Llzma_optimum_normal.0+0x8d>
0xcd9:    81 7b 28 68 01 00 00                  	cmp dword ptr [rbx + 0x28], 0x168
0xce0:    75 15                                 	jne 0xcf7 <.Llzma_optimum_normal.0+0x87>
0xce2:    4d 85 ed                              	test r13, r13
0xce5:    74 1b                                 	je 0xd02 <.Llzma_optimum_normal.0+0x92>
0xce7:    48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xceb:    48 03 43 38                           	add rax, qword ptr [rbx + 0x38]
0xcef:    48 03 03                              	add rax, qword ptr [rbx]
0xcf2:    4c 39 e8                              	cmp rax, r13
0xcf5:    74 0b                                 	je 0xd02 <.Llzma_optimum_normal.0+0x92>
0xcf7:    48 03 6b 08                           	add rbp, qword ptr [rbx + 8]
0xcfb:    eb c5                                 	jmp 0xcc2 <.Llzma_optimum_normal.0+0x52>
0xcfd:    48 ff c5                              	inc rbp
0xd00:    eb c0                                 	jmp 0xcc2 <.Llzma_optimum_normal.0+0x52>
0xd02:    b8 01 00 00 00                        	mov eax, 1
0xd07:    48 83 c4 68                           	add rsp, 0x68
0xd0b:    5b                                    	pop rbx
0xd0c:    5d                                    	pop rbp
0xd0d:    41 5c                                 	pop r12
0xd0f:    41 5d                                 	pop r13
0xd11:    c3                                    	ret 
; section: .text.lzma_filters_updata
; function: .Llzma_filters_update.0 at 0xd20 -- 0xdd5
0xd20:    f3 0f 1e fa                           	endbr64 
0xd24:    41 56                                 	push r14
0xd26:    31 c0                                 	xor eax, eax
0xd28:    41 89 d6                              	mov r14d, edx
0xd2b:    41 55                                 	push r13
0xd2d:    41 89 cd                              	mov r13d, ecx
0xd30:    b9 16 00 00 00                        	mov ecx, 0x16
0xd35:    41 54                                 	push r12
0xd37:    49 89 f4                              	mov r12, rsi
0xd3a:    55                                    	push rbp
0xd3b:    4c 89 c5                              	mov rbp, r8
0xd3e:    53                                    	push rbx
0xd3f:    48 89 fb                              	mov rbx, rdi
0xd42:    48 83 ec 60                           	sub rsp, 0x60
0xd46:    4d 85 c0                              	test r8, r8
0xd49:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xd4e:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xd50:    48 8d 44 24 08                        	lea rax, [rsp + 8]
0xd55:    48 0f 44 e8                           	cmove rbp, rax
0xd59:    4c 39 e3                              	cmp rbx, r12
0xd5c:    73 61                                 	jae 0xdbf <.Llzma_filters_update.0+0x9f>
0xd5e:    4c 89 e2                              	mov rdx, r12
0xd61:    48 89 de                              	mov rsi, rbx
0xd64:    48 89 ef                              	mov rdi, rbp
0xd67:    e8 94 f2 ff ff                        	call 0 <.Lx86_code.part.0>
0xd6c:    85 c0                                 	test eax, eax
0xd6e:    74 4a                                 	je 0xdba <.Llzma_filters_update.0+0x9a>
0xd70:    8b 45 1c                              	mov eax, dword ptr [rbp + 0x1c]
0xd73:    25 00 ff 00 ff                        	and eax, 0xff00ff00
0xd78:    3d 00 00 00 05                        	cmp eax, 0x5000000
0xd7d:    75 35                                 	jne 0xdb4 <.Llzma_filters_update.0+0x94>
0xd7f:    8a 45 1b                              	mov al, byte ptr [rbp + 0x1b]
0xd82:    83 e0 48                              	and eax, 0x48
0xd85:    3c 48                                 	cmp al, 0x48
0xd87:    0f 94 c0                              	sete al
0xd8a:    0f b6 c0                              	movzx eax, al
0xd8d:    44 39 f0                              	cmp eax, r14d
0xd90:    74 05                                 	je 0xd97 <.Llzma_filters_update.0+0x77>
0xd92:    45 85 ed                              	test r13d, r13d
0xd95:    75 1d                                 	jne 0xdb4 <.Llzma_filters_update.0+0x94>
0xd97:    8b 45 28                              	mov eax, dword ptr [rbp + 0x28]
0xd9a:    3d 0d 01 00 00                        	cmp eax, 0x10d
0xd9f:    74 22                                 	je 0xdc3 <.Llzma_filters_update.0+0xa3>
0xda1:    45 85 ed                              	test r13d, r13d
0xda4:    74 07                                 	je 0xdad <.Llzma_filters_update.0+0x8d>
0xda6:    3d 0b 01 00 00                        	cmp eax, 0x10b
0xdab:    eb 05                                 	jmp 0xdb2 <.Llzma_filters_update.0+0x92>
0xdad:    3d 09 01 00 00                        	cmp eax, 0x109
0xdb2:    74 0f                                 	je 0xdc3 <.Llzma_filters_update.0+0xa3>
0xdb4:    48 03 5d 08                           	add rbx, qword ptr [rbp + 8]
0xdb8:    eb 9f                                 	jmp 0xd59 <.Llzma_filters_update.0+0x39>
0xdba:    48 ff c3                              	inc rbx
0xdbd:    eb 9a                                 	jmp 0xd59 <.Llzma_filters_update.0+0x39>
0xdbf:    31 c0                                 	xor eax, eax
0xdc1:    eb 05                                 	jmp 0xdc8 <.Llzma_filters_update.0+0xa8>
0xdc3:    b8 01 00 00 00                        	mov eax, 1
0xdc8:    48 83 c4 60                           	add rsp, 0x60
0xdcc:    5b                                    	pop rbx
0xdcd:    5d                                    	pop rbp
0xdce:    41 5c                                 	pop r12
0xdd0:    41 5d                                 	pop r13
0xdd2:    41 5e                                 	pop r14
0xdd4:    c3                                    	ret 
; data inside code section at 0xdd5 -- 0xde0
0xdd5:    66 66 2e 0f 1f 84 00 00  00 00 00                  |ff.........     |
; function: .Llzma_filters_update.1 at 0xde0 -- 0xe8e
0xde0:    f3 0f 1e fa                           	endbr64 
0xde4:    41 56                                 	push r14
0xde6:    31 c0                                 	xor eax, eax
0xde8:    41 89 d6                              	mov r14d, edx
0xdeb:    41 55                                 	push r13
0xded:    41 89 cd                              	mov r13d, ecx
0xdf0:    b9 16 00 00 00                        	mov ecx, 0x16
0xdf5:    41 54                                 	push r12
0xdf7:    49 89 f4                              	mov r12, rsi
0xdfa:    55                                    	push rbp
0xdfb:    4c 89 c5                              	mov rbp, r8
0xdfe:    53                                    	push rbx
0xdff:    48 89 fb                              	mov rbx, rdi
0xe02:    48 83 ec 60                           	sub rsp, 0x60
0xe06:    4d 85 c0                              	test r8, r8
0xe09:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xe0e:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xe10:    48 8d 44 24 08                        	lea rax, [rsp + 8]
0xe15:    48 0f 44 e8                           	cmove rbp, rax
0xe19:    4c 39 e3                              	cmp rbx, r12
0xe1c:    73 5a                                 	jae 0xe78 <.Llzma_filters_update.1+0x98>
0xe1e:    4c 89 e2                              	mov rdx, r12
0xe21:    48 89 de                              	mov rsi, rbx
0xe24:    48 89 ef                              	mov rdi, rbp
0xe27:    e8 d4 f1 ff ff                        	call 0 <.Lx86_code.part.0>
0xe2c:    85 c0                                 	test eax, eax
0xe2e:    74 43                                 	je 0xe73 <.Llzma_filters_update.1+0x93>
0xe30:    8b 45 1c                              	mov eax, dword ptr [rbp + 0x1c]
0xe33:    25 00 ff 00 ff                        	and eax, 0xff00ff00
0xe38:    3d 00 00 00 05                        	cmp eax, 0x5000000
0xe3d:    75 2e                                 	jne 0xe6d <.Llzma_filters_update.1+0x8d>
0xe3f:    8a 45 1b                              	mov al, byte ptr [rbp + 0x1b]
0xe42:    83 e0 48                              	and eax, 0x48
0xe45:    3c 48                                 	cmp al, 0x48
0xe47:    0f 94 c0                              	sete al
0xe4a:    0f b6 c0                              	movzx eax, al
0xe4d:    44 39 f0                              	cmp eax, r14d
0xe50:    74 05                                 	je 0xe57 <.Llzma_filters_update.1+0x77>
0xe52:    45 85 ed                              	test r13d, r13d
0xe55:    75 16                                 	jne 0xe6d <.Llzma_filters_update.1+0x8d>
0xe57:    8b 45 28                              	mov eax, dword ptr [rbp + 0x28]
0xe5a:    45 85 ed                              	test r13d, r13d
0xe5d:    74 07                                 	je 0xe66 <.Llzma_filters_update.1+0x86>
0xe5f:    3d 0b 01 00 00                        	cmp eax, 0x10b
0xe64:    eb 05                                 	jmp 0xe6b <.Llzma_filters_update.1+0x8b>
0xe66:    3d 09 01 00 00                        	cmp eax, 0x109
0xe6b:    74 0f                                 	je 0xe7c <.Llzma_filters_update.1+0x9c>
0xe6d:    48 03 5d 08                           	add rbx, qword ptr [rbp + 8]
0xe71:    eb a6                                 	jmp 0xe19 <.Llzma_filters_update.1+0x39>
0xe73:    48 ff c3                              	inc rbx
0xe76:    eb a1                                 	jmp 0xe19 <.Llzma_filters_update.1+0x39>
0xe78:    31 c0                                 	xor eax, eax
0xe7a:    eb 05                                 	jmp 0xe81 <.Llzma_filters_update.1+0xa1>
0xe7c:    b8 01 00 00 00                        	mov eax, 1
0xe81:    48 83 c4 60                           	add rsp, 0x60
0xe85:    5b                                    	pop rbx
0xe86:    5d                                    	pop rbp
0xe87:    41 5c                                 	pop r12
0xe89:    41 5d                                 	pop r13
0xe8b:    41 5e                                 	pop r14
0xe8d:    c3                                    	ret 
; section: .text.lzma_raw_encodea
; function: .Llzma_raw_encoder.0 at 0xe90 -- 0xf32
0xe90:    f3 0f 1e fa                           	endbr64 
0xe94:    41 56                                 	push r14
0xe96:    31 c9                                 	xor ecx, ecx
0xe98:    41 55                                 	push r13
0xe9a:    41 54                                 	push r12
0xe9c:    49 89 d4                              	mov r12, rdx
0xe9f:    ba 06 00 00 00                        	mov edx, 6
0xea4:    55                                    	push rbp
0xea5:    48 89 f5                              	mov rbp, rsi
0xea8:    be 05 00 00 00                        	mov esi, 5
0xead:    53                                    	push rbx
0xeae:    48 89 fb                              	mov rbx, rdi
0xeb1:    bf 7c 00 00 00                        	mov edi, 0x7c
0xeb6:    48 83 ec 60                           	sub rsp, 0x60
0xeba:    e8 21 9d 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0xebf:    85 c0                                 	test eax, eax
0xec1:    75 04                                 	jne 0xec7 <.Llzma_raw_encoder.0+0x37>
0xec3:    33 c0                                 	xor eax, eax
0xec5:    eb 5e                                 	jmp 0xf25 <.Llzma_raw_encoder.0+0x95>
0xec7:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xecc:    b9 16 00 00 00                        	mov ecx, 0x16
0xed1:    33 c0                                 	xor eax, eax
0xed3:    4d 89 e6                              	mov r14, r12
0xed6:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xed8:    4c 8d 6c 24 08                        	lea r13, [rsp + 8]
0xedd:    49 f7 de                              	neg r14
0xee0:    48 39 eb                              	cmp rbx, rbp
0xee3:    73 de                                 	jae 0xec3 <.Llzma_raw_encoder.0+0x33>
0xee5:    48 8b d5                              	mov rdx, rbp
0xee8:    48 89 de                              	mov rsi, rbx
0xeeb:    4c 89 ef                              	mov rdi, r13
0xeee:    e8 0d f1 ff ff                        	call 0 <.Lx86_code.part.0>
0xef3:    85 c0                                 	test eax, eax
0xef5:    74 24                                 	je 0xf1b <.Llzma_raw_encoder.0+0x8b>
0xef7:    81 7c 24 30 0d 01 00 00               	cmp dword ptr [rsp + 0x30], 0x10d
0xeff:    75 1a                                 	jne 0xf1b <.Llzma_raw_encoder.0+0x8b>
0xf01:    8a 44 24 19                           	mov al, byte ptr [rsp + 0x19]
0xf05:    83 e0 07                              	and eax, 7
0xf08:    fe c8                                 	dec al
0xf0a:    75 0f                                 	jne 0xf1b <.Llzma_raw_encoder.0+0x8b>
0xf0c:    48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0xf11:    4c 39 e0                              	cmp rax, r12
0xf14:    74 0a                                 	je 0xf20 <.Llzma_raw_encoder.0+0x90>
0xf16:    4c 39 f0                              	cmp rax, r14
0xf19:    74 05                                 	je 0xf20 <.Llzma_raw_encoder.0+0x90>
0xf1b:    48 ff c3                              	inc rbx
0xf1e:    eb c0                                 	jmp 0xee0 <.Llzma_raw_encoder.0+0x50>
0xf20:    b8 01 00 00 00                        	mov eax, 1
0xf25:    48 83 c4 60                           	add rsp, 0x60
0xf29:    5b                                    	pop rbx
0xf2a:    5d                                    	pop rbp
0xf2b:    41 5c                                 	pop r12
0xf2d:    41 5d                                 	pop r13
0xf2f:    41 5e                                 	pop r14
0xf31:    c3                                    	ret 
; section: .text.lzma_mt_block_siza
; function: .Llzma_mt_block_size.1 at 0xf40 -- 0xff2
0xf40:    f3 0f 1e fa                           	endbr64 
0xf44:    41 55                                 	push r13
0xf46:    49 89 cd                              	mov r13, rcx
0xf49:    31 c9                                 	xor ecx, ecx
0xf4b:    41 54                                 	push r12
0xf4d:    49 89 f4                              	mov r12, rsi
0xf50:    31 f6                                 	xor esi, esi
0xf52:    55                                    	push rbp
0xf53:    48 89 fd                              	mov rbp, rdi
0xf56:    bf c8 01 00 00                        	mov edi, 0x1c8
0xf5b:    53                                    	push rbx
0xf5c:    48 89 d3                              	mov rbx, rdx
0xf5f:    ba 1e 00 00 00                        	mov edx, 0x1e
0xf64:    48 83 ec 68                           	sub rsp, 0x68
0xf68:    e8 73 9c 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0xf6d:    85 c0                                 	test eax, eax
0xf6f:    75 04                                 	jne 0xf75 <.Llzma_mt_block_size.1+0x35>
0xf71:    31 c0                                 	xor eax, eax
0xf73:    eb 72                                 	jmp 0xfe7 <.Llzma_mt_block_size.1+0xa7>
0xf75:    31 c0                                 	xor eax, eax
0xf77:    48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0xf7c:    b9 16 00 00 00                        	mov ecx, 0x16
0xf81:    48 85 db                              	test rbx, rbx
0xf84:    f3 ab                                 	rep stosd dword ptr [rdi], eax
0xf86:    48 8d 44 24 08                        	lea rax, [rsp + 8]
0xf8b:    48 0f 44 d8                           	cmove rbx, rax
0xf8f:    4c 39 e5                              	cmp rbp, r12
0xf92:    73 dd                                 	jae 0xf71 <.Llzma_mt_block_size.1+0x31>
0xf94:    4c 89 e2                              	mov rdx, r12
0xf97:    48 89 ee                              	mov rsi, rbp
0xf9a:    48 89 df                              	mov rdi, rbx
0xf9d:    e8 5e f0 ff ff                        	call 0 <.Lx86_code.part.0>
0xfa2:    85 c0                                 	test eax, eax
0xfa4:    74 37                                 	je 0xfdd <.Llzma_mt_block_size.1+0x9d>
0xfa6:    81 7b 28 0d 01 00 00                  	cmp dword ptr [rbx + 0x28], 0x10d
0xfad:    75 2e                                 	jne 0xfdd <.Llzma_mt_block_size.1+0x9d>
0xfaf:    8a 43 1b                              	mov al, byte ptr [rbx + 0x1b]
0xfb2:    83 e0 48                              	and eax, 0x48
0xfb5:    3c 48                                 	cmp al, 0x48
0xfb7:    75 24                                 	jne 0xfdd <.Llzma_mt_block_size.1+0x9d>
0xfb9:    8b 43 1c                              	mov eax, dword ptr [rbx + 0x1c]
0xfbc:    25 00 ff 00 ff                        	and eax, 0xff00ff00
0xfc1:    3d 00 00 00 05                        	cmp eax, 0x5000000
0xfc6:    75 15                                 	jne 0xfdd <.Llzma_mt_block_size.1+0x9d>
0xfc8:    4d 85 ed                              	test r13, r13
0xfcb:    74 15                                 	je 0xfe2 <.Llzma_mt_block_size.1+0xa2>
0xfcd:    48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0xfd1:    48 03 03                              	add rax, qword ptr [rbx]
0xfd4:    48 03 43 30                           	add rax, qword ptr [rbx + 0x30]
0xfd8:    4c 39 e8                              	cmp rax, r13
0xfdb:    74 05                                 	je 0xfe2 <.Llzma_mt_block_size.1+0xa2>
0xfdd:    48 ff c5                              	inc rbp
0xfe0:    eb ad                                 	jmp 0xf8f <.Llzma_mt_block_size.1+0x4f>
0xfe2:    b8 01 00 00 00                        	mov eax, 1
0xfe7:    48 83 c4 68                           	add rsp, 0x68
0xfeb:    5b                                    	pop rbx
0xfec:    5d                                    	pop rbp
0xfed:    41 5c                                 	pop r12
0xfef:    41 5d                                 	pop r13
0xff1:    c3                                    	ret 
; section: .text.stream_encoda
; function: .Lstream_encode.1 at 0x1000 -- 0x103e
0x1000:   f3 0f 1e fa                           	endbr64 
0x1004:   48 83 ec 68                           	sub rsp, 0x68
0x1008:   49 89 f8                              	mov r8, rdi
0x100b:   31 c0                                 	xor eax, eax
0x100d:   b9 16 00 00 00                        	mov ecx, 0x16
0x1012:   48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x1017:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x1019:   48 8d 44 24 08                        	lea rax, [rsp + 8]
0x101e:   48 89 d1                              	mov rcx, rdx
0x1021:   4c 89 c7                              	mov rdi, r8
0x1024:   48 89 c2                              	mov rdx, rax
0x1027:   e8 14 ff ff ff                        	call 0xf40 <.Llzma_mt_block_size.1>
0x102c:   89 c2                                 	mov edx, eax
0x102e:   31 c0                                 	xor eax, eax
0x1030:   85 d2                                 	test edx, edx
0x1032:   74 05                                 	je 0x1039 <.Lstream_encode.1+0x39>
0x1034:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1039:   48 83 c4 68                           	add rsp, 0x68
0x103d:   c3                                    	ret 
; section: .text.lzma_properties_siza
; function: .Llzma_properties_size.0 at 0x1040 -- 0x10f5
0x1040:   f3 0f 1e fa                           	endbr64 
0x1044:   41 56                                 	push r14
0x1046:   41 89 ce                              	mov r14d, ecx
0x1049:   31 c9                                 	xor ecx, ecx
0x104b:   41 55                                 	push r13
0x104d:   4d 89 c5                              	mov r13, r8
0x1050:   41 54                                 	push r12
0x1052:   49 89 f4                              	mov r12, rsi
0x1055:   be 04 00 00 00                        	mov esi, 4
0x105a:   55                                    	push rbp
0x105b:   48 89 fd                              	mov rbp, rdi
0x105e:   bf d6 00 00 00                        	mov edi, 0xd6
0x1063:   53                                    	push rbx
0x1064:   48 89 d3                              	mov rbx, rdx
0x1067:   ba 0e 00 00 00                        	mov edx, 0xe
0x106c:   48 83 ec 60                           	sub rsp, 0x60
0x1070:   e8 6b 9b 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x1075:   85 c0                                 	test eax, eax
0x1077:   75 04                                 	jne 0x107d <.Llzma_properties_size.0+0x3d>
0x1079:   31 c0                                 	xor eax, eax
0x107b:   eb 6b                                 	jmp 0x10e8 <.Llzma_properties_size.0+0xa8>
0x107d:   31 c0                                 	xor eax, eax
0x107f:   48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x1084:   b9 16 00 00 00                        	mov ecx, 0x16
0x1089:   48 85 db                              	test rbx, rbx
0x108c:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x108e:   48 8d 44 24 08                        	lea rax, [rsp + 8]
0x1093:   48 0f 44 d8                           	cmove rbx, rax
0x1097:   4c 39 e5                              	cmp rbp, r12
0x109a:   73 dd                                 	jae 0x1079 <.Llzma_properties_size.0+0x39>
0x109c:   4c 89 e2                              	mov rdx, r12
0x109f:   48 8b f5                              	mov rsi, rbp
0x10a2:   48 89 df                              	mov rdi, rbx
0x10a5:   e8 56 ef ff ff                        	call 0 <.Lx86_code.part.0>
0x10aa:   85 c0                                 	test eax, eax
0x10ac:   74 30                                 	je 0x10de <.Llzma_properties_size.0+0x9e>
0x10ae:   44 39 73 28                           	cmp dword ptr [rbx + 0x28], r14d
0x10b2:   75 2a                                 	jne 0x10de <.Llzma_properties_size.0+0x9e>
0x10b4:   8b 43 1c                              	mov eax, dword ptr [rbx + 0x1c]
0x10b7:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x10bc:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x10c1:   75 1b                                 	jne 0x10de <.Llzma_properties_size.0+0x9e>
0x10c3:   4d 85 ed                              	test r13, r13
0x10c6:   74 1b                                 	je 0x10e3 <.Llzma_properties_size.0+0xa3>
0x10c8:   f6 43 11 01                           	test byte ptr [rbx + 0x11], 1
0x10cc:   74 10                                 	je 0x10de <.Llzma_properties_size.0+0x9e>
0x10ce:   48 8b 43 30                           	mov rax, qword ptr [rbx + 0x30]
0x10d2:   48 03 03                              	add rax, qword ptr [rbx]
0x10d5:   48 03 43 08                           	add rax, qword ptr [rbx + 8]
0x10d9:   49 39 c5                              	cmp r13, rax
0x10dc:   74 05                                 	je 0x10e3 <.Llzma_properties_size.0+0xa3>
0x10de:   48 ff c5                              	inc rbp
0x10e1:   eb b4                                 	jmp 0x1097 <.Llzma_properties_size.0+0x57>
0x10e3:   b8 01 00 00 00                        	mov eax, 1
0x10e8:   48 83 c4 60                           	add rsp, 0x60
0x10ec:   5b                                    	pop rbx
0x10ed:   5d                                    	pop rbp
0x10ee:   41 5c                                 	pop r12
0x10f0:   41 5d                                 	pop r13
0x10f2:   41 5e                                 	pop r14
0x10f4:   c3                                    	ret 
; section: .text.stream_encoder_mt_inia
; function: .Lstream_encoder_mt_init.1 at 0x1100 -- 0x114f
0x1100:   f3 0f 1e fa                           	endbr64 
0x1104:   48 83 ec 28                           	sub rsp, 0x28
0x1108:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x110d:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x1112:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x1116:   48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x111b:   e8 20 fe ff ff                        	call 0xf40 <.Llzma_mt_block_size.1>
0x1120:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x1124:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x1129:   85 c0                                 	test eax, eax
0x112b:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x1130:   4c 8b 44 24 18                        	mov r8, qword ptr [rsp + 0x18]
0x1135:   75 0e                                 	jne 0x1145 <.Lstream_encoder_mt_init.1+0x45>
0x1137:   b9 0b 01 00 00                        	mov ecx, 0x10b
0x113c:   48 83 c4 28                           	add rsp, 0x28
0x1140:   e9 fb fe ff ff                        	jmp 0x1040 <.Llzma_properties_size.0>
0x1145:   b8 01 00 00 00                        	mov eax, 1
0x114a:   48 83 c4 28                           	add rsp, 0x28
0x114e:   c3                                    	ret 
; section: .text.lzma_simple_x86_decoder_inif
; function: .Llzma_simple_x86_decoder_init.1 at 0x1150 -- 0x11e7
0x1150:   f3 0f 1e fa                           	endbr64 
0x1154:   41 55                                 	push r13
0x1156:   31 c0                                 	xor eax, eax
0x1158:   49 89 cd                              	mov r13, rcx
0x115b:   b9 16 00 00 00                        	mov ecx, 0x16
0x1160:   41 54                                 	push r12
0x1162:   49 89 f4                              	mov r12, rsi
0x1165:   55                                    	push rbp
0x1166:   48 89 fd                              	mov rbp, rdi
0x1169:   53                                    	push rbx
0x116a:   48 89 d3                              	mov rbx, rdx
0x116d:   48 83 ec 68                           	sub rsp, 0x68
0x1171:   48 85 d2                              	test rdx, rdx
0x1174:   48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x1179:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x117b:   48 8d 44 24 08                        	lea rax, [rsp + 8]
0x1180:   48 0f 44 d8                           	cmove rbx, rax
0x1184:   4c 39 e5                              	cmp rbp, r12
0x1187:   73 4a                                 	jae 0x11d3 <.Llzma_simple_x86_decoder_init.1+0x83>
0x1189:   4c 89 e2                              	mov rdx, r12
0x118c:   48 89 ee                              	mov rsi, rbp
0x118f:   48 89 df                              	mov rdi, rbx
0x1192:   e8 69 ee ff ff                        	call 0 <.Lx86_code.part.0>
0x1197:   85 c0                                 	test eax, eax
0x1199:   74 33                                 	je 0x11ce <.Llzma_simple_x86_decoder_init.1+0x7e>
0x119b:   81 7b 28 03 01 00 00                  	cmp dword ptr [rbx + 0x28], 0x103
0x11a2:   75 2a                                 	jne 0x11ce <.Llzma_simple_x86_decoder_init.1+0x7e>
0x11a4:   8b 43 1c                              	mov eax, dword ptr [rbx + 0x1c]
0x11a7:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x11ac:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x11b1:   75 1b                                 	jne 0x11ce <.Llzma_simple_x86_decoder_init.1+0x7e>
0x11b3:   4d 85 ed                              	test r13, r13
0x11b6:   74 1f                                 	je 0x11d7 <.Llzma_simple_x86_decoder_init.1+0x87>
0x11b8:   f6 43 11 01                           	test byte ptr [rbx + 0x11], 1
0x11bc:   74 10                                 	je 0x11ce <.Llzma_simple_x86_decoder_init.1+0x7e>
0x11be:   48 8b 43 30                           	mov rax, qword ptr [rbx + 0x30]
0x11c2:   48 03 03                              	add rax, qword ptr [rbx]
0x11c5:   48 03 43 08                           	add rax, qword ptr [rbx + 8]
0x11c9:   49 39 c5                              	cmp r13, rax
0x11cc:   74 09                                 	je 0x11d7 <.Llzma_simple_x86_decoder_init.1+0x87>
0x11ce:   48 ff c5                              	inc rbp
0x11d1:   eb b1                                 	jmp 0x1184 <.Llzma_simple_x86_decoder_init.1+0x34>
0x11d3:   31 c0                                 	xor eax, eax
0x11d5:   eb 05                                 	jmp 0x11dc <.Llzma_simple_x86_decoder_init.1+0x8c>
0x11d7:   b8 01 00 00 00                        	mov eax, 1
0x11dc:   48 83 c4 68                           	add rsp, 0x68
0x11e0:   5b                                    	pop rbx
0x11e1:   5d                                    	pop rbp
0x11e2:   41 5c                                 	pop r12
0x11e4:   41 5d                                 	pop r13
0x11e6:   c3                                    	ret 
; section: .text.stream_decoda
; function: .Lstream_decode.1 at 0x11f0 -- 0x121c
0x11f0:   f3 0f 1e fa                           	endbr64 
0x11f4:   55                                    	push rbp
0x11f5:   48 89 e5                              	mov rbp, rsp
0x11f8:   48 89 7d f8                           	mov qword ptr [rbp - 8], rdi
0x11fc:   48 89 75 f0                           	mov qword ptr [rbp - 0x10], rsi
0x1200:   48 83 7d f0 00                        	cmp qword ptr [rbp - 0x10], 0
0x1205:   74 0a                                 	je 0x1211 <.Lstream_decode.1+0x21>
0x1207:   48 c7 45 f0 00 00 00 00               	mov qword ptr [rbp - 0x10], 0
0x120f:   eb 08                                 	jmp 0x1219 <.Lstream_decode.1+0x29>
0x1211:   48 c7 45 f0 00 00 00 00               	mov qword ptr [rbp - 0x10], 0
0x1219:   90                                    	nop 
0x121a:   5d                                    	pop rbp
0x121b:   c3                                    	ret 
; section: .text.powerpc_coda
; function: function_1220 at 0x1220 -- 0x137f
0x1220:   41 56                                 	push r14
0x1222:   41 89 ce                              	mov r14d, ecx
0x1225:   41 55                                 	push r13
0x1227:   49 89 fd                              	mov r13, rdi
0x122a:   41 54                                 	push r12
0x122c:   53                                    	push rbx
0x122d:   48 83 ec 18                           	sub rsp, 0x18
0x1231:   48 8b 0f                              	mov rcx, qword ptr [rdi]
0x1234:   41 ff c0                              	inc r8d
0x1237:   4c 8d 24 16                           	lea r12, [rsi + rdx]
0x123b:   48 85 d2                              	test rdx, rdx
0x123e:   0f 84 2a 01 00 00                     	je 0x136e <function_1220+0x14e>
0x1244:   4c 39 e6                              	cmp rsi, r12
0x1247:   4c 89 e0                              	mov rax, r12
0x124a:   48 0f 46 c6                           	cmovbe rax, rsi
0x124e:   48 39 c8                              	cmp rax, rcx
0x1251:   0f 82 13 01 00 00                     	jb 0x136a <function_1220+0x14a>
0x1257:   41 81 f8 ea 03 00 00                  	cmp r8d, 0x3ea
0x125e:   0f 84 06 01 00 00                     	je 0x136a <function_1220+0x14a>
0x1264:   45 0f b7 4d 18                        	movzx r9d, word ptr [r13 + 0x18]
0x1269:   31 ff                                 	xor edi, edi
0x126b:   44 39 cf                              	cmp edi, r9d
0x126e:   0f 83 f6 00 00 00                     	jae 0x136a <function_1220+0x14a>
0x1274:   48 6b c7 38                           	imul rax, rdi, 0x38
0x1278:   49 03 45 10                           	add rax, qword ptr [r13 + 0x10]
0x127c:   83 38 01                              	cmp dword ptr [rax], 1
0x127f:   0f 85 dd 00 00 00                     	jne 0x1362 <function_1220+0x142>
0x1285:   8b 50 04                              	mov edx, dword ptr [rax + 4]
0x1288:   44 21 f2                              	and edx, r14d
0x128b:   44 39 f2                              	cmp edx, r14d
0x128e:   0f 85 ce 00 00 00                     	jne 0x1362 <function_1220+0x142>
0x1294:   48 8b 58 28                           	mov rbx, qword ptr [rax + 0x28]
0x1298:   48 89 ca                              	mov rdx, rcx
0x129b:   49 2b 55 08                           	sub rdx, qword ptr [r13 + 8]
0x129f:   48 03 50 10                           	add rdx, qword ptr [rax + 0x10]
0x12a3:   48 01 d3                              	add rbx, rdx
0x12a6:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x12ad:   f7 c3 ff 0f 00 00                     	test ebx, 0xfff
0x12b3:   74 0e                                 	je 0x12c3 <function_1220+0xa3>
0x12b5:   48 81 e3 00 f0 ff ff                  	and rbx, 0xfffffffffffff000
0x12bc:   48 81 c3 00 10 00 00                  	add rbx, 0x1000
0x12c3:   48 39 d6                              	cmp rsi, rdx
0x12c6:   41 0f 93 c2                           	setae r10b
0x12ca:   4c 39 e3                              	cmp rbx, r12
0x12cd:   41 0f 93 c3                           	setae r11b
0x12d1:   45 84 d2                              	test r10b, r10b
0x12d4:   74 09                                 	je 0x12df <function_1220+0xbf>
0x12d6:   45 84 db                              	test r11b, r11b
0x12d9:   0f 85 8f 00 00 00                     	jne 0x136e <function_1220+0x14e>
0x12df:   48 39 d6                              	cmp rsi, rdx
0x12e2:   0f 92 c0                              	setb al
0x12e5:   45 84 db                              	test r11b, r11b
0x12e8:   74 14                                 	je 0x12fe <function_1220+0xde>
0x12ea:   84 c0                                 	test al, al
0x12ec:   74 10                                 	je 0x12fe <function_1220+0xde>
0x12ee:   4c 39 e2                              	cmp rdx, r12
0x12f1:   73 6f                                 	jae 0x1362 <function_1220+0x142>
0x12f3:   48 29 f2                              	sub rdx, rsi
0x12f6:   48 ff ca                              	dec rdx
0x12f9:   e9 36 ff ff ff                        	jmp 0x1234 <function_1220+0x14>
0x12fe:   48 39 de                              	cmp rsi, rbx
0x1301:   73 19                                 	jae 0x131c <function_1220+0xfc>
0x1303:   45 84 d2                              	test r10b, r10b
0x1306:   74 14                                 	je 0x131c <function_1220+0xfc>
0x1308:   4c 39 e3                              	cmp rbx, r12
0x130b:   73 55                                 	jae 0x1362 <function_1220+0x142>
0x130d:   48 8d 73 01                           	lea rsi, [rbx + 1]
0x1311:   4c 89 e2                              	mov rdx, r12
0x1314:   48 29 f2                              	sub rdx, rsi
0x1317:   e9 18 ff ff ff                        	jmp 0x1234 <function_1220+0x14>
0x131c:   4c 39 e3                              	cmp rbx, r12
0x131f:   73 41                                 	jae 0x1362 <function_1220+0x142>
0x1321:   84 c0                                 	test al, al
0x1323:   74 3d                                 	je 0x1362 <function_1220+0x142>
0x1325:   48 29 f2                              	sub rdx, rsi
0x1328:   44 89 f1                              	mov ecx, r14d
0x132b:   4c 89 ef                              	mov rdi, r13
0x132e:   44 89 44 24 0c                        	mov dword ptr [rsp + 0xc], r8d
0x1333:   e8 e8 fe ff ff                        	call 0x1220 <function_1220>
0x1338:   44 8b 44 24 0c                        	mov r8d, dword ptr [rsp + 0xc]
0x133d:   85 c0                                 	test eax, eax
0x133f:   74 32                                 	je 0x1373 <function_1220+0x153>
0x1341:   49 8d 54 24 ff                        	lea rdx, [r12 - 1]
0x1346:   48 8d 73 01                           	lea rsi, [rbx + 1]
0x134a:   44 89 f1                              	mov ecx, r14d
0x134d:   4c 89 ef                              	mov rdi, r13
0x1350:   48 29 da                              	sub rdx, rbx
0x1353:   e8 c8 fe ff ff                        	call 0x1220 <function_1220>
0x1358:   85 c0                                 	test eax, eax
0x135a:   0f 95 c0                              	setne al
0x135d:   0f b6 c0                              	movzx eax, al
0x1360:   eb 11                                 	jmp 0x1373 <function_1220+0x153>
0x1362:   48 ff c7                              	inc rdi
0x1365:   e9 01 ff ff ff                        	jmp 0x126b <function_1220+0x4b>
0x136a:   31 c0                                 	xor eax, eax
0x136c:   eb 05                                 	jmp 0x1373 <function_1220+0x153>
0x136e:   b8 01 00 00 00                        	mov eax, 1
0x1373:   48 83 c4 18                           	add rsp, 0x18
0x1377:   5b                                    	pop rbx
0x1378:   41 5c                                 	pop r12
0x137a:   41 5d                                 	pop r13
0x137c:   41 5e                                 	pop r14
0x137e:   c3                                    	ret 
; section: .text.parse_bcz
; function: .Lparse_bcj.0 at 0x1380 -- 0x138c
0x1380:   f3 0f 1e fa                           	endbr64 
0x1384:   45 31 c0                              	xor r8d, r8d
0x1387:   e9 94 fe ff ff                        	jmp 0x1220 <function_1220>
; section: .text.lzma_simple_props_sizd
; function: .Llzma_simple_props_size.part.0 at 0x1390 -- 0x13ad
0x1390:   f3 0f 1e fa                           	endbr64 
0x1394:   c7 44 24 fc 53 e5 74 04               	mov dword ptr [rsp - 4], 0x474e553
0x139c:   8b 44 24 fc                           	mov eax, dword ptr [rsp - 4]
0x13a0:   8d 54 37 01                           	lea edx, [rdi + rsi + 1]
0x13a4:   39 c2                                 	cmp edx, eax
0x13a6:   0f 94 c0                              	sete al
0x13a9:   0f b6 c0                              	movzx eax, al
0x13ac:   c3                                    	ret 
; section: .text.get_literal_prica
; function: .Lget_literal_price.part.0 at 0x13b0 -- 0x1851
0x13b0:   f3 0f 1e fa                           	endbr64 
0x13b4:   48 85 ff                              	test rdi, rdi
0x13b7:   0f 84 91 04 00 00                     	je 0x184e <.Lget_literal_price.part.0+0x49e>
0x13bd:   41 57                                 	push r15
0x13bf:   41 56                                 	push r14
0x13c1:   41 55                                 	push r13
0x13c3:   41 54                                 	push r12
0x13c5:   53                                    	push rbx
0x13c6:   48 8b de                              	mov rbx, rsi
0x13c9:   48 83 ec 10                           	sub rsp, 0x10
0x13cd:   48 85 f6                              	test rsi, rsi
0x13d0:   0f 84 3e 01 00 00                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x13d6:   48 8d 56 08                           	lea rdx, [rsi + 8]
0x13da:   49 89 fc                              	mov r12, rdi
0x13dd:   b9 3e 00 00 00                        	mov ecx, 0x3e
0x13e2:   31 c0                                 	xor eax, eax
0x13e4:   48 89 d7                              	mov rdi, rdx
0x13e7:   49 83 c9 ff                           	or r9, 0xffffffffffffffff
0x13eb:   45 31 ed                              	xor r13d, r13d
0x13ee:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x13f0:   4c 89 26                              	mov qword ptr [rsi], r12
0x13f3:   48 83 c9 ff                           	or rcx, 0xffffffffffffffff
0x13f7:   4d 8b 44 24 20                        	mov r8, qword ptr [r12 + 0x20]
0x13fc:   45 0f b7 5c 24 38                     	movzx r11d, word ptr [r12 + 0x38]
0x1402:   4d 01 e0                              	add r8, r12
0x1405:   66 44 89 5e 18                        	mov word ptr [rsi + 0x18], r11w
0x140a:   4c 89 46 10                           	mov qword ptr [rsi + 0x10], r8
0x140e:   4d 89 c2                              	mov r10, r8
0x1411:   45 39 dd                              	cmp r13d, r11d
0x1414:   73 57                                 	jae 0x146d <.Lget_literal_price.part.0+0xbd>
0x1416:   41 8b 3a                              	mov edi, dword ptr [r10]
0x1419:   83 ff 01                              	cmp edi, 1
0x141c:   75 0d                                 	jne 0x142b <.Lget_literal_price.part.0+0x7b>
0x141e:   49 8b 42 10                           	mov rax, qword ptr [r10 + 0x10]
0x1422:   49 39 c1                              	cmp r9, rax
0x1425:   4c 0f 47 c8                           	cmova r9, rax
0x1429:   eb 39                                 	jmp 0x1464 <.Lget_literal_price.part.0+0xb4>
0x142b:   83 ff 02                              	cmp edi, 2
0x142e:   75 05                                 	jne 0x1435 <.Lget_literal_price.part.0+0x85>
0x1430:   49 63 cd                              	movsxd rcx, r13d
0x1433:   eb 2f                                 	jmp 0x1464 <.Lget_literal_price.part.0+0xb4>
0x1435:   be 00 00 00 a0                        	mov esi, 0xa0000000
0x143a:   e8 51 ff ff ff                        	call 0x1390 <.Llzma_simple_props_size.part.0>
0x143f:   85 c0                                 	test eax, eax
0x1441:   74 21                                 	je 0x1464 <.Lget_literal_price.part.0+0xb4>
0x1443:   83 7b 4c 00                           	cmp dword ptr [rbx + 0x4c], 0
0x1447:   0f 85 c7 00 00 00                     	jne 0x1514 <.Lget_literal_price.part.0+0x164>
0x144d:   49 8b 42 10                           	mov rax, qword ptr [r10 + 0x10]
0x1451:   48 89 43 50                           	mov qword ptr [rbx + 0x50], rax
0x1455:   49 8b 42 28                           	mov rax, qword ptr [r10 + 0x28]
0x1459:   c7 43 4c 01 00 00 00                  	mov dword ptr [rbx + 0x4c], 1
0x1460:   48 89 43 58                           	mov qword ptr [rbx + 0x58], rax
0x1464:   41 ff c5                              	inc r13d
0x1467:   49 83 c2 38                           	add r10, 0x38
0x146b:   eb a4                                 	jmp 0x1411 <.Lget_literal_price.part.0+0x61>
0x146d:   49 83 f9 ff                           	cmp r9, -1
0x1471:   0f 84 9d 00 00 00                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x1477:   83 f9 ff                              	cmp ecx, -1
0x147a:   0f 84 94 00 00 00                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x1480:   48 6b c9 38                           	imul rcx, rcx, 0x38
0x1484:   4c 89 e0                              	mov rax, r12
0x1487:   4c 89 4b 08                           	mov qword ptr [rbx + 8], r9
0x148b:   48 89 df                              	mov rdi, rbx
0x148e:   4c 29 c8                              	sub rax, r9
0x1491:   49 01 c8                              	add r8, rcx
0x1494:   b9 04 00 00 00                        	mov ecx, 4
0x1499:   49 8b 50 28                           	mov rdx, qword ptr [r8 + 0x28]
0x149d:   49 03 40 10                           	add rax, qword ptr [r8 + 0x10]
0x14a1:   49 89 c5                              	mov r13, rax
0x14a4:   48 89 43 20                           	mov qword ptr [rbx + 0x20], rax
0x14a8:   48 8b c2                              	mov rax, rdx
0x14ab:   4c 89 ee                              	mov rsi, r13
0x14ae:   48 c1 e8 04                           	shr rax, 4
0x14b2:   89 43 28                              	mov dword ptr [rbx + 0x28], eax
0x14b5:   89 44 24 0c                           	mov dword ptr [rsp + 0xc], eax
0x14b9:   e8 c2 fe ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x14be:   85 c0                                 	test eax, eax
0x14c0:   74 52                                 	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x14c2:   49 8d 45 08                           	lea rax, [r13 + 8]
0x14c6:   31 ff                                 	xor edi, edi
0x14c8:   49 83 cd ff                           	or r13, 0xffffffffffffffff
0x14cc:   49 83 ce ff                           	or r14, 0xffffffffffffffff
0x14d0:   48 83 ce ff                           	or rsi, 0xffffffffffffffff
0x14d4:   45 31 ff                              	xor r15d, r15d
0x14d7:   4c 8d 0d e2 98 00 00                  	lea r9, [rip + 0x98e2]
0x14de:   31 c9                                 	xor ecx, ecx
0x14e0:   4c 8d 15 11 99 00 00                  	lea r10, [rip + 0x9911]
0x14e7:   eb 48                                 	jmp 0x1531 <.Lget_literal_price.part.0+0x181>
0x14e9:   48 83 fa 24                           	cmp rdx, 0x24
0x14ed:   7e 2c                                 	jle 0x151b <.Lget_literal_price.part.0+0x16b>
0x14ef:   48 81 fa fb ff ff 6f                  	cmp rdx, 0x6ffffffb
0x14f6:   0f 84 31 01 00 00                     	je 0x162d <.Lget_literal_price.part.0+0x27d>
0x14fc:   0f 8f 8f 00 00 00                     	jg 0x1591 <.Lget_literal_price.part.0+0x1e1>
0x1502:   48 81 fa fc fe ff 6f                  	cmp rdx, 0x6ffffefc
0x1509:   7f 6d                                 	jg 0x1578 <.Lget_literal_price.part.0+0x1c8>
0x150b:   48 81 fa fa fe ff 6f                  	cmp rdx, 0x6ffffefa
0x1512:   7e 56                                 	jle 0x156a <.Lget_literal_price.part.0+0x1ba>
0x1514:   31 c0                                 	xor eax, eax
0x1516:   e9 25 03 00 00                        	jmp 0x1840 <.Lget_literal_price.part.0+0x490>
0x151b:   48 83 fa 16                           	cmp rdx, 0x16
0x151f:   7f 2b                                 	jg 0x154c <.Lget_literal_price.part.0+0x19c>
0x1521:   48 83 ea 02                           	sub rdx, 2
0x1525:   48 83 fa 06                           	cmp rdx, 6
0x1529:   76 35                                 	jbe 0x1560 <.Lget_literal_price.part.0+0x1b0>
0x152b:   ff c1                                 	inc ecx
0x152d:   48 83 c0 10                           	add rax, 0x10
0x1531:   39 4c 24 0c                           	cmp dword ptr [rsp + 0xc], ecx
0x1535:   0f 84 07 01 00 00                     	je 0x1642 <.Lget_literal_price.part.0+0x292>
0x153b:   48 8b 50 f8                           	mov rdx, qword ptr [rax - 8]
0x153f:   48 85 d2                              	test rdx, rdx
0x1542:   75 a5                                 	jne 0x14e9 <.Lget_literal_price.part.0+0x139>
0x1544:   89 4b 28                              	mov dword ptr [rbx + 0x28], ecx
0x1547:   e9 f6 00 00 00                        	jmp 0x1642 <.Lget_literal_price.part.0+0x292>
0x154c:   48 83 ea 17                           	sub rdx, 0x17
0x1550:   48 83 fa 0d                           	cmp rdx, 0xd
0x1554:   77 d5                                 	ja 0x152b <.Lget_literal_price.part.0+0x17b>
0x1556:   49 63 14 91                           	movsxd rdx, dword ptr [r9 + rdx*4]
0x155a:   4c 01 ca                              	add rdx, r9
0x155d:   3e ff e2                              	jmp rdx
0x1560:   49 63 14 92                           	movsxd rdx, dword ptr [r10 + rdx*4]
0x1564:   4c 01 d2                              	add rdx, r10
0x1567:   3e ff e2                              	jmp rdx
0x156a:   48 81 fa f5 fe ff 6f                  	cmp rdx, 0x6ffffef5
0x1571:   75 b8                                 	jne 0x152b <.Lget_literal_price.part.0+0x17b>
0x1573:   4c 8b 38                              	mov r15, qword ptr [rax]
0x1576:   eb b3                                 	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1578:   48 81 fa f0 ff ff 6f                  	cmp rdx, 0x6ffffff0
0x157f:   75 aa                                 	jne 0x152b <.Lget_literal_price.part.0+0x17b>
0x1581:   48 8b 10                              	mov rdx, qword ptr [rax]
0x1584:   80 8b d0 00 00 00 10                  	or byte ptr [rbx + 0xd0], 0x10
0x158b:   48 89 53 70                           	mov qword ptr [rbx + 0x70], rdx
0x158f:   eb 9a                                 	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1591:   48 81 fa fd ff ff 6f                  	cmp rdx, 0x6ffffffd
0x1598:   74 7d                                 	je 0x1617 <.Lget_literal_price.part.0+0x267>
0x159a:   48 81 fa ff ff ff 7f                  	cmp rdx, 0x7fffffff
0x15a1:   0f 84 6d ff ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x15a7:   48 81 fa fc ff ff 6f                  	cmp rdx, 0x6ffffffc
0x15ae:   0f 85 77 ff ff ff                     	jne 0x152b <.Lget_literal_price.part.0+0x17b>
0x15b4:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15b7:   48 89 53 60                           	mov qword ptr [rbx + 0x60], rdx
0x15bb:   e9 6b ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15c0:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15c3:   48 89 53 30                           	mov qword ptr [rbx + 0x30], rdx
0x15c7:   e9 5f ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15cc:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15cf:   48 89 53 38                           	mov qword ptr [rbx + 0x38], rdx
0x15d3:   e9 53 ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15d8:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15db:   48 89 53 40                           	mov qword ptr [rbx + 0x40], rdx
0x15df:   e9 47 ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15e4:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15e7:   48 89 53 78                           	mov qword ptr [rbx + 0x78], rdx
0x15eb:   e9 3b ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15f0:   48 8b 10                              	mov rdx, qword ptr [rax]
0x15f3:   48 89 93 88 00 00 00                  	mov qword ptr [rbx + 0x88], rdx
0x15fa:   e9 2c ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x15ff:   48 8b 30                              	mov rsi, qword ptr [rax]
0x1602:   e9 24 ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1607:   4c 8b 30                              	mov r14, qword ptr [rax]
0x160a:   e9 1c ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x160f:   4c 8b 28                              	mov r13, qword ptr [rax]
0x1612:   e9 14 ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1617:   48 8b 10                              	mov rdx, qword ptr [rax]
0x161a:   bf 01 00 00 00                        	mov edi, 1
0x161f:   48 89 53 68                           	mov qword ptr [rbx + 0x68], rdx
0x1623:   e9 03 ff ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1628:   f6 00 08                              	test byte ptr [rax], 8
0x162b:   eb 03                                 	jmp 0x1630 <.Lget_literal_price.part.0+0x280>
0x162d:   f6 00 01                              	test byte ptr [rax], 1
0x1630:   0f 84 f5 fe ff ff                     	je 0x152b <.Lget_literal_price.part.0+0x17b>
0x1636:   80 8b d0 00 00 00 20                  	or byte ptr [rbx + 0xd0], 0x20
0x163d:   e9 e9 fe ff ff                        	jmp 0x152b <.Lget_literal_price.part.0+0x17b>
0x1642:   4c 8b 4b 40                           	mov r9, qword ptr [rbx + 0x40]
0x1646:   4d 85 c9                              	test r9, r9
0x1649:   74 21                                 	je 0x166c <.Lget_literal_price.part.0+0x2bc>
0x164b:   48 83 fe ff                           	cmp rsi, -1
0x164f:   0f 84 bf fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x1655:   b9 18 00 00 00                        	mov ecx, 0x18
0x165a:   48 8b c6                              	mov rax, rsi
0x165d:   31 d2                                 	xor edx, edx
0x165f:   80 8b d0 00 00 00 01                  	or byte ptr [rbx + 0xd0], 1
0x1666:   48 f7 f1                              	div rcx
0x1669:   89 43 48                              	mov dword ptr [rbx + 0x48], eax
0x166c:   48 8b 4b 78                           	mov rcx, qword ptr [rbx + 0x78]
0x1670:   48 85 c9                              	test rcx, rcx
0x1673:   74 25                                 	je 0x169a <.Lget_literal_price.part.0+0x2ea>
0x1675:   49 83 fe ff                           	cmp r14, -1
0x1679:   0f 84 95 fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x167f:   41 ba 18 00 00 00                     	mov r10d, 0x18
0x1685:   4c 89 f0                              	mov rax, r14
0x1688:   33 d2                                 	xor edx, edx
0x168a:   80 8b d0 00 00 00 02                  	or byte ptr [rbx + 0xd0], 2
0x1691:   49 f7 f2                              	div r10
0x1694:   89 83 80 00 00 00                     	mov dword ptr [rbx + 0x80], eax
0x169a:   48 8b 83 88 00 00 00                  	mov rax, qword ptr [rbx + 0x88]
0x16a1:   48 85 c0                              	test rax, rax
0x16a4:   74 1e                                 	je 0x16c4 <.Lget_literal_price.part.0+0x314>
0x16a6:   49 83 fd ff                           	cmp r13, -1
0x16aa:   0f 84 64 fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x16b0:   4c 89 ea                              	mov rdx, r13
0x16b3:   80 8b d0 00 00 00 04                  	or byte ptr [rbx + 0xd0], 4
0x16ba:   48 c1 ea 03                           	shr rdx, 3
0x16be:   89 93 90 00 00 00                     	mov dword ptr [rbx + 0x90], edx
0x16c4:   48 83 7b 60 00                        	cmp qword ptr [rbx + 0x60], 0
0x16c9:   74 13                                 	je 0x16de <.Lget_literal_price.part.0+0x32e>
0x16cb:   85 ff                                 	test edi, edi
0x16cd:   75 08                                 	jne 0x16d7 <.Lget_literal_price.part.0+0x327>
0x16cf:   33 ff                                 	xor edi, edi
0x16d1:   48 89 7b 60                           	mov qword ptr [rbx + 0x60], rdi
0x16d5:   eb 07                                 	jmp 0x16de <.Lget_literal_price.part.0+0x32e>
0x16d7:   80 8b d0 00 00 00 08                  	or byte ptr [rbx + 0xd0], 8
0x16de:   48 8b 53 30                           	mov rdx, qword ptr [rbx + 0x30]
0x16e2:   48 85 d2                              	test rdx, rdx
0x16e5:   0f 84 29 fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x16eb:   48 8b 7b 38                           	mov rdi, qword ptr [rbx + 0x38]
0x16ef:   4d 85 ff                              	test r15, r15
0x16f2:   0f 84 1c fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x16f8:   48 85 ff                              	test rdi, rdi
0x16fb:   0f 84 13 fe ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x1701:   49 39 d4                              	cmp r12, rdx
0x1704:   72 48                                 	jb 0x174e <.Lget_literal_price.part.0+0x39e>
0x1706:   4c 01 e2                              	add rdx, r12
0x1709:   4c 01 e7                              	add rdi, r12
0x170c:   48 89 53 30                           	mov qword ptr [rbx + 0x30], rdx
0x1710:   48 89 7b 38                           	mov qword ptr [rbx + 0x38], rdi
0x1714:   4d 85 c9                              	test r9, r9
0x1717:   74 07                                 	je 0x1720 <.Lget_literal_price.part.0+0x370>
0x1719:   4d 01 e1                              	add r9, r12
0x171c:   4c 89 4b 40                           	mov qword ptr [rbx + 0x40], r9
0x1720:   48 85 c9                              	test rcx, rcx
0x1723:   74 07                                 	je 0x172c <.Lget_literal_price.part.0+0x37c>
0x1725:   4c 01 e1                              	add rcx, r12
0x1728:   48 89 4b 78                           	mov qword ptr [rbx + 0x78], rcx
0x172c:   48 85 c0                              	test rax, rax
0x172f:   74 0a                                 	je 0x173b <.Lget_literal_price.part.0+0x38b>
0x1731:   4c 01 e0                              	add rax, r12
0x1734:   48 89 83 88 00 00 00                  	mov qword ptr [rbx + 0x88], rax
0x173b:   48 8b 43 70                           	mov rax, qword ptr [rbx + 0x70]
0x173f:   48 85 c0                              	test rax, rax
0x1742:   74 07                                 	je 0x174b <.Lget_literal_price.part.0+0x39b>
0x1744:   4c 01 e0                              	add rax, r12
0x1747:   48 89 43 70                           	mov qword ptr [rbx + 0x70], rax
0x174b:   4d 01 e7                              	add r15, r12
0x174e:   48 8b 43 60                           	mov rax, qword ptr [rbx + 0x60]
0x1752:   48 85 c0                              	test rax, rax
0x1755:   74 0c                                 	je 0x1763 <.Lget_literal_price.part.0+0x3b3>
0x1757:   4c 39 e0                              	cmp rax, r12
0x175a:   73 07                                 	jae 0x1763 <.Lget_literal_price.part.0+0x3b3>
0x175c:   49 01 c4                              	add r12, rax
0x175f:   4c 89 63 60                           	mov qword ptr [rbx + 0x60], r12
0x1763:   48 8b 43 40                           	mov rax, qword ptr [rbx + 0x40]
0x1767:   48 85 c0                              	test rax, rax
0x176a:   74 1b                                 	je 0x1787 <.Lget_literal_price.part.0+0x3d7>
0x176c:   48 89 f2                              	mov rdx, rsi
0x176f:   b9 04 00 00 00                        	mov ecx, 4
0x1774:   48 89 c6                              	mov rsi, rax
0x1777:   48 89 df                              	mov rdi, rbx
0x177a:   e8 01 fc ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x177f:   85 c0                                 	test eax, eax
0x1781:   0f 84 8d fd ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x1787:   48 8b 73 78                           	mov rsi, qword ptr [rbx + 0x78]
0x178b:   48 85 f6                              	test rsi, rsi
0x178e:   74 18                                 	je 0x17a8 <.Lget_literal_price.part.0+0x3f8>
0x1790:   b9 04 00 00 00                        	mov ecx, 4
0x1795:   4c 89 f2                              	mov rdx, r14
0x1798:   48 8b fb                              	mov rdi, rbx
0x179b:   e8 e0 fb ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x17a0:   85 c0                                 	test eax, eax
0x17a2:   0f 84 6c fd ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x17a8:   48 8b b3 88 00 00 00                  	mov rsi, qword ptr [rbx + 0x88]
0x17af:   48 85 f6                              	test rsi, rsi
0x17b2:   74 18                                 	je 0x17cc <.Lget_literal_price.part.0+0x41c>
0x17b4:   b9 04 00 00 00                        	mov ecx, 4
0x17b9:   4c 89 ea                              	mov rdx, r13
0x17bc:   48 8b fb                              	mov rdi, rbx
0x17bf:   e8 bc fb ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x17c4:   85 c0                                 	test eax, eax
0x17c6:   0f 84 48 fd ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x17cc:   48 8b 73 60                           	mov rsi, qword ptr [rbx + 0x60]
0x17d0:   48 85 f6                              	test rsi, rsi
0x17d3:   74 1a                                 	je 0x17ef <.Lget_literal_price.part.0+0x43f>
0x17d5:   48 6b 53 68 14                        	imul rdx, qword ptr [rbx + 0x68], 0x14
0x17da:   b9 04 00 00 00                        	mov ecx, 4
0x17df:   48 8b fb                              	mov rdi, rbx
0x17e2:   e8 99 fb ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x17e7:   85 c0                                 	test eax, eax
0x17e9:   0f 84 25 fd ff ff                     	je 0x1514 <.Lget_literal_price.part.0+0x164>
0x17ef:   41 8b 07                              	mov eax, dword ptr [r15]
0x17f2:   89 83 d8 00 00 00                     	mov dword ptr [rbx + 0xd8], eax
0x17f8:   41 8b 57 08                           	mov edx, dword ptr [r15 + 8]
0x17fc:   41 8b 4f 04                           	mov ecx, dword ptr [r15 + 4]
0x1800:   8d 72 ff                              	lea esi, [rdx - 1]
0x1803:   01 d2                                 	add edx, edx
0x1805:   89 b3 dc 00 00 00                     	mov dword ptr [rbx + 0xdc], esi
0x180b:   49 8d 77 10                           	lea rsi, [r15 + 0x10]
0x180f:   41 8b 7f 0c                           	mov edi, dword ptr [r15 + 0xc]
0x1813:   48 89 b3 e8 00 00 00                  	mov qword ptr [rbx + 0xe8], rsi
0x181a:   48 8d 34 96                           	lea rsi, [rsi + rdx*4]
0x181e:   8b d1                                 	mov edx, ecx
0x1820:   48 2b c2                              	sub rax, rdx
0x1823:   89 bb e0 00 00 00                     	mov dword ptr [rbx + 0xe0], edi
0x1829:   48 89 b3 f0 00 00 00                  	mov qword ptr [rbx + 0xf0], rsi
0x1830:   48 8d 04 86                           	lea rax, [rsi + rax*4]
0x1834:   48 89 83 f8 00 00 00                  	mov qword ptr [rbx + 0xf8], rax
0x183b:   b8 01 00 00 00                        	mov eax, 1
0x1840:   48 83 c4 10                           	add rsp, 0x10
0x1844:   5b                                    	pop rbx
0x1845:   41 5c                                 	pop r12
0x1847:   41 5d                                 	pop r13
0x1849:   41 5e                                 	pop r14
0x184b:   41 5f                                 	pop r15
0x184d:   c3                                    	ret 
0x184e:   31 c0                                 	xor eax, eax
0x1850:   c3                                    	ret 
; section: .text.crc_inia
; function: .Lcrc_init.0 at 0x1860 -- 0x1ad6
0x1860:   f3 0f 1e fa                           	endbr64 
0x1864:   41 57                                 	push r15
0x1866:   31 c9                                 	xor ecx, ecx
0x1868:   41 56                                 	push r14
0x186a:   41 55                                 	push r13
0x186c:   41 54                                 	push r12
0x186e:   53                                    	push rbx
0x186f:   48 89 fb                              	mov rbx, rdi
0x1872:   bf 58 00 00 00                        	mov edi, 0x58
0x1877:   48 83 ec 20                           	sub rsp, 0x20
0x187b:   89 74 24 1c                           	mov dword ptr [rsp + 0x1c], esi
0x187f:   be 0f 00 00 00                        	mov esi, 0xf
0x1884:   89 54 24 10                           	mov dword ptr [rsp + 0x10], edx
0x1888:   ba 03 00 00 00                        	mov edx, 3
0x188d:   e8 4e 93 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x1892:   85 c0                                 	test eax, eax
0x1894:   75 08                                 	jne 0x189e <.Lcrc_init.0+0x3e>
0x1896:   45 31 e4                              	xor r12d, r12d
0x1899:   e9 27 02 00 00                        	jmp 0x1ac5 <.Lcrc_init.0+0x265>
0x189e:   83 7c 24 10 00                        	cmp dword ptr [rsp + 0x10], 0
0x18a3:   74 0d                                 	je 0x18b2 <.Lcrc_init.0+0x52>
0x18a5:   8a 83 d0 00 00 00                     	mov al, byte ptr [rbx + 0xd0]
0x18ab:   83 e0 18                              	and eax, 0x18
0x18ae:   3c 18                                 	cmp al, 0x18
0x18b0:   75 e4                                 	jne 0x1896 <.Lcrc_init.0+0x36>
0x18b2:   45 31 f6                              	xor r14d, r14d
0x18b5:   44 3b b3 d8 00 00 00                  	cmp r14d, dword ptr [rbx + 0xd8]
0x18bc:   73 d8                                 	jae 0x1896 <.Lcrc_init.0+0x36>
0x18be:   48 8b 93 f0 00 00 00                  	mov rdx, qword ptr [rbx + 0xf0]
0x18c5:   44 89 f0                              	mov eax, r14d
0x18c8:   b9 04 00 00 00                        	mov ecx, 4
0x18cd:   48 89 df                              	mov rdi, rbx
0x18d0:   4c 8d 24 82                           	lea r12, [rdx + rax*4]
0x18d4:   ba 04 00 00 00                        	mov edx, 4
0x18d9:   4c 89 e6                              	mov rsi, r12
0x18dc:   e8 9f fa ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x18e1:   85 c0                                 	test eax, eax
0x18e3:   74 b1                                 	je 0x1896 <.Lcrc_init.0+0x36>
0x18e5:   41 8b 14 24                           	mov edx, dword ptr [r12]
0x18e9:   48 8b 83 f8 00 00 00                  	mov rax, qword ptr [rbx + 0xf8]
0x18f0:   b9 04 00 00 00                        	mov ecx, 4
0x18f5:   48 89 df                              	mov rdi, rbx
0x18f8:   48 8d 04 90                           	lea rax, [rax + rdx*4]
0x18fc:   ba 08 00 00 00                        	mov edx, 8
0x1901:   48 89 c6                              	mov rsi, rax
0x1904:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x1909:   e8 72 fa ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x190e:   85 c0                                 	test eax, eax
0x1910:   74 84                                 	je 0x1896 <.Lcrc_init.0+0x36>
0x1912:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1917:   b9 04 00 00 00                        	mov ecx, 4
0x191c:   ba 18 00 00 00                        	mov edx, 0x18
0x1921:   48 8b fb                              	mov rdi, rbx
0x1924:   48 2b 83 f8 00 00 00                  	sub rax, qword ptr [rbx + 0xf8]
0x192b:   48 c1 f8 02                           	sar rax, 2
0x192f:   41 89 c5                              	mov r13d, eax
0x1932:   4d 6b e5 18                           	imul r12, r13, 0x18
0x1936:   4c 03 63 38                           	add r12, qword ptr [rbx + 0x38]
0x193a:   4c 89 e6                              	mov rsi, r12
0x193d:   e8 3e fa ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1942:   85 c0                                 	test eax, eax
0x1944:   0f 84 4c ff ff ff                     	je 0x1896 <.Lcrc_init.0+0x36>
0x194a:   49 83 7c 24 08 00                     	cmp qword ptr [r12 + 8], 0
0x1950:   75 19                                 	jne 0x196b <.Lcrc_init.0+0x10b>
0x1952:   48 83 44 24 08 04                     	add qword ptr [rsp + 8], 4
0x1958:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x195d:   f6 40 fc 01                           	test byte ptr [rax - 4], 1
0x1961:   74 af                                 	je 0x1912 <.Lcrc_init.0+0xb2>
0x1963:   41 ff c6                              	inc r14d
0x1966:   e9 4a ff ff ff                        	jmp 0x18b5 <.Lcrc_init.0+0x55>
0x196b:   66 41 83 7c 24 06 00                  	cmp word ptr [r12 + 6], 0
0x1972:   74 de                                 	je 0x1952 <.Lcrc_init.0+0xf2>
0x1974:   41 8b 04 24                           	mov eax, dword ptr [r12]
0x1978:   48 03 43 30                           	add rax, qword ptr [rbx + 0x30]
0x197c:   b9 04 00 00 00                        	mov ecx, 4
0x1981:   48 8b fb                              	mov rdi, rbx
0x1984:   ba 01 00 00 00                        	mov edx, 1
0x1989:   48 89 c6                              	mov rsi, rax
0x198c:   49 89 c7                              	mov r15, rax
0x198f:   e8 ec f9 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1994:   85 c0                                 	test eax, eax
0x1996:   0f 84 fa fe ff ff                     	je 0x1896 <.Lcrc_init.0+0x36>
0x199c:   31 f6                                 	xor esi, esi
0x199e:   4c 89 ff                              	mov rdi, r15
0x19a1:   e8 fa 8e 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x19a6:   8b 4c 24 1c                           	mov ecx, dword ptr [rsp + 0x1c]
0x19aa:   3b c1                                 	cmp eax, ecx
0x19ac:   75 a4                                 	jne 0x1952 <.Lcrc_init.0+0xf2>
0x19ae:   83 7c 24 10 00                        	cmp dword ptr [rsp + 0x10], 0
0x19b3:   0f 84 0c 01 00 00                     	je 0x1ac5 <.Lcrc_init.0+0x265>
0x19b9:   4d 01 ed                              	add r13, r13
0x19bc:   4c 03 6b 70                           	add r13, qword ptr [rbx + 0x70]
0x19c0:   b9 04 00 00 00                        	mov ecx, 4
0x19c5:   48 8b fb                              	mov rdi, rbx
0x19c8:   ba 02 00 00 00                        	mov edx, 2
0x19cd:   4c 89 ee                              	mov rsi, r13
0x19d0:   e8 ab f9 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x19d5:   85 c0                                 	test eax, eax
0x19d7:   0f 84 b9 fe ff ff                     	je 0x1896 <.Lcrc_init.0+0x36>
0x19dd:   8a 83 d0 00 00 00                     	mov al, byte ptr [rbx + 0xd0]
0x19e3:   66 41 8b 55 00                        	mov dx, word ptr [r13]
0x19e8:   83 e0 18                              	and eax, 0x18
0x19eb:   3c 18                                 	cmp al, 0x18
0x19ed:   0f 85 5f ff ff ff                     	jne 0x1952 <.Lcrc_init.0+0xf2>
0x19f3:   66 f7 c2 fe 7f                        	test dx, 0x7ffe
0x19f8:   0f 84 54 ff ff ff                     	je 0x1952 <.Lcrc_init.0+0xf2>
0x19fe:   66 81 e2 ff 7f                        	and dx, 0x7fff
0x1a03:   33 c0                                 	xor eax, eax
0x1a05:   4c 8b 6b 60                           	mov r13, qword ptr [rbx + 0x60]
0x1a09:   66 89 54 24 1a                        	mov word ptr [rsp + 0x1a], dx
0x1a0e:   89 44 24 14                           	mov dword ptr [rsp + 0x14], eax
0x1a12:   8b 44 24 14                           	mov eax, dword ptr [rsp + 0x14]
0x1a16:   48 3b 43 68                           	cmp rax, qword ptr [rbx + 0x68]
0x1a1a:   0f 83 32 ff ff ff                     	jae 0x1952 <.Lcrc_init.0+0xf2>
0x1a20:   b9 04 00 00 00                        	mov ecx, 4
0x1a25:   ba 14 00 00 00                        	mov edx, 0x14
0x1a2a:   4c 89 ee                              	mov rsi, r13
0x1a2d:   48 8b fb                              	mov rdi, rbx
0x1a30:   e8 4b f9 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1a35:   85 c0                                 	test eax, eax
0x1a37:   0f 84 15 ff ff ff                     	je 0x1952 <.Lcrc_init.0+0xf2>
0x1a3d:   66 41 83 7d 00 01                     	cmp word ptr [r13], 1
0x1a43:   0f 85 09 ff ff ff                     	jne 0x1952 <.Lcrc_init.0+0xf2>
0x1a49:   66 8b 44 24 1a                        	mov ax, word ptr [rsp + 0x1a]
0x1a4e:   66 41 3b 45 04                        	cmp ax, word ptr [r13 + 4]
0x1a53:   74 15                                 	je 0x1a6a <.Lcrc_init.0+0x20a>
0x1a55:   41 8b 45 10                           	mov eax, dword ptr [r13 + 0x10]
0x1a59:   85 c0                                 	test eax, eax
0x1a5b:   0f 84 f1 fe ff ff                     	je 0x1952 <.Lcrc_init.0+0xf2>
0x1a61:   ff 44 24 14                           	inc dword ptr [rsp + 0x14]
0x1a65:   49 01 c5                              	add r13, rax
0x1a68:   eb a8                                 	jmp 0x1a12 <.Lcrc_init.0+0x1b2>
0x1a6a:   45 8b 7d 0c                           	mov r15d, dword ptr [r13 + 0xc]
0x1a6e:   b9 04 00 00 00                        	mov ecx, 4
0x1a73:   ba 08 00 00 00                        	mov edx, 8
0x1a78:   48 89 df                              	mov rdi, rbx
0x1a7b:   4d 01 ef                              	add r15, r13
0x1a7e:   4c 89 fe                              	mov rsi, r15
0x1a81:   e8 fa f8 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1a86:   85 c0                                 	test eax, eax
0x1a88:   0f 84 c4 fe ff ff                     	je 0x1952 <.Lcrc_init.0+0xf2>
0x1a8e:   41 8b 07                              	mov eax, dword ptr [r15]
0x1a91:   48 03 43 30                           	add rax, qword ptr [rbx + 0x30]
0x1a95:   b9 04 00 00 00                        	mov ecx, 4
0x1a9a:   48 89 df                              	mov rdi, rbx
0x1a9d:   ba 01 00 00 00                        	mov edx, 1
0x1aa2:   48 8b f0                              	mov rsi, rax
0x1aa5:   49 89 c7                              	mov r15, rax
0x1aa8:   e8 d3 f8 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1aad:   85 c0                                 	test eax, eax
0x1aaf:   0f 84 9d fe ff ff                     	je 0x1952 <.Lcrc_init.0+0xf2>
0x1ab5:   31 f6                                 	xor esi, esi
0x1ab7:   4c 89 ff                              	mov rdi, r15
0x1aba:   e8 e1 8d 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x1abf:   39 44 24 10                           	cmp dword ptr [rsp + 0x10], eax
0x1ac3:   75 90                                 	jne 0x1a55 <.Lcrc_init.0+0x1f5>
0x1ac5:   48 83 c4 20                           	add rsp, 0x20
0x1ac9:   4c 89 e0                              	mov rax, r12
0x1acc:   5b                                    	pop rbx
0x1acd:   41 5c                                 	pop r12
0x1acf:   41 5d                                 	pop r13
0x1ad1:   41 5e                                 	pop r14
0x1ad3:   41 5f                                 	pop r15
0x1ad5:   c3                                    	ret 
; section: .text.crc64_generia
; function: .Lcrc64_generic.0 at 0x1ae0 -- 0x1b10
0x1ae0:   f3 0f 1e fa                           	endbr64 
0x1ae4:   53                                    	push rbx
0x1ae5:   31 d2                                 	xor edx, edx
0x1ae7:   48 89 fb                              	mov rbx, rdi
0x1aea:   e8 71 fd ff ff                        	call 0x1860 <.Lcrc_init.0>
0x1aef:   48 85 c0                              	test rax, rax
0x1af2:   74 1a                                 	je 0x1b0e <.Lcrc64_generic.0+0x2e>
0x1af4:   48 8b 50 08                           	mov rdx, qword ptr [rax + 8]
0x1af8:   48 85 d2                              	test rdx, rdx
0x1afb:   74 0f                                 	je 0x1b0c <.Lcrc64_generic.0+0x2c>
0x1afd:   66 83 78 06 00                        	cmp word ptr [rax + 6], 0
0x1b02:   74 08                                 	je 0x1b0c <.Lcrc64_generic.0+0x2c>
0x1b04:   48 8b 03                              	mov rax, qword ptr [rbx]
0x1b07:   48 01 d0                              	add rax, rdx
0x1b0a:   eb 02                                 	jmp 0x1b0e <.Lcrc64_generic.0+0x2e>
0x1b0c:   31 c0                                 	xor eax, eax
0x1b0e:   5b                                    	pop rbx
0x1b0f:   c3                                    	ret 
; function: function_1b10 at 0x1b10 -- 0x1b59
0x1b10:   48 89 f8                              	mov rax, rdi
0x1b13:   48 39 fe                              	cmp rsi, rdi
0x1b16:   73 24                                 	jae 0x1b3c <function_1b10+0x2c>
0x1b18:   48 8d 0c 16                           	lea rcx, [rsi + rdx]
0x1b1c:   48 39 cf                              	cmp rdi, rcx
0x1b1f:   73 1b                                 	jae 0x1b3c <function_1b10+0x2c>
0x1b21:   48 8d 4a ff                           	lea rcx, [rdx - 1]
0x1b25:   48 85 d2                              	test rdx, rdx
0x1b28:   74 2d                                 	je 0x1b57 <function_1b10+0x47>
0x1b2a:   0f b6 14 0e                           	movzx edx, byte ptr [rsi + rcx]
0x1b2e:   88 14 08                              	mov byte ptr [rax + rcx], dl
0x1b31:   48 83 e9 01                           	sub rcx, 1
0x1b35:   48 83 f9 ff                           	cmp rcx, -1
0x1b39:   75 ef                                 	jne 0x1b2a <function_1b10+0x1a>
0x1b3b:   c3                                    	ret 
0x1b3c:   b9 00 00 00 00                        	mov ecx, 0
0x1b41:   48 85 d2                              	test rdx, rdx
0x1b44:   74 12                                 	je 0x1b58 <function_1b10+0x48>
0x1b46:   0f b6 3c 0e                           	movzx edi, byte ptr [rsi + rcx]
0x1b4a:   40 88 3c 08                           	mov byte ptr [rax + rcx], dil
0x1b4e:   48 83 c1 01                           	add rcx, 1
0x1b52:   48 39 ca                              	cmp rdx, rcx
0x1b55:   75 ef                                 	jne 0x1b46 <function_1b10+0x36>
0x1b57:   c3                                    	ret 
0x1b58:   c3                                    	ret 
; section: .text.init_pric_tabla
; function: .Linit_pric_table.part.1 at 0x1b60 -- 0x1b6b
0x1b60:   f3 0f 1e fa                           	endbr64 
0x1b64:   89 d6                                 	mov esi, edx
0x1b66:   e9 75 ff ff ff                        	jmp 0x1ae0 <.Lcrc64_generic.0>
; section: .text.stream_encoder_updata
; function: .Lstream_encoder_update.0 at 0x1b70 -- 0x1c0a
0x1b70:   f3 0f 1e fa                           	endbr64 
0x1b74:   f6 87 d0 00 00 00 02                  	test byte ptr [rdi + 0xd0], 2
0x1b7b:   0f 84 86 00 00 00                     	je 0x1c07 <.Lstream_encoder_update.0+0x97>
0x1b81:   8b 87 80 00 00 00                     	mov eax, dword ptr [rdi + 0x80]
0x1b87:   85 c0                                 	test eax, eax
0x1b89:   74 7c                                 	je 0x1c07 <.Lstream_encoder_update.0+0x97>
0x1b8b:   41 54                                 	push r12
0x1b8d:   49 89 d2                              	mov r10, rdx
0x1b90:   49 89 f1                              	mov r9, rsi
0x1b93:   31 d2                                 	xor edx, edx
0x1b95:   53                                    	push rbx
0x1b96:   48 89 cb                              	mov rbx, rcx
0x1b99:   4d 85 c0                              	test r8, r8
0x1b9c:   74 03                                 	je 0x1ba1 <.Lstream_encoder_update.0+0x31>
0x1b9e:   49 8b 10                              	mov rdx, qword ptr [r8]
0x1ba1:   4c 8b 1f                              	mov r11, qword ptr [rdi]
0x1ba4:   4d 89 cc                              	mov r12, r9
0x1ba7:   89 c6                                 	mov esi, eax
0x1ba9:   4d 29 dc                              	sub r12, r11
0x1bac:   48 39 f2                              	cmp rdx, rsi
0x1baf:   73 3b                                 	jae 0x1bec <.Lstream_encoder_update.0+0x7c>
0x1bb1:   48 6b ca 18                           	imul rcx, rdx, 0x18
0x1bb5:   48 03 4f 78                           	add rcx, qword ptr [rdi + 0x78]
0x1bb9:   83 79 08 08                           	cmp dword ptr [rcx + 8], 8
0x1bbd:   75 28                                 	jne 0x1be7 <.Lstream_encoder_update.0+0x77>
0x1bbf:   48 8b 41 10                           	mov rax, qword ptr [rcx + 0x10]
0x1bc3:   4d 85 c9                              	test r9, r9
0x1bc6:   75 05                                 	jne 0x1bcd <.Lstream_encoder_update.0+0x5d>
0x1bc8:   4c 01 d8                              	add rax, r11
0x1bcb:   eb 10                                 	jmp 0x1bdd <.Lstream_encoder_update.0+0x6d>
0x1bcd:   4c 39 e0                              	cmp rax, r12
0x1bd0:   75 15                                 	jne 0x1be7 <.Lstream_encoder_update.0+0x77>
0x1bd2:   48 8b 01                              	mov rax, qword ptr [rcx]
0x1bd5:   4c 01 d8                              	add rax, r11
0x1bd8:   4d 85 d2                              	test r10, r10
0x1bdb:   74 1b                                 	je 0x1bf8 <.Lstream_encoder_update.0+0x88>
0x1bdd:   4c 39 d0                              	cmp rax, r10
0x1be0:   72 05                                 	jb 0x1be7 <.Lstream_encoder_update.0+0x77>
0x1be2:   48 39 c3                              	cmp rbx, rax
0x1be5:   73 11                                 	jae 0x1bf8 <.Lstream_encoder_update.0+0x88>
0x1be7:   48 ff c2                              	inc rdx
0x1bea:   eb c0                                 	jmp 0x1bac <.Lstream_encoder_update.0+0x3c>
0x1bec:   4d 85 c0                              	test r8, r8
0x1bef:   74 03                                 	je 0x1bf4 <.Lstream_encoder_update.0+0x84>
0x1bf1:   49 89 10                              	mov qword ptr [r8], rdx
0x1bf4:   31 c0                                 	xor eax, eax
0x1bf6:   eb 0b                                 	jmp 0x1c03 <.Lstream_encoder_update.0+0x93>
0x1bf8:   4d 85 c0                              	test r8, r8
0x1bfb:   74 06                                 	je 0x1c03 <.Lstream_encoder_update.0+0x93>
0x1bfd:   48 ff c2                              	inc rdx
0x1c00:   49 89 10                              	mov qword ptr [r8], rdx
0x1c03:   5b                                    	pop rbx
0x1c04:   41 5c                                 	pop r12
0x1c06:   c3                                    	ret 
0x1c07:   31 c0                                 	xor eax, eax
0x1c09:   c3                                    	ret 
; section: .text.stream_encoder_updatz
; function: .Lstream_encoder_update.1 at 0x1c10 -- 0x1d95
0x1c10:   f3 0f 1e fa                           	endbr64 
0x1c14:   41 57                                 	push r15
0x1c16:   41 56                                 	push r14
0x1c18:   41 55                                 	push r13
0x1c1a:   41 54                                 	push r12
0x1c1c:   53                                    	push rbx
0x1c1d:   48 83 ec 40                           	sub rsp, 0x40
0x1c21:   4c 8b 3f                              	mov r15, qword ptr [rdi]
0x1c24:   48 89 4c 24 10                        	mov qword ptr [rsp + 0x10], rcx
0x1c29:   f6 87 d0 00 00 00 04                  	test byte ptr [rdi + 0xd0], 4
0x1c30:   0f 84 3d 01 00 00                     	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1c36:   8b 87 90 00 00 00                     	mov eax, dword ptr [rdi + 0x90]
0x1c3c:   49 89 f6                              	mov r14, rsi
0x1c3f:   48 85 f6                              	test rsi, rsi
0x1c42:   0f 84 2b 01 00 00                     	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1c48:   85 c0                                 	test eax, eax
0x1c4a:   0f 84 23 01 00 00                     	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1c50:   49 89 d1                              	mov r9, rdx
0x1c53:   4d 89 c4                              	mov r12, r8
0x1c56:   31 db                                 	xor ebx, ebx
0x1c58:   4d 85 c0                              	test r8, r8
0x1c5b:   74 03                                 	je 0x1c60 <.Lstream_encoder_update.1+0x50>
0x1c5d:   49 8b 18                              	mov rbx, qword ptr [r8]
0x1c60:   4d 29 fe                              	sub r14, r15
0x1c63:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x1c68:   45 31 d2                              	xor r10d, r10d
0x1c6b:   4c 89 74 24 08                        	mov qword ptr [rsp + 8], r14
0x1c70:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x1c75:   48 39 c3                              	cmp rbx, rax
0x1c78:   0f 83 ec 00 00 00                     	jae 0x1d6a <.Lstream_encoder_update.1+0x15a>
0x1c7e:   48 8b 87 88 00 00 00                  	mov rax, qword ptr [rdi + 0x88]
0x1c85:   4b 8d 34 17                           	lea rsi, [r15 + r10]
0x1c89:   4c 8b 34 d8                           	mov r14, qword ptr [rax + rbx*8]
0x1c8d:   41 f6 c6 01                           	test r14b, 1
0x1c91:   75 66                                 	jne 0x1cf9 <.Lstream_encoder_update.1+0xe9>
0x1c93:   4f 8d 2c 37                           	lea r13, [r15 + r14]
0x1c97:   b9 04 00 00 00                        	mov ecx, 4
0x1c9c:   ba 08 00 00 00                        	mov edx, 8
0x1ca1:   4c 89 4c 24 28                        	mov qword ptr [rsp + 0x28], r9
0x1ca6:   4c 89 ee                              	mov rsi, r13
0x1ca9:   48 89 7c 24 20                        	mov qword ptr [rsp + 0x20], rdi
0x1cae:   e8 cd f6 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1cb3:   85 c0                                 	test eax, eax
0x1cb5:   0f 84 b8 00 00 00                     	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1cbb:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1cc0:   49 39 45 00                           	cmp qword ptr [r13], rax
0x1cc4:   48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0x1cc9:   4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x1cce:   75 19                                 	jne 0x1ce9 <.Lstream_encoder_update.1+0xd9>
0x1cd0:   4d 85 c9                              	test r9, r9
0x1cd3:   0f 84 9f 00 00 00                     	je 0x1d78 <.Lstream_encoder_update.1+0x168>
0x1cd9:   4d 39 cd                              	cmp r13, r9
0x1cdc:   72 0b                                 	jb 0x1ce9 <.Lstream_encoder_update.1+0xd9>
0x1cde:   4c 39 6c 24 10                        	cmp qword ptr [rsp + 0x10], r13
0x1ce3:   0f 83 8f 00 00 00                     	jae 0x1d78 <.Lstream_encoder_update.1+0x168>
0x1ce9:   4d 8d 56 08                           	lea r10, [r14 + 8]
0x1ced:   eb 73                                 	jmp 0x1d62 <.Lstream_encoder_update.1+0x152>
0x1cef:   41 f6 c6 01                           	test r14b, 1
0x1cf3:   75 0b                                 	jne 0x1d00 <.Lstream_encoder_update.1+0xf0>
0x1cf5:   48 83 c6 08                           	add rsi, 8
0x1cf9:   49 d1 ee                              	shr r14, 1
0x1cfc:   75 f1                                 	jne 0x1cef <.Lstream_encoder_update.1+0xdf>
0x1cfe:   eb 5b                                 	jmp 0x1d5b <.Lstream_encoder_update.1+0x14b>
0x1d00:   b9 04 00 00 00                        	mov ecx, 4
0x1d05:   ba 08 00 00 00                        	mov edx, 8
0x1d0a:   4c 89 4c 24 38                        	mov qword ptr [rsp + 0x38], r9
0x1d0f:   49 89 f5                              	mov r13, rsi
0x1d12:   4c 89 54 24 30                        	mov qword ptr [rsp + 0x30], r10
0x1d17:   48 89 74 24 28                        	mov qword ptr [rsp + 0x28], rsi
0x1d1c:   48 89 7c 24 20                        	mov qword ptr [rsp + 0x20], rdi
0x1d21:   e8 5a f6 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x1d26:   85 c0                                 	test eax, eax
0x1d28:   74 49                                 	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1d2a:   48 8b 74 24 28                        	mov rsi, qword ptr [rsp + 0x28]
0x1d2f:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x1d34:   48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0x1d39:   4c 8b 54 24 30                        	mov r10, qword ptr [rsp + 0x30]
0x1d3e:   48 39 06                              	cmp qword ptr [rsi], rax
0x1d41:   4c 8b 4c 24 38                        	mov r9, qword ptr [rsp + 0x38]
0x1d46:   75 ad                                 	jne 0x1cf5 <.Lstream_encoder_update.1+0xe5>
0x1d48:   4d 85 c9                              	test r9, r9
0x1d4b:   74 2b                                 	je 0x1d78 <.Lstream_encoder_update.1+0x168>
0x1d4d:   49 39 f1                              	cmp r9, rsi
0x1d50:   77 a3                                 	ja 0x1cf5 <.Lstream_encoder_update.1+0xe5>
0x1d52:   48 39 74 24 10                        	cmp qword ptr [rsp + 0x10], rsi
0x1d57:   72 9c                                 	jb 0x1cf5 <.Lstream_encoder_update.1+0xe5>
0x1d59:   eb 1d                                 	jmp 0x1d78 <.Lstream_encoder_update.1+0x168>
0x1d5b:   49 81 c2 f8 01 00 00                  	add r10, 0x1f8
0x1d62:   48 ff c3                              	inc rbx
0x1d65:   e9 06 ff ff ff                        	jmp 0x1c70 <.Lstream_encoder_update.1+0x60>
0x1d6a:   4d 85 e4                              	test r12, r12
0x1d6d:   74 04                                 	je 0x1d73 <.Lstream_encoder_update.1+0x163>
0x1d6f:   49 89 1c 24                           	mov qword ptr [r12], rbx
0x1d73:   45 31 ed                              	xor r13d, r13d
0x1d76:   eb 0c                                 	jmp 0x1d84 <.Lstream_encoder_update.1+0x174>
0x1d78:   4d 85 e4                              	test r12, r12
0x1d7b:   74 07                                 	je 0x1d84 <.Lstream_encoder_update.1+0x174>
0x1d7d:   48 ff c3                              	inc rbx
0x1d80:   49 89 1c 24                           	mov qword ptr [r12], rbx
0x1d84:   48 83 c4 40                           	add rsp, 0x40
0x1d88:   4c 89 e8                              	mov rax, r13
0x1d8b:   5b                                    	pop rbx
0x1d8c:   41 5c                                 	pop r12
0x1d8e:   41 5d                                 	pop r13
0x1d90:   41 5e                                 	pop r14
0x1d92:   41 5f                                 	pop r15
0x1d94:   c3                                    	ret 
; section: .text.lz_encoda
; function: .Llz_encode.1 at 0x1da0 -- 0x1e3d
0x1da0:   f3 0f 1e fa                           	endbr64 
0x1da4:   41 57                                 	push r15
0x1da6:   41 89 d7                              	mov r15d, edx
0x1da9:   ba 05 00 00 00                        	mov edx, 5
0x1dae:   41 56                                 	push r14
0x1db0:   49 89 fe                              	mov r14, rdi
0x1db3:   31 ff                                 	xor edi, edi
0x1db5:   41 55                                 	push r13
0x1db7:   49 89 f5                              	mov r13, rsi
0x1dba:   be 67 00 00 00                        	mov esi, 0x67
0x1dbf:   41 54                                 	push r12
0x1dc1:   45 89 c4                              	mov r12d, r8d
0x1dc4:   53                                    	push rbx
0x1dc5:   48 89 cb                              	mov rbx, rcx
0x1dc8:   b9 04 00 00 00                        	mov ecx, 4
0x1dcd:   48 83 ec 10                           	sub rsp, 0x10
0x1dd1:   e8 da 8d 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x1dd6:   31 d2                                 	xor edx, edx
0x1dd8:   85 c0                                 	test eax, eax
0x1dda:   75 16                                 	jne 0x1df2 <.Llz_encode.1+0x52>
0x1ddc:   33 c0                                 	xor eax, eax
0x1dde:   eb 4f                                 	jmp 0x1e2f <.Llz_encode.1+0x8f>
0x1de0:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x1de4:   8b c8                                 	mov ecx, eax
0x1de6:   48 3b cb                              	cmp rcx, rbx
0x1de9:   74 0e                                 	je 0x1df9 <.Llz_encode.1+0x59>
0x1deb:   48 ff c2                              	inc rdx
0x1dee:   49 83 c5 18                           	add r13, 0x18
0x1df2:   4c 39 fa                              	cmp rdx, r15
0x1df5:   72 e9                                 	jb 0x1de0 <.Llz_encode.1+0x40>
0x1df7:   eb e3                                 	jmp 0x1ddc <.Llz_encode.1+0x3c>
0x1df9:   48 c1 e8 20                           	shr rax, 0x20
0x1dfd:   48 6b c0 18                           	imul rax, rax, 0x18
0x1e01:   49 03 46 38                           	add rax, qword ptr [r14 + 0x38]
0x1e05:   66 83 78 06 00                        	cmp word ptr [rax + 6], 0
0x1e0a:   75 df                                 	jne 0x1deb <.Llz_encode.1+0x4b>
0x1e0c:   8b 38                                 	mov edi, dword ptr [rax]
0x1e0e:   33 f6                                 	xor esi, esi
0x1e10:   49 03 7e 30                           	add rdi, qword ptr [r14 + 0x30]
0x1e14:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x1e19:   e8 82 8a 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x1e1e:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x1e23:   44 39 e0                              	cmp eax, r12d
0x1e26:   75 c3                                 	jne 0x1deb <.Llz_encode.1+0x4b>
0x1e28:   49 8b 45 00                           	mov rax, qword ptr [r13]
0x1e2c:   49 03 06                              	add rax, qword ptr [r14]
0x1e2f:   48 83 c4 10                           	add rsp, 0x10
0x1e33:   5b                                    	pop rbx
0x1e34:   41 5c                                 	pop r12
0x1e36:   41 5d                                 	pop r13
0x1e38:   41 5e                                 	pop r14
0x1e3a:   41 5f                                 	pop r15
0x1e3c:   c3                                    	ret 
; section: .text.delta_coder_ena
; function: .Ldelta_coder_end.1 at 0x1e40 -- 0x1e68
0x1e40:   f3 0f 1e fa                           	endbr64 
0x1e44:   41 89 f0                              	mov r8d, esi
0x1e47:   f6 87 d0 00 00 00 01                  	test byte ptr [rdi + 0xd0], 1
0x1e4e:   74 15                                 	je 0x1e65 <.Ldelta_coder_end.1+0x25>
0x1e50:   8b 57 48                              	mov edx, dword ptr [rdi + 0x48]
0x1e53:   85 d2                                 	test edx, edx
0x1e55:   74 0e                                 	je 0x1e65 <.Ldelta_coder_end.1+0x25>
0x1e57:   48 8b 77 40                           	mov rsi, qword ptr [rdi + 0x40]
0x1e5b:   b9 07 00 00 00                        	mov ecx, 7
0x1e60:   e9 3b ff ff ff                        	jmp 0x1da0 <.Llz_encode.1>
0x1e65:   31 c0                                 	xor eax, eax
0x1e67:   c3                                    	ret 
; section: .text.delta_decoda
; function: .Ldelta_decode.part.0 at 0x1e70 -- 0x1e9b
0x1e70:   f3 0f 1e fa                           	endbr64 
0x1e74:   41 89 f0                              	mov r8d, esi
0x1e77:   f6 87 d0 00 00 00 02                  	test byte ptr [rdi + 0xd0], 2
0x1e7e:   74 18                                 	je 0x1e98 <.Ldelta_decode.part.0+0x28>
0x1e80:   8b 97 80 00 00 00                     	mov edx, dword ptr [rdi + 0x80]
0x1e86:   85 d2                                 	test edx, edx
0x1e88:   74 0e                                 	je 0x1e98 <.Ldelta_decode.part.0+0x28>
0x1e8a:   48 8b 77 78                           	mov rsi, qword ptr [rdi + 0x78]
0x1e8e:   b9 06 00 00 00                        	mov ecx, 6
0x1e93:   e9 08 ff ff ff                        	jmp 0x1da0 <.Llz_encode.1>
0x1e98:   31 c0                                 	xor eax, eax
0x1e9a:   c3                                    	ret 
; section: .text.lzma_check_updata
; function: .Llzma_check_update.0 at 0x1ea0 -- 0x1f4e
0x1ea0:   f3 0f 1e fa                           	endbr64 
0x1ea4:   41 54                                 	push r12
0x1ea6:   ba 07 00 00 00                        	mov edx, 7
0x1eab:   49 89 f4                              	mov r12, rsi
0x1eae:   be cb 00 00 00                        	mov esi, 0xcb
0x1eb3:   53                                    	push rbx
0x1eb4:   48 89 fb                              	mov rbx, rdi
0x1eb7:   31 ff                                 	xor edi, edi
0x1eb9:   51                                    	push rcx
0x1eba:   b9 0c 00 00 00                        	mov ecx, 0xc
0x1ebf:   e8 ec 8c 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x1ec4:   8b d0                                 	mov edx, eax
0x1ec6:   31 c0                                 	xor eax, eax
0x1ec8:   85 d2                                 	test edx, edx
0x1eca:   74 7d                                 	je 0x1f49 <.Llzma_check_update.0+0xa9>
0x1ecc:   48 8b 83 98 00 00 00                  	mov rax, qword ptr [rbx + 0x98]
0x1ed3:   48 8b 13                              	mov rdx, qword ptr [rbx]
0x1ed6:   48 85 c0                              	test rax, rax
0x1ed9:   75 08                                 	jne 0x1ee3 <.Llzma_check_update.0+0x43>
0x1edb:   0f b7 7b 18                           	movzx edi, word ptr [rbx + 0x18]
0x1edf:   33 f6                                 	xor esi, esi
0x1ee1:   eb 0c                                 	jmp 0x1eef <.Llzma_check_update.0+0x4f>
0x1ee3:   48 8b 93 a0 00 00 00                  	mov rdx, qword ptr [rbx + 0xa0]
0x1eea:   eb 59                                 	jmp 0x1f45 <.Llzma_check_update.0+0xa5>
0x1eec:   48 ff c6                              	inc rsi
0x1eef:   3b f7                                 	cmp esi, edi
0x1ef1:   73 56                                 	jae 0x1f49 <.Llzma_check_update.0+0xa9>
0x1ef3:   48 6b ce 38                           	imul rcx, rsi, 0x38
0x1ef7:   48 03 4b 10                           	add rcx, qword ptr [rbx + 0x10]
0x1efb:   83 39 01                              	cmp dword ptr [rcx], 1
0x1efe:   75 ec                                 	jne 0x1eec <.Llzma_check_update.0+0x4c>
0x1f00:   f6 41 04 01                           	test byte ptr [rcx + 4], 1
0x1f04:   74 e6                                 	je 0x1eec <.Llzma_check_update.0+0x4c>
0x1f06:   48 89 d0                              	mov rax, rdx
0x1f09:   48 8b 51 28                           	mov rdx, qword ptr [rcx + 0x28]
0x1f0d:   48 2b 43 08                           	sub rax, qword ptr [rbx + 8]
0x1f11:   48 03 41 10                           	add rax, qword ptr [rcx + 0x10]
0x1f15:   48 01 c2                              	add rdx, rax
0x1f18:   48 25 00 f0 ff ff                     	and rax, 0xfffffffffffff000
0x1f1e:   f7 c2 ff 0f 00 00                     	test edx, 0xfff
0x1f24:   74 0e                                 	je 0x1f34 <.Llzma_check_update.0+0x94>
0x1f26:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x1f2d:   48 81 c2 00 10 00 00                  	add rdx, 0x1000
0x1f34:   48 2b d0                              	sub rdx, rax
0x1f37:   48 89 83 98 00 00 00                  	mov qword ptr [rbx + 0x98], rax
0x1f3e:   48 89 93 a0 00 00 00                  	mov qword ptr [rbx + 0xa0], rdx
0x1f45:   49 89 14 24                           	mov qword ptr [r12], rdx
0x1f49:   5a                                    	pop rdx
0x1f4a:   5b                                    	pop rbx
0x1f4b:   41 5c                                 	pop r12
0x1f4d:   c3                                    	ret 
; section: .text.index_tree_appena
; function: .Lindex_tree_append.part.0 at 0x1f50 -- 0x2076
0x1f50:   f3 0f 1e fa                           	endbr64 
0x1f54:   41 55                                 	push r13
0x1f56:   31 c9                                 	xor ecx, ecx
0x1f58:   ba 0b 00 00 00                        	mov edx, 0xb
0x1f5d:   41 54                                 	push r12
0x1f5f:   49 89 f4                              	mov r12, rsi
0x1f62:   be 0e 00 00 00                        	mov esi, 0xe
0x1f67:   53                                    	push rbx
0x1f68:   48 89 fb                              	mov rbx, rdi
0x1f6b:   bf bd 00 00 00                        	mov edi, 0xbd
0x1f70:   48 83 ec 10                           	sub rsp, 0x10
0x1f74:   e8 67 8c 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x1f79:   85 c0                                 	test eax, eax
0x1f7b:   75 07                                 	jne 0x1f84 <.Lindex_tree_append.part.0+0x34>
0x1f7d:   31 c0                                 	xor eax, eax
0x1f7f:   e9 e8 00 00 00                        	jmp 0x206c <.Lindex_tree_append.part.0+0x11c>
0x1f84:   48 8b 83 a8 00 00 00                  	mov rax, qword ptr [rbx + 0xa8]
0x1f8b:   33 f6                                 	xor esi, esi
0x1f8d:   4c 8b 2b                              	mov r13, qword ptr [rbx]
0x1f90:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x1f95:   48 85 c0                              	test rax, rax
0x1f98:   74 10                                 	je 0x1faa <.Lindex_tree_append.part.0+0x5a>
0x1f9a:   48 8b 93 b0 00 00 00                  	mov rdx, qword ptr [rbx + 0xb0]
0x1fa1:   49 89 14 24                           	mov qword ptr [r12], rdx
0x1fa5:   e9 c2 00 00 00                        	jmp 0x206c <.Lindex_tree_append.part.0+0x11c>
0x1faa:   48 8d 74 24 08                        	lea rsi, [rsp + 8]
0x1faf:   48 8b fb                              	mov rdi, rbx
0x1fb2:   e8 e9 fe ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x1fb7:   48 8b f0                              	mov rsi, rax
0x1fba:   48 85 c0                              	test rax, rax
0x1fbd:   74 be                                 	je 0x1f7d <.Lindex_tree_append.part.0+0x2d>
0x1fbf:   44 0f b7 53 18                        	movzx r10d, word ptr [rbx + 0x18]
0x1fc4:   48 03 74 24 08                        	add rsi, qword ptr [rsp + 8]
0x1fc9:   45 31 c0                              	xor r8d, r8d
0x1fcc:   45 31 c9                              	xor r9d, r9d
0x1fcf:   31 ff                                 	xor edi, edi
0x1fd1:   31 c0                                 	xor eax, eax
0x1fd3:   45 39 d0                              	cmp r8d, r10d
0x1fd6:   73 79                                 	jae 0x2051 <.Lindex_tree_append.part.0+0x101>
0x1fd8:   49 6b c8 38                           	imul rcx, r8, 0x38
0x1fdc:   48 03 4b 10                           	add rcx, qword ptr [rbx + 0x10]
0x1fe0:   83 39 01                              	cmp dword ptr [rcx], 1
0x1fe3:   75 67                                 	jne 0x204c <.Lindex_tree_append.part.0+0xfc>
0x1fe5:   8b 51 04                              	mov edx, dword ptr [rcx + 4]
0x1fe8:   83 e2 07                              	and edx, 7
0x1feb:   83 fa 04                              	cmp edx, 4
0x1fee:   75 5c                                 	jne 0x204c <.Lindex_tree_append.part.0+0xfc>
0x1ff0:   4c 8b 59 28                           	mov r11, qword ptr [rcx + 0x28]
0x1ff4:   4c 89 ea                              	mov rdx, r13
0x1ff7:   48 2b 53 08                           	sub rdx, qword ptr [rbx + 8]
0x1ffb:   48 03 51 10                           	add rdx, qword ptr [rcx + 0x10]
0x1fff:   49 01 d3                              	add r11, rdx
0x2002:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x2009:   4c 89 d9                              	mov rcx, r11
0x200c:   41 f7 c3 ff 0f 00 00                  	test r11d, 0xfff
0x2013:   74 0e                                 	je 0x2023 <.Lindex_tree_append.part.0+0xd3>
0x2015:   48 81 e1 00 f0 ff ff                  	and rcx, 0xfffffffffffff000
0x201c:   48 81 c1 00 10 00 00                  	add rcx, 0x1000
0x2023:   48 3b d6                              	cmp rdx, rsi
0x2026:   72 24                                 	jb 0x204c <.Lindex_tree_append.part.0+0xfc>
0x2028:   45 85 c9                              	test r9d, r9d
0x202b:   75 11                                 	jne 0x203e <.Lindex_tree_append.part.0+0xee>
0x202d:   48 8b f9                              	mov rdi, rcx
0x2030:   48 8b c2                              	mov rax, rdx
0x2033:   41 b9 01 00 00 00                     	mov r9d, 1
0x2039:   48 29 d7                              	sub rdi, rdx
0x203c:   eb 0e                                 	jmp 0x204c <.Lindex_tree_append.part.0+0xfc>
0x203e:   48 3b d0                              	cmp rdx, rax
0x2041:   73 09                                 	jae 0x204c <.Lindex_tree_append.part.0+0xfc>
0x2043:   48 89 cf                              	mov rdi, rcx
0x2046:   48 8b c2                              	mov rax, rdx
0x2049:   48 29 d7                              	sub rdi, rdx
0x204c:   49 ff c0                              	inc r8
0x204f:   eb 82                                 	jmp 0x1fd3 <.Lindex_tree_append.part.0+0x83>
0x2051:   45 85 c9                              	test r9d, r9d
0x2054:   0f 84 23 ff ff ff                     	je 0x1f7d <.Lindex_tree_append.part.0+0x2d>
0x205a:   48 89 83 a8 00 00 00                  	mov qword ptr [rbx + 0xa8], rax
0x2061:   48 89 bb b0 00 00 00                  	mov qword ptr [rbx + 0xb0], rdi
0x2068:   49 89 3c 24                           	mov qword ptr [r12], rdi
0x206c:   48 83 c4 10                           	add rsp, 0x10
0x2070:   5b                                    	pop rbx
0x2071:   41 5c                                 	pop r12
0x2073:   41 5d                                 	pop r13
0x2075:   c3                                    	ret 
; section: .text.lzip_decoda
; function: .Llzip_decode.0 at 0x2080 -- 0x212d
0x2080:   f3 0f 1e fa                           	endbr64 
0x2084:   41 56                                 	push r14
0x2086:   31 c9                                 	xor ecx, ecx
0x2088:   49 89 d6                              	mov r14, rdx
0x208b:   ba 0a 00 00 00                        	mov edx, 0xa
0x2090:   41 55                                 	push r13
0x2092:   49 89 f5                              	mov r13, rsi
0x2095:   be 07 00 00 00                        	mov esi, 7
0x209a:   41 54                                 	push r12
0x209c:   53                                    	push rbx
0x209d:   48 89 fb                              	mov rbx, rdi
0x20a0:   bf b6 00 00 00                        	mov edi, 0xb6
0x20a5:   48 83 ec 18                           	sub rsp, 0x18
0x20a9:   e8 32 8b 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x20ae:   85 c0                                 	test eax, eax
0x20b0:   75 04                                 	jne 0x20b6 <.Llzip_decode.0+0x36>
0x20b2:   33 db                                 	xor ebx, ebx
0x20b4:   eb 68                                 	jmp 0x211e <.Llzip_decode.0+0x9e>
0x20b6:   31 c0                                 	xor eax, eax
0x20b8:   48 89 df                              	mov rdi, rbx
0x20bb:   48 8d 74 24 08                        	lea rsi, [rsp + 8]
0x20c0:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x20c5:   e8 86 fe ff ff                        	call 0x1f50 <.Lindex_tree_append.part.0>
0x20ca:   48 89 c3                              	mov rbx, rax
0x20cd:   48 85 c0                              	test rax, rax
0x20d0:   74 e0                                 	je 0x20b2 <.Llzip_decode.0+0x32>
0x20d2:   4c 8b 64 24 08                        	mov r12, qword ptr [rsp + 8]
0x20d7:   49 83 fc 2b                           	cmp r12, 0x2b
0x20db:   76 d5                                 	jbe 0x20b2 <.Llzip_decode.0+0x32>
0x20dd:   49 01 c4                              	add r12, rax
0x20e0:   4d 85 f6                              	test r14, r14
0x20e3:   74 20                                 	je 0x2105 <.Llzip_decode.0+0x85>
0x20e5:   4d 39 e6                              	cmp r14, r12
0x20e8:   73 c8                                 	jae 0x20b2 <.Llzip_decode.0+0x32>
0x20ea:   4c 39 f0                              	cmp rax, r14
0x20ed:   49 0f 42 de                           	cmovb rbx, r14
0x20f1:   eb 12                                 	jmp 0x2105 <.Llzip_decode.0+0x85>
0x20f3:   4c 89 e6                              	mov rsi, r12
0x20f6:   48 8b fb                              	mov rdi, rbx
0x20f9:   e8 a2 87 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x20fe:   85 c0                                 	test eax, eax
0x2100:   75 0a                                 	jne 0x210c <.Llzip_decode.0+0x8c>
0x2102:   48 ff c3                              	inc rbx
0x2105:   4c 39 e3                              	cmp rbx, r12
0x2108:   72 e9                                 	jb 0x20f3 <.Llzip_decode.0+0x73>
0x210a:   eb a6                                 	jmp 0x20b2 <.Llzip_decode.0+0x32>
0x210c:   41 8b 55 00                           	mov edx, dword ptr [r13]
0x2110:   85 d2                                 	test edx, edx
0x2112:   74 06                                 	je 0x211a <.Llzip_decode.0+0x9a>
0x2114:   39 c2                                 	cmp edx, eax
0x2116:   75 ea                                 	jne 0x2102 <.Llzip_decode.0+0x82>
0x2118:   eb 04                                 	jmp 0x211e <.Llzip_decode.0+0x9e>
0x211a:   41 89 45 00                           	mov dword ptr [r13], eax
0x211e:   48 83 c4 18                           	add rsp, 0x18
0x2122:   48 8b c3                              	mov rax, rbx
0x2125:   5b                                    	pop rbx
0x2126:   41 5c                                 	pop r12
0x2128:   41 5d                                 	pop r13
0x212a:   41 5e                                 	pop r14
0x212c:   c3                                    	ret 
; section: .text.microlzma_decoda
; function: .Lmicrolzma_decode.0 at 0x2130 -- 0x22b0
0x2130:   f3 0f 1e fa                           	endbr64 
0x2134:   48 89 f9                              	mov rcx, rdi
0x2137:   89 d7                                 	mov edi, edx
0x2139:   48 8b 81 b8 00 00 00                  	mov rax, qword ptr [rcx + 0xb8]
0x2140:   4c 8b 09                              	mov r9, qword ptr [rcx]
0x2143:   48 85 c0                              	test rax, rax
0x2146:   75 1b                                 	jne 0x2163 <.Lmicrolzma_decode.0+0x33>
0x2148:   41 57                                 	push r15
0x214a:   45 31 d2                              	xor r10d, r10d
0x214d:   45 31 db                              	xor r11d, r11d
0x2150:   41 56                                 	push r14
0x2152:   44 0f b7 71 18                        	movzx r14d, word ptr [rcx + 0x18]
0x2157:   41 55                                 	push r13
0x2159:   41 54                                 	push r12
0x215b:   45 31 e4                              	xor r12d, r12d
0x215e:   53                                    	push rbx
0x215f:   31 db                                 	xor ebx, ebx
0x2161:   eb 3c                                 	jmp 0x219f <.Lmicrolzma_decode.0+0x6f>
0x2163:   85 d2                                 	test edx, edx
0x2165:   75 0b                                 	jne 0x2172 <.Lmicrolzma_decode.0+0x42>
0x2167:   48 8b 91 c0 00 00 00                  	mov rdx, qword ptr [rcx + 0xc0]
0x216e:   48 89 16                              	mov qword ptr [rsi], rdx
0x2171:   c3                                    	ret 
0x2172:   48 8b 91 c8 00 00 00                  	mov rdx, qword ptr [rcx + 0xc8]
0x2179:   48 89 16                              	mov qword ptr [rsi], rdx
0x217c:   48 29 d0                              	sub rax, rdx
0x217f:   48 85 d2                              	test rdx, rdx
0x2182:   0f 85 27 01 00 00                     	jne 0x22af <.Lmicrolzma_decode.0+0x17f>
0x2188:   31 c0                                 	xor eax, eax
0x218a:   e9 20 01 00 00                        	jmp 0x22af <.Lmicrolzma_decode.0+0x17f>
0x218f:   49 6b d2 38                           	imul rdx, r10, 0x38
0x2193:   48 03 51 10                           	add rdx, qword ptr [rcx + 0x10]
0x2197:   83 3a 01                              	cmp dword ptr [rdx], 1
0x219a:   74 10                                 	je 0x21ac <.Lmicrolzma_decode.0+0x7c>
0x219c:   49 ff c2                              	inc r10
0x219f:   45 89 d5                              	mov r13d, r10d
0x21a2:   45 39 f2                              	cmp r10d, r14d
0x21a5:   72 e8                                 	jb 0x218f <.Lmicrolzma_decode.0+0x5f>
0x21a7:   e9 81 00 00 00                        	jmp 0x222d <.Lmicrolzma_decode.0+0xfd>
0x21ac:   44 8b 42 04                           	mov r8d, dword ptr [rdx + 4]
0x21b0:   41 83 e0 07                           	and r8d, 7
0x21b4:   41 83 f8 06                           	cmp r8d, 6
0x21b8:   75 e2                                 	jne 0x219c <.Lmicrolzma_decode.0+0x6c>
0x21ba:   4c 8b 7a 28                           	mov r15, qword ptr [rdx + 0x28]
0x21be:   4c 3b 7a 20                           	cmp r15, qword ptr [rdx + 0x20]
0x21c2:   73 07                                 	jae 0x21cb <.Lmicrolzma_decode.0+0x9b>
0x21c4:   31 c0                                 	xor eax, eax
0x21c6:   e9 da 00 00 00                        	jmp 0x22a5 <.Lmicrolzma_decode.0+0x175>
0x21cb:   4d 89 c8                              	mov r8, r9
0x21ce:   4c 2b 41 08                           	sub r8, qword ptr [rcx + 8]
0x21d2:   4c 03 42 10                           	add r8, qword ptr [rdx + 0x10]
0x21d6:   4c 89 c2                              	mov rdx, r8
0x21d9:   4d 01 c7                              	add r15, r8
0x21dc:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x21e3:   41 f7 c7 ff 0f 00 00                  	test r15d, 0xfff
0x21ea:   74 0e                                 	je 0x21fa <.Lmicrolzma_decode.0+0xca>
0x21ec:   49 81 e7 00 f0 ff ff                  	and r15, 0xfffffffffffff000
0x21f3:   49 81 c7 00 10 00 00                  	add r15, 0x1000
0x21fa:   45 85 db                              	test r11d, r11d
0x21fd:   75 14                                 	jne 0x2213 <.Lmicrolzma_decode.0+0xe3>
0x21ff:   49 29 d7                              	sub r15, rdx
0x2202:   48 89 d3                              	mov rbx, rdx
0x2205:   44 89 e8                              	mov eax, r13d
0x2208:   41 bb 01 00 00 00                     	mov r11d, 1
0x220e:   4d 89 fc                              	mov r12, r15
0x2211:   eb 89                                 	jmp 0x219c <.Lmicrolzma_decode.0+0x6c>
0x2213:   4e 8d 04 23                           	lea r8, [rbx + r12]
0x2217:   4d 39 f8                              	cmp r8, r15
0x221a:   73 80                                 	jae 0x219c <.Lmicrolzma_decode.0+0x6c>
0x221c:   49 29 d7                              	sub r15, rdx
0x221f:   48 89 d3                              	mov rbx, rdx
0x2222:   44 89 e8                              	mov eax, r13d
0x2225:   4d 89 fc                              	mov r12, r15
0x2228:   e9 6f ff ff ff                        	jmp 0x219c <.Lmicrolzma_decode.0+0x6c>
0x222d:   45 85 db                              	test r11d, r11d
0x2230:   74 92                                 	je 0x21c4 <.Lmicrolzma_decode.0+0x94>
0x2232:   89 c0                                 	mov eax, eax
0x2234:   4c 89 ca                              	mov rdx, r9
0x2237:   48 2b 51 08                           	sub rdx, qword ptr [rcx + 8]
0x223b:   48 6b c0 38                           	imul rax, rax, 0x38
0x223f:   48 03 41 10                           	add rax, qword ptr [rcx + 0x10]
0x2243:   4c 8b 40 28                           	mov r8, qword ptr [rax + 0x28]
0x2247:   48 03 50 10                           	add rdx, qword ptr [rax + 0x10]
0x224b:   49 01 d0                              	add r8, rdx
0x224e:   48 03 50 20                           	add rdx, qword ptr [rax + 0x20]
0x2252:   48 89 d0                              	mov rax, rdx
0x2255:   4c 89 c2                              	mov rdx, r8
0x2258:   41 f7 c0 ff 0f 00 00                  	test r8d, 0xfff
0x225f:   74 0e                                 	je 0x226f <.Lmicrolzma_decode.0+0x13f>
0x2261:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x2268:   48 81 c2 00 10 00 00                  	add rdx, 0x1000
0x226f:   49 89 d1                              	mov r9, rdx
0x2272:   4c 29 c2                              	sub rdx, r8
0x2275:   48 89 81 b8 00 00 00                  	mov qword ptr [rcx + 0xb8], rax
0x227c:   49 29 c1                              	sub r9, rax
0x227f:   48 89 91 c8 00 00 00                  	mov qword ptr [rcx + 0xc8], rdx
0x2286:   4c 89 89 c0 00 00 00                  	mov qword ptr [rcx + 0xc0], r9
0x228d:   85 ff                                 	test edi, edi
0x228f:   75 05                                 	jne 0x2296 <.Lmicrolzma_decode.0+0x166>
0x2291:   4c 89 0e                              	mov qword ptr [rsi], r9
0x2294:   eb 0f                                 	jmp 0x22a5 <.Lmicrolzma_decode.0+0x175>
0x2296:   48 89 16                              	mov qword ptr [rsi], rdx
0x2299:   48 85 d2                              	test rdx, rdx
0x229c:   0f 84 22 ff ff ff                     	je 0x21c4 <.Lmicrolzma_decode.0+0x94>
0x22a2:   4c 89 c0                              	mov rax, r8
0x22a5:   5b                                    	pop rbx
0x22a6:   41 5c                                 	pop r12
0x22a8:   41 5d                                 	pop r13
0x22aa:   41 5e                                 	pop r14
0x22ac:   41 5f                                 	pop r15
0x22ae:   c3                                    	ret 
0x22af:   c3                                    	ret 
; section: .text.auto_decoda
; function: .Lauto_decode.1 at 0x22b0 -- 0x234d
0x22b0:   f3 0f 1e fa                           	endbr64 
0x22b4:   41 56                                 	push r14
0x22b6:   41 89 ce                              	mov r14d, ecx
0x22b9:   b9 02 00 00 00                        	mov ecx, 2
0x22be:   41 55                                 	push r13
0x22c0:   49 89 fd                              	mov r13, rdi
0x22c3:   41 54                                 	push r12
0x22c5:   49 89 d4                              	mov r12, rdx
0x22c8:   53                                    	push rbx
0x22c9:   48 89 f3                              	mov rbx, rsi
0x22cc:   41 50                                 	push r8
0x22ce:   e8 ad f0 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x22d3:   85 c0                                 	test eax, eax
0x22d5:   74 6d                                 	je 0x2344 <.Lauto_decode.1+0x94>
0x22d7:   b8 01 00 00 00                        	mov eax, 1
0x22dc:   45 85 f6                              	test r14d, r14d
0x22df:   74 63                                 	je 0x2344 <.Lauto_decode.1+0x94>
0x22e1:   41 83 7d 4c 00                        	cmp dword ptr [r13 + 0x4c], 0
0x22e6:   74 5c                                 	je 0x2344 <.Lauto_decode.1+0x94>
0x22e8:   49 8b 4d 58                           	mov rcx, qword ptr [r13 + 0x58]
0x22ec:   49 8b 55 00                           	mov rdx, qword ptr [r13]
0x22f0:   49 2b 55 08                           	sub rdx, qword ptr [r13 + 8]
0x22f4:   49 03 55 50                           	add rdx, qword ptr [r13 + 0x50]
0x22f8:   48 01 d1                              	add rcx, rdx
0x22fb:   48 81 e2 00 f0 ff ff                  	and rdx, 0xfffffffffffff000
0x2302:   f7 c1 ff 0f 00 00                     	test ecx, 0xfff
0x2308:   74 0e                                 	je 0x2318 <.Lauto_decode.1+0x68>
0x230a:   48 81 e1 00 f0 ff ff                  	and rcx, 0xfffffffffffff000
0x2311:   48 81 c1 00 10 00 00                  	add rcx, 0x1000
0x2318:   48 39 d3                              	cmp rbx, rdx
0x231b:   40 0f 93 c6                           	setae sil
0x231f:   48 39 cb                              	cmp rbx, rcx
0x2322:   73 07                                 	jae 0x232b <.Lauto_decode.1+0x7b>
0x2324:   31 c0                                 	xor eax, eax
0x2326:   40 84 f6                              	test sil, sil
0x2329:   75 19                                 	jne 0x2344 <.Lauto_decode.1+0x94>
0x232b:   4c 01 e3                              	add rbx, r12
0x232e:   48 39 da                              	cmp rdx, rbx
0x2331:   0f 92 c0                              	setb al
0x2334:   09 f0                                 	or eax, esi
0x2336:   48 39 d9                              	cmp rcx, rbx
0x2339:   0f 93 c2                              	setae dl
0x233c:   21 d0                                 	and eax, edx
0x233e:   83 f0 01                              	xor eax, 1
0x2341:   0f b6 c0                              	movzx eax, al
0x2344:   5a                                    	pop rdx
0x2345:   5b                                    	pop rbx
0x2346:   41 5c                                 	pop r12
0x2348:   41 5d                                 	pop r13
0x234a:   41 5e                                 	pop r14
0x234c:   c3                                    	ret 
; section: .text.hc_find_funa
; function: .Lhc_find_func.1 at 0x2350 -- 0x2414
0x2350:   f3 0f 1e fa                           	endbr64 
0x2354:   48 85 f6                              	test rsi, rsi
0x2357:   0f 84 b4 00 00 00                     	je 0x2411 <.Lhc_find_func.1+0xc1>
0x235d:   41 55                                 	push r13
0x235f:   41 54                                 	push r12
0x2361:   55                                    	push rbp
0x2362:   53                                    	push rbx
0x2363:   48 89 fb                              	mov rbx, rdi
0x2366:   48 83 ec 18                           	sub rsp, 0x18
0x236a:   48 81 ff ff ff ff 00                  	cmp rdi, 0xffffff
0x2371:   77 07                                 	ja 0x237a <.Lhc_find_func.1+0x2a>
0x2373:   31 c0                                 	xor eax, eax
0x2375:   e9 8c 00 00 00                        	jmp 0x2406 <.Lhc_find_func.1+0xb6>
0x237a:   48 8d 2c 37                           	lea rbp, [rdi + rsi]
0x237e:   48 81 e3 00 f0 ff ff                  	and rbx, 0xfffffffffffff000
0x2385:   48 39 eb                              	cmp rbx, rbp
0x2388:   73 77                                 	jae 0x2401 <.Lhc_find_func.1+0xb1>
0x238a:   31 c9                                 	xor ecx, ecx
0x238c:   49 89 d4                              	mov r12, rdx
0x238f:   48 89 0c 24                           	mov qword ptr [rsp], rcx
0x2393:   48 85 d2                              	test rdx, rdx
0x2396:   74 db                                 	je 0x2373 <.Lhc_find_func.1+0x23>
0x2398:   49 89 e5                              	mov r13, rsp
0x239b:   49 8b 44 24 10                        	mov rax, qword ptr [r12 + 0x10]
0x23a0:   48 85 c0                              	test rax, rax
0x23a3:   74 ce                                 	je 0x2373 <.Lhc_find_func.1+0x23>
0x23a5:   48 83 78 50 00                        	cmp qword ptr [rax + 0x50], 0
0x23aa:   74 c7                                 	je 0x2373 <.Lhc_find_func.1+0x23>
0x23ac:   48 8b 40 40                           	mov rax, qword ptr [rax + 0x40]
0x23b0:   48 85 c0                              	test rax, rax
0x23b3:   74 be                                 	je 0x2373 <.Lhc_find_func.1+0x23>
0x23b5:   31 c9                                 	xor ecx, ecx
0x23b7:   31 d2                                 	xor edx, edx
0x23b9:   31 f6                                 	xor esi, esi
0x23bb:   49 89 d9                              	mov r9, rbx
0x23be:   48 c7 44 24 08 01 00 00 00            	mov qword ptr [rsp + 8], 1
0x23c7:   4d 89 e8                              	mov r8, r13
0x23ca:   bf 01 00 00 00                        	mov edi, 1
0x23cf:   ff d0                                 	call rax
0x23d1:   85 c0                                 	test eax, eax
0x23d3:   79 18                                 	jns 0x23ed <.Lhc_find_func.1+0x9d>
0x23d5:   49 8b 44 24 10                        	mov rax, qword ptr [r12 + 0x10]
0x23da:   ff 50 50                              	call qword ptr [rax + 0x50]
0x23dd:   83 38 0e                              	cmp dword ptr [rax], 0xe
0x23e0:   74 05                                 	je 0x23e7 <.Lhc_find_func.1+0x97>
0x23e2:   48 85 db                              	test rbx, rbx
0x23e5:   75 06                                 	jne 0x23ed <.Lhc_find_func.1+0x9d>
0x23e7:   31 d2                                 	xor edx, edx
0x23e9:   89 10                                 	mov dword ptr [rax], edx
0x23eb:   eb 86                                 	jmp 0x2373 <.Lhc_find_func.1+0x23>
0x23ed:   48 81 c3 00 10 00 00                  	add rbx, 0x1000
0x23f4:   48 39 eb                              	cmp rbx, rbp
0x23f7:   73 08                                 	jae 0x2401 <.Lhc_find_func.1+0xb1>
0x23f9:   31 c0                                 	xor eax, eax
0x23fb:   48 89 04 24                           	mov qword ptr [rsp], rax
0x23ff:   eb 9a                                 	jmp 0x239b <.Lhc_find_func.1+0x4b>
0x2401:   b8 01 00 00 00                        	mov eax, 1
0x2406:   48 83 c4 18                           	add rsp, 0x18
0x240a:   5b                                    	pop rbx
0x240b:   5d                                    	pop rbp
0x240c:   41 5c                                 	pop r12
0x240e:   41 5d                                 	pop r13
0x2410:   c3                                    	ret 
0x2411:   31 c0                                 	xor eax, eax
0x2413:   c3                                    	ret 
; section: .text.lzma_simple_props_encoda
; function: .Llzma_simple_props_encode.1 at 0x2420 -- 0x243e
0x2420:   f3 0f 1e fa                           	endbr64 
0x2424:   55                                    	push rbp
0x2425:   48 89 e5                              	mov rbp, rsp
0x2428:   48 83 ec 10                           	sub rsp, 0x10
0x242c:   48 89 7d f8                           	mov qword ptr [rbp - 8], rdi
0x2430:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x2434:   48 89 c7                              	mov rdi, rax
0x2437:   e8 14 a7 00 00                        	call 0xcb50 <__tls_get_addr>
0x243c:   c9                                    	leave 
0x243d:   c3                                    	ret 
; section: .text.lzma_simple_x86_encoder_inia
; function: function_2440 at 0x2440 -- 0x246b
0x2440:   f3 0f 1e fa                           	endbr64 
0x2444:   55                                    	push rbp
0x2445:   48 89 e5                              	mov rbp, rsp
0x2448:   48 83 ec 10                           	sub rsp, 0x10
0x244c:   48 c7 45 f0 00 00 00 00               	mov qword ptr [rbp - 0x10], 0
0x2454:   48 c7 45 f8 00 00 00 00               	mov qword ptr [rbp - 8], 0
0x245c:   48 8d 45 f0                           	lea rax, [rbp - 0x10]
0x2460:   48 89 c7                              	mov rdi, rax
0x2463:   e8 b8 ff ff ff                        	call 0x2420 <.Llzma_simple_props_encode.1>
0x2468:   90                                    	nop 
0x2469:   c9                                    	leave 
0x246a:   c3                                    	ret 
; section: .text.stream_decoder_mt_ena
; function: .Lstream_decoder_mt_end.0 at 0x2470 -- 0x24c2
0x2470:   f3 0f 1e fa                           	endbr64 
0x2474:   55                                    	push rbp
0x2475:   48 89 e5                              	mov rbp, rsp
0x2478:   48 89 7d d8                           	mov qword ptr [rbp - 0x28], rdi
0x247c:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x2484:   48 8b 05 55 a6 00 00                  	mov rax, qword ptr [rip + 0xa655]
0x248b:   48 89 45 f8                           	mov qword ptr [rbp - 8], rax
0x248f:   c7 45 f4 00 00 00 00                  	mov dword ptr [rbp - 0xc], 0
0x2496:   eb 1e                                 	jmp 0x24b6 <.Lstream_decoder_mt_end.0+0x46>
0x2498:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x249c:   48 8b 00                              	mov rax, qword ptr [rax]
0x249f:   48 39 45 d8                           	cmp qword ptr [rbp - 0x28], rax
0x24a3:   75 08                                 	jne 0x24ad <.Lstream_decoder_mt_end.0+0x3d>
0x24a5:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x24a9:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x24ad:   83 45 f4 01                           	add dword ptr [rbp - 0xc], 1
0x24b1:   48 83 45 f8 20                        	add qword ptr [rbp - 8], 0x20
0x24b6:   83 7d f4 0b                           	cmp dword ptr [rbp - 0xc], 0xb
0x24ba:   76 dc                                 	jbe 0x2498 <.Lstream_decoder_mt_end.0+0x28>
0x24bc:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x24c0:   5d                                    	pop rbp
0x24c1:   c3                                    	ret 
; section: .text.lzma_lz_encoder_memusaga
; function: .Llzma_lz_encoder_memusage.1 at 0x24d0 -- 0x2522
0x24d0:   f3 0f 1e fa                           	endbr64 
0x24d4:   55                                    	push rbp
0x24d5:   48 89 e5                              	mov rbp, rsp
0x24d8:   48 89 7d d8                           	mov qword ptr [rbp - 0x28], rdi
0x24dc:   48 c7 45 e8 00 00 00 00               	mov qword ptr [rbp - 0x18], 0
0x24e4:   48 8b 05 ed a5 00 00                  	mov rax, qword ptr [rip + 0xa5ed]
0x24eb:   48 89 45 f8                           	mov qword ptr [rbp - 8], rax
0x24ef:   c7 45 f4 00 00 00 00                  	mov dword ptr [rbp - 0xc], 0
0x24f6:   eb 1e                                 	jmp 0x2516 <.Llzma_lz_encoder_memusage.1+0x46>
0x24f8:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x24fc:   48 8b 00                              	mov rax, qword ptr [rax]
0x24ff:   48 39 45 d8                           	cmp qword ptr [rbp - 0x28], rax
0x2503:   75 08                                 	jne 0x250d <.Llzma_lz_encoder_memusage.1+0x3d>
0x2505:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x2509:   48 89 45 e8                           	mov qword ptr [rbp - 0x18], rax
0x250d:   83 45 f4 01                           	add dword ptr [rbp - 0xc], 1
0x2511:   48 83 45 f8 38                        	add qword ptr [rbp - 8], 0x38
0x2516:   83 7d f4 0b                           	cmp dword ptr [rbp - 0xc], 0xb
0x251a:   76 dc                                 	jbe 0x24f8 <.Llzma_lz_encoder_memusage.1+0x28>
0x251c:   48 8b 45 f8                           	mov rax, qword ptr [rbp - 8]
0x2520:   5d                                    	pop rbp
0x2521:   c3                                    	ret 
; data inside code section at 0x2522 -- 0x2530
0x2522:   66 66 2e 0f 1f 84 00 00  00 00 00 0f 1f 00         |ff............  |
; function: function_2530 at 0x2530 -- 0x2743
0x2530:   41 57                                 	push r15
0x2532:   31 c0                                 	xor eax, eax
0x2534:   49 89 cf                              	mov r15, rcx
0x2537:   41 56                                 	push r14
0x2539:   41 55                                 	push r13
0x253b:   49 89 f5                              	mov r13, rsi
0x253e:   41 54                                 	push r12
0x2540:   53                                    	push rbx
0x2541:   48 89 d3                              	mov rbx, rdx
0x2544:   48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x254b:   48 89 7c 24 18                        	mov qword ptr [rsp + 0x18], rdi
0x2550:   bf 01 00 00 00                        	mov edi, 1
0x2555:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x255a:   e8 e1 1a 00 00                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x255f:   48 8d 74 24 30                        	lea rsi, [rsp + 0x30]
0x2564:   4c 89 ef                              	mov rdi, r13
0x2567:   48 89 58 10                           	mov qword ptr [rax + 0x10], rbx
0x256b:   48 89 04 24                           	mov qword ptr [rsp], rax
0x256f:   e8 2c f9 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x2574:   48 85 c0                              	test rax, rax
0x2577:   74 4d                                 	je 0x25c6 <function_2530+0x96>
0x2579:   4c 8b 74 24 30                        	mov r14, qword ptr [rsp + 0x30]
0x257e:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x2582:   bf 58 07 00 00                        	mov edi, 0x758
0x2587:   49 89 c4                              	mov r12, rax
0x258a:   49 01 c6                              	add r14, rax
0x258d:   e8 ce a5 00 00                        	call 0xcb60 <lzma_alloc>
0x2592:   49 89 47 70                           	mov qword ptr [r15 + 0x70], rax
0x2596:   48 85 c0                              	test rax, rax
0x2599:   74 07                                 	je 0x25a2 <function_2530+0x72>
0x259b:   41 ff 87 20 01 00 00                  	inc dword ptr [r15 + 0x120]
0x25a2:   be 28 02 00 00                        	mov esi, 0x228
0x25a7:   4c 89 ef                              	mov rdi, r13
0x25aa:   e8 c1 f8 ff ff                        	call 0x1e70 <.Ldelta_decode.part.0>
0x25af:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x25b4:   48 85 c0                              	test rax, rax
0x25b7:   75 14                                 	jne 0x25cd <function_2530+0x9d>
0x25b9:   49 8b 7f 70                           	mov rdi, qword ptr [r15 + 0x70]
0x25bd:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x25c1:   e8 92 a5 00 00                        	call 0xcb58 <lzma_free>
0x25c6:   31 c0                                 	xor eax, eax
0x25c8:   e9 65 01 00 00                        	jmp 0x2732 <function_2530+0x202>
0x25cd:   4d 8b 4d 00                           	mov r9, qword ptr [r13]
0x25d1:   4d 03 49 18                           	add r9, qword ptr [r9 + 0x18]
0x25d5:   4d 39 f1                              	cmp r9, r14
0x25d8:   73 df                                 	jae 0x25b9 <function_2530+0x89>
0x25da:   4d 39 e1                              	cmp r9, r12
0x25dd:   72 da                                 	jb 0x25b9 <function_2530+0x89>
0x25df:   48 8d 7c 24 38                        	lea rdi, [rsp + 0x38]
0x25e4:   b9 16 00 00 00                        	mov ecx, 0x16
0x25e9:   be f8 00 00 00                        	mov esi, 0xf8
0x25ee:   4c 89 4c 24 28                        	mov qword ptr [rsp + 0x28], r9
0x25f3:   4d 8d a9 00 02 00 00                  	lea r13, [r9 + 0x200]
0x25fa:   4d 39 ee                              	cmp r14, r13
0x25fd:   4d 0f 46 ee                           	cmovbe r13, r14
0x2601:   31 c0                                 	xor eax, eax
0x2603:   31 d2                                 	xor edx, edx
0x2605:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x2607:   48 89 df                              	mov rdi, rbx
0x260a:   4c 89 6c 24 10                        	mov qword ptr [rsp + 0x10], r13
0x260f:   e8 4c f2 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x2614:   48 8d 4c 24 38                        	lea rcx, [rsp + 0x38]
0x2619:   4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x261e:   48 85 c0                              	test rax, rax
0x2621:   48 89 4c 24 20                        	mov qword ptr [rsp + 0x20], rcx
0x2626:   74 15                                 	je 0x263d <function_2530+0x10d>
0x2628:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x262c:   48 03 03                              	add rax, qword ptr [rbx]
0x262f:   41 ff 87 20 01 00 00                  	inc dword ptr [r15 + 0x120]
0x2636:   49 89 87 f0 00 00 00                  	mov qword ptr [r15 + 0xf0], rax
0x263d:   45 31 ed                              	xor r13d, r13d
0x2640:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x2645:   49 39 c1                              	cmp r9, rax
0x2648:   0f 83 6b ff ff ff                     	jae 0x25b9 <function_2530+0x89>
0x264e:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x2653:   48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0x2658:   4c 89 ce                              	mov rsi, r9
0x265b:   4c 89 4c 24 28                        	mov qword ptr [rsp + 0x28], r9
0x2660:   e8 9b d9 ff ff                        	call 0 <.Lx86_code.part.0>
0x2665:   4c 8b 4c 24 28                        	mov r9, qword ptr [rsp + 0x28]
0x266a:   85 c0                                 	test eax, eax
0x266c:   0f 84 ab 00 00 00                     	je 0x271d <function_2530+0x1ed>
0x2672:   8b 44 24 60                           	mov eax, dword ptr [rsp + 0x60]
0x2676:   48 8b 54 24 40                        	mov rdx, qword ptr [rsp + 0x40]
0x267b:   3d 0d 01 00 00                        	cmp eax, 0x10d
0x2680:   75 37                                 	jne 0x26b9 <function_2530+0x189>
0x2682:   8a 44 24 53                           	mov al, byte ptr [rsp + 0x53]
0x2686:   83 e0 48                              	and eax, 0x48
0x2689:   3c 48                                 	cmp al, 0x48
0x268b:   0f 85 84 00 00 00                     	jne 0x2715 <function_2530+0x1e5>
0x2691:   8b 44 24 54                           	mov eax, dword ptr [rsp + 0x54]
0x2695:   30 c0                                 	xor al, al
0x2697:   3d 00 00 07 05                        	cmp eax, 0x5070000
0x269c:   75 77                                 	jne 0x2715 <function_2530+0x1e5>
0x269e:   48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0x26a3:   48 01 d0                              	add rax, rdx
0x26a6:   48 03 44 24 68                        	add rax, qword ptr [rsp + 0x68]
0x26ab:   4c 39 e0                              	cmp rax, r12
0x26ae:   72 65                                 	jb 0x2715 <function_2530+0x1e5>
0x26b0:   4c 39 f0                              	cmp rax, r14
0x26b3:   4c 0f 42 e8                           	cmovb r13, rax
0x26b7:   eb 5c                                 	jmp 0x2715 <function_2530+0x1e5>
0x26b9:   4d 85 ed                              	test r13, r13
0x26bc:   74 57                                 	je 0x2715 <function_2530+0x1e5>
0x26be:   3d 7f 01 00 00                        	cmp eax, 0x17f
0x26c3:   75 50                                 	jne 0x2715 <function_2530+0x1e5>
0x26c5:   8b 44 24 54                           	mov eax, dword ptr [rsp + 0x54]
0x26c9:   30 c0                                 	xor al, al
0x26cb:   3d 00 00 02 05                        	cmp eax, 0x5020000
0x26d0:   75 43                                 	jne 0x2715 <function_2530+0x1e5>
0x26d2:   f6 44 24 49 01                        	test byte ptr [rsp + 0x49], 1
0x26d7:   74 3c                                 	je 0x2715 <function_2530+0x1e5>
0x26d9:   48 8b 44 24 68                        	mov rax, qword ptr [rsp + 0x68]
0x26de:   48 03 44 24 38                        	add rax, qword ptr [rsp + 0x38]
0x26e3:   48 01 d0                              	add rax, rdx
0x26e6:   48 39 44 24 08                        	cmp qword ptr [rsp + 8], rax
0x26eb:   75 28                                 	jne 0x2715 <function_2530+0x1e5>
0x26ed:   31 d2                                 	xor edx, edx
0x26ef:   be 60 0c 00 00                        	mov esi, 0xc60
0x26f4:   48 89 df                              	mov rdi, rbx
0x26f7:   e8 64 f1 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x26fc:   48 85 c0                              	test rax, rax
0x26ff:   74 24                                 	je 0x2725 <function_2530+0x1f5>
0x2701:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x2705:   48 03 03                              	add rax, qword ptr [rbx]
0x2708:   49 89 47 58                           	mov qword ptr [r15 + 0x58], rax
0x270c:   41 ff 87 20 01 00 00                  	inc dword ptr [r15 + 0x120]
0x2713:   eb 10                                 	jmp 0x2725 <function_2530+0x1f5>
0x2715:   49 01 d1                              	add r9, rdx
0x2718:   e9 23 ff ff ff                        	jmp 0x2640 <function_2530+0x110>
0x271d:   49 ff c1                              	inc r9
0x2720:   e9 1b ff ff ff                        	jmp 0x2640 <function_2530+0x110>
0x2725:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x272a:   4c 89 28                              	mov qword ptr [rax], r13
0x272d:   b8 01 00 00 00                        	mov eax, 1
0x2732:   48 81 c4 90 00 00 00                  	add rsp, 0x90
0x2739:   5b                                    	pop rbx
0x273a:   41 5c                                 	pop r12
0x273c:   41 5d                                 	pop r13
0x273e:   41 5e                                 	pop r14
0x2740:   41 5f                                 	pop r15
0x2742:   c3                                    	ret 
; section: .text.lzma_block_buffer_bound63
; function: function_2750 at 0x2750 -- 0x27ac
0x2750:   48 85 ff                              	test rdi, rdi
0x2753:   74 56                                 	je 0x27ab <function_2750+0x5b>
0x2755:   48 8b 47 40                           	mov rax, qword ptr [rdi + 0x40]
0x2759:   48 85 c0                              	test rax, rax
0x275c:   74 14                                 	je 0x2772 <function_2750+0x22>
0x275e:   8b 57 48                              	mov edx, dword ptr [rdi + 0x48]
0x2761:   89 10                                 	mov dword ptr [rax], edx
0x2763:   48 8b 97 f8 00 00 00                  	mov rdx, qword ptr [rdi + 0xf8]
0x276a:   48 85 d2                              	test rdx, rdx
0x276d:   74 03                                 	je 0x2772 <function_2750+0x22>
0x276f:   48 89 02                              	mov qword ptr [rdx], rax
0x2772:   48 8b 47 50                           	mov rax, qword ptr [rdi + 0x50]
0x2776:   48 85 c0                              	test rax, rax
0x2779:   74 05                                 	je 0x2780 <function_2750+0x30>
0x277b:   8b 57 58                              	mov edx, dword ptr [rdi + 0x58]
0x277e:   89 10                                 	mov dword ptr [rax], edx
0x2780:   48 8b 47 60                           	mov rax, qword ptr [rdi + 0x60]
0x2784:   48 85 c0                              	test rax, rax
0x2787:   74 07                                 	je 0x2790 <function_2750+0x40>
0x2789:   8a 57 68                              	mov dl, byte ptr [rdi + 0x68]
0x278c:   f7 d2                                 	not edx
0x278e:   20 10                                 	and byte ptr [rax], dl
0x2790:   48 8b 47 78                           	mov rax, qword ptr [rdi + 0x78]
0x2794:   48 85 c0                              	test rax, rax
0x2797:   74 04                                 	je 0x279d <function_2750+0x4d>
0x2799:   31 c9                                 	xor ecx, ecx
0x279b:   89 08                                 	mov dword ptr [rax], ecx
0x279d:   48 8b 47 70                           	mov rax, qword ptr [rdi + 0x70]
0x27a1:   48 85 c0                              	test rax, rax
0x27a4:   74 05                                 	je 0x27ab <function_2750+0x5b>
0x27a6:   31 d2                                 	xor edx, edx
0x27a8:   48 89 10                              	mov qword ptr [rax], rdx
0x27ab:   c3                                    	ret 
; section: .text.lzma_delta_decoder_inis
; function: .Llzma_delta_decoder_init.part.0 at 0x27b0 -- 0x2822
0x27b0:   f3 0f 1e fa                           	endbr64 
0x27b4:   b8 05 00 00 00                        	mov eax, 5
0x27b9:   48 85 ff                              	test rdi, rdi
0x27bc:   74 63                                 	je 0x2821 <.Llzma_delta_decoder_init.part.0+0x71>
0x27be:   48 8d 05 7b a3 00 00                  	lea rax, [rip + 0xa37b]
0x27c5:   48 89 47 38                           	mov qword ptr [rdi + 0x38], rax
0x27c9:   31 c0                                 	xor eax, eax
0x27cb:   48 83 7f 30 00                        	cmp qword ptr [rdi + 0x30], 0
0x27d0:   75 4f                                 	jne 0x2821 <.Llzma_delta_decoder_init.part.0+0x71>
0x27d2:   48 8d 05 d7 00 00 00                  	lea rax, [rip + 0xd7]
0x27d9:   48 c7 47 68 04 00 00 00               	mov qword ptr [rdi + 0x68], 4
0x27e1:   48 89 47 40                           	mov qword ptr [rdi + 0x40], rax
0x27e5:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x27ec:   48 89 47 48                           	mov qword ptr [rdi + 0x48], rax
0x27f0:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x27f7:   48 89 47 50                           	mov qword ptr [rdi + 0x50], rax
0x27fb:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x2802:   48 89 47 58                           	mov qword ptr [rdi + 0x58], rax
0x2806:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x280d:   48 89 47 70                           	mov qword ptr [rdi + 0x70], rax
0x2811:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x2818:   48 89 47 78                           	mov qword ptr [rdi + 0x78], rax
0x281c:   b8 65 00 00 00                        	mov eax, 0x65
0x2821:   c3                                    	ret 
; section: .text.lzma_delta_props_decodd
; function: .Llzma_delta_props_decode.part.0 at 0x2830 -- 0x2860
0x2830:   f3 0f 1e fa                           	endbr64 
0x2834:   b8 05 00 00 00                        	mov eax, 5
0x2839:   48 85 ff                              	test rdi, rdi
0x283c:   74 22                                 	je 0x2860 <.Llzma_delta_props_decode.part.0+0x2e>
0x283e:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x2845:   48 89 07                              	mov qword ptr [rdi], rax
0x2848:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x284f:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
0x2853:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x285a:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x285e:   31 c0                                 	xor eax, eax
; data inside code section at 0x2860 -- 0x2861
0x2860:   c3                                                 |.               |
; section: .text.microlzma_decoder_inia
; function: function_2870 at 0x2870 -- 0x28ac
0x2870:   83 bf 20 01 00 00 1d                  	cmp dword ptr [rdi + 0x120], 0x1d
0x2877:   75 30                                 	jne 0x28a9 <function_2870+0x39>
0x2879:   48 83 7f 18 00                        	cmp qword ptr [rdi + 0x18], 0
0x287e:   b8 01 00 00 00                        	mov eax, 1
0x2883:   75 26                                 	jne 0x28ab <function_2870+0x3b>
0x2885:   48 83 7f 20 00                        	cmp qword ptr [rdi + 0x20], 0
0x288a:   75 1f                                 	jne 0x28ab <function_2870+0x3b>
0x288c:   48 83 7f 28 00                        	cmp qword ptr [rdi + 0x28], 0
0x2891:   75 18                                 	jne 0x28ab <function_2870+0x3b>
0x2893:   48 8d 05 b6 46 00 00                  	lea rax, [rip + 0x46b6]
0x289a:   48 89 47 18                           	mov qword ptr [rdi + 0x18], rax
0x289e:   48 8d 05 8b ff ff ff                  	lea rax, [rip - 0x75]
0x28a5:   48 89 47 28                           	mov qword ptr [rdi + 0x28], rax
0x28a9:   31 c0                                 	xor eax, eax
0x28ab:   c3                                    	ret 
; section: .text.lz_encoder_prepara
; function: function_28b0 at 0x28b0 -- 0x2a22
0x28b0:   f3 0f 1e fa                           	endbr64 
0x28b4:   41 57                                 	push r15
0x28b6:   41 56                                 	push r14
0x28b8:   41 55                                 	push r13
0x28ba:   41 54                                 	push r12
0x28bc:   4c 8b 25 7d a2 00 00                  	mov r12, qword ptr [rip + 0xa27d]
0x28c3:   53                                    	push rbx
0x28c4:   48 89 fb                              	mov rbx, rdi
0x28c7:   41 83 bc 24 30 01 00 00 00            	cmp dword ptr [r12 + 0x130], 0
0x28d0:   4d 8b ac 24 28 01 00 00               	mov r13, qword ptr [r12 + 0x128]
0x28d8:   0f 85 36 01 00 00                     	jne 0x2a14 <function_28b0+0x164>
0x28de:   48 8b 15 00 00 00 00                  	mov rdx, qword ptr [rip]
0x28e5:   4c 8b 74 24 28                        	mov r14, qword ptr [rsp + 0x28]
0x28ea:   49 8b 84 24 00 01 00 00               	mov rax, qword ptr [r12 + 0x100]
0x28f2:   48 8b 12                              	mov rdx, qword ptr [rdx]
0x28f5:   48 8b 52 10                           	mov rdx, qword ptr [rdx + 0x10]
0x28f9:   4c 8b 7a 68                           	mov r15, qword ptr [rdx + 0x68]
0x28fd:   4c 39 f0                              	cmp rax, r14
0x2900:   0f 83 02 01 00 00                     	jae 0x2a08 <function_28b0+0x158>
0x2906:   4c 89 f2                              	mov rdx, r14
0x2909:   48 29 c2                              	sub rdx, rax
0x290c:   49 03 84 24 08 01 00 00               	add rax, qword ptr [r12 + 0x108]
0x2914:   48 39 d0                              	cmp rax, rdx
0x2917:   0f 82 eb 00 00 00                     	jb 0x2a08 <function_28b0+0x158>
0x291d:   4c 89 cf                              	mov rdi, r9
0x2920:   33 f6                                 	xor esi, esi
0x2922:   e8 79 7f 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x2927:   49 8b 55 18                           	mov rdx, qword ptr [r13 + 0x18]
0x292b:   3d d0 01 00 00                        	cmp eax, 0x1d0
0x2930:   75 3e                                 	jne 0x2970 <function_28b0+0xc0>
0x2932:   48 85 d2                              	test rdx, rdx
0x2935:   74 39                                 	je 0x2970 <function_28b0+0xc0>
0x2937:   48 8b 02                              	mov rax, qword ptr [rdx]
0x293a:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x2940:   0f 86 ba 00 00 00                     	jbe 0x2a00 <function_28b0+0x150>
0x2946:   49 89 45 00                           	mov qword ptr [r13], rax
0x294a:   49 8b 84 24 10 01 00 00               	mov rax, qword ptr [r12 + 0x110]
0x2952:   48 89 02                              	mov qword ptr [rdx], rax
0x2955:   4c 39 f3                              	cmp rbx, r14
0x2958:   0f 86 a2 00 00 00                     	jbe 0x2a00 <function_28b0+0x150>
0x295e:   4c 39 fb                              	cmp rbx, r15
0x2961:   0f 83 99 00 00 00                     	jae 0x2a00 <function_28b0+0x150>
0x2967:   48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x296b:   e9 90 00 00 00                        	jmp 0x2a00 <function_28b0+0x150>
0x2970:   49 8b 55 20                           	mov rdx, qword ptr [r13 + 0x20]
0x2974:   48 85 d2                              	test rdx, rdx
0x2977:   74 41                                 	je 0x29ba <function_28b0+0x10a>
0x2979:   3d 10 05 00 00                        	cmp eax, 0x510
0x297e:   75 3a                                 	jne 0x29ba <function_28b0+0x10a>
0x2980:   48 8b 02                              	mov rax, qword ptr [rdx]
0x2983:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x2989:   76 75                                 	jbe 0x2a00 <function_28b0+0x150>
0x298b:   49 89 45 08                           	mov qword ptr [r13 + 8], rax
0x298f:   49 8b 84 24 18 01 00 00               	mov rax, qword ptr [r12 + 0x118]
0x2997:   48 89 02                              	mov qword ptr [rdx], rax
0x299a:   4c 39 f3                              	cmp rbx, r14
0x299d:   76 09                                 	jbe 0x29a8 <function_28b0+0xf8>
0x299f:   4c 39 fb                              	cmp rbx, r15
0x29a2:   73 04                                 	jae 0x29a8 <function_28b0+0xf8>
0x29a4:   48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x29a8:   49 8b 45 28                           	mov rax, qword ptr [r13 + 0x28]
0x29ac:   48 85 c0                              	test rax, rax
0x29af:   74 4f                                 	je 0x2a00 <function_28b0+0x150>
0x29b1:   48 81 38 ff ff ff 00                  	cmp qword ptr [rax], 0xffffff
0x29b8:   eb 44                                 	jmp 0x29fe <function_28b0+0x14e>
0x29ba:   49 8b 4d 28                           	mov rcx, qword ptr [r13 + 0x28]
0x29be:   3d 98 07 00 00                        	cmp eax, 0x798
0x29c3:   75 4f                                 	jne 0x2a14 <function_28b0+0x164>
0x29c5:   48 85 c9                              	test rcx, rcx
0x29c8:   74 4a                                 	je 0x2a14 <function_28b0+0x164>
0x29ca:   48 8b 01                              	mov rax, qword ptr [rcx]
0x29cd:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x29d3:   76 2b                                 	jbe 0x2a00 <function_28b0+0x150>
0x29d5:   49 89 45 10                           	mov qword ptr [r13 + 0x10], rax
0x29d9:   49 8b 84 24 20 01 00 00               	mov rax, qword ptr [r12 + 0x120]
0x29e1:   48 89 01                              	mov qword ptr [rcx], rax
0x29e4:   4c 39 f3                              	cmp rbx, r14
0x29e7:   76 09                                 	jbe 0x29f2 <function_28b0+0x142>
0x29e9:   4c 39 fb                              	cmp rbx, r15
0x29ec:   73 04                                 	jae 0x29f2 <function_28b0+0x142>
0x29ee:   48 89 43 08                           	mov qword ptr [rbx + 8], rax
0x29f2:   48 85 d2                              	test rdx, rdx
0x29f5:   74 09                                 	je 0x2a00 <function_28b0+0x150>
0x29f7:   48 81 3a ff ff ff 00                  	cmp qword ptr [rdx], 0xffffff
0x29fe:   76 14                                 	jbe 0x2a14 <function_28b0+0x164>
0x2a00:   4c 89 e7                              	mov rdi, r12
0x2a03:   e8 48 fd ff ff                        	call 0x2750 <function_2750>
0x2a08:   41 c7 84 24 30 01 00 00 01 00 00 00   	mov dword ptr [r12 + 0x130], 1
0x2a14:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x2a18:   5b                                    	pop rbx
0x2a19:   41 5c                                 	pop r12
0x2a1b:   41 5d                                 	pop r13
0x2a1d:   41 5e                                 	pop r14
0x2a1f:   41 5f                                 	pop r15
0x2a21:   c3                                    	ret 
; section: .text.reverse_seez
; function: function_2a30 at 0x2a30 -- 0x2aec
0x2a30:   89 ff                                 	mov edi, edi
0x2a32:   48 89 d0                              	mov rax, rdx
0x2a35:   48 c1 e7 05                           	shl rdi, 5
0x2a39:   49 01 f9                              	add r9, rdi
0x2a3c:   49 8b 51 08                           	mov rdx, qword ptr [r9 + 8]
0x2a40:   48 85 d2                              	test rdx, rdx
0x2a43:   0f 84 a0 00 00 00                     	je 0x2ae9 <function_2a30+0xb9>
0x2a49:   41 55                                 	push r13
0x2a4b:   4d 89 c5                              	mov r13, r8
0x2a4e:   45 31 c0                              	xor r8d, r8d
0x2a51:   41 54                                 	push r12
0x2a53:   4c 89 ef                              	mov rdi, r13
0x2a56:   49 89 cc                              	mov r12, rcx
0x2a59:   31 c9                                 	xor ecx, ecx
0x2a5b:   53                                    	push rbx
0x2a5c:   48 89 f3                              	mov rbx, rsi
0x2a5f:   48 89 16                              	mov qword ptr [rsi], rdx
0x2a62:   49 8b 51 10                           	mov rdx, qword ptr [r9 + 0x10]
0x2a66:   48 89 10                              	mov qword ptr [rax], rdx
0x2a69:   48 8b 36                              	mov rsi, qword ptr [rsi]
0x2a6c:   31 d2                                 	xor edx, edx
0x2a6e:   e8 fd f0 ff ff                        	call 0x1b70 <.Lstream_encoder_update.0>
0x2a73:   49 89 04 24                           	mov qword ptr [r12], rax
0x2a77:   48 85 c0                              	test rax, rax
0x2a7a:   74 22                                 	je 0x2a9e <function_2a30+0x6e>
0x2a7c:   49 8b 34 24                           	mov rsi, qword ptr [r12]
0x2a80:   b9 01 00 00 00                        	mov ecx, 1
0x2a85:   ba 10 00 00 00                        	mov edx, 0x10
0x2a8a:   4c 89 ef                              	mov rdi, r13
0x2a8d:   48 83 ee 08                           	sub rsi, 8
0x2a91:   e8 1a f8 ff ff                        	call 0x22b0 <.Lauto_decode.1>
0x2a96:   85 c0                                 	test eax, eax
0x2a98:   75 21                                 	jne 0x2abb <function_2a30+0x8b>
0x2a9a:   31 c0                                 	xor eax, eax
0x2a9c:   eb 45                                 	jmp 0x2ae3 <function_2a30+0xb3>
0x2a9e:   48 8b 33                              	mov rsi, qword ptr [rbx]
0x2aa1:   45 31 c0                              	xor r8d, r8d
0x2aa4:   31 c9                                 	xor ecx, ecx
0x2aa6:   31 d2                                 	xor edx, edx
0x2aa8:   4c 89 ef                              	mov rdi, r13
0x2aab:   e8 60 f1 ff ff                        	call 0x1c10 <.Lstream_encoder_update.1>
0x2ab0:   49 89 04 24                           	mov qword ptr [r12], rax
0x2ab4:   48 85 c0                              	test rax, rax
0x2ab7:   75 c3                                 	jne 0x2a7c <function_2a30+0x4c>
0x2ab9:   eb df                                 	jmp 0x2a9a <function_2a30+0x6a>
0x2abb:   48 8b 54 24 20                        	mov rdx, qword ptr [rsp + 0x20]
0x2ac0:   b8 01 00 00 00                        	mov eax, 1
0x2ac5:   83 3a 00                              	cmp dword ptr [rdx], 0
0x2ac8:   74 19                                 	je 0x2ae3 <function_2a30+0xb3>
0x2aca:   48 8b 3b                              	mov rdi, qword ptr [rbx]
0x2acd:   ba 30 e2 00 00                        	mov edx, 0xe230
0x2ad2:   48 8d 77 04                           	lea rsi, [rdi + 4]
0x2ad6:   e8 c5 df ff ff                        	call 0xaa0 <.Llzma_block_buffer_encode.0>
0x2adb:   85 c0                                 	test eax, eax
0x2add:   0f 95 c0                              	setne al
0x2ae0:   0f b6 c0                              	movzx eax, al
0x2ae3:   5b                                    	pop rbx
0x2ae4:   41 5c                                 	pop r12
0x2ae6:   41 5d                                 	pop r13
0x2ae8:   c3                                    	ret 
0x2ae9:   31 c0                                 	xor eax, eax
0x2aeb:   c3                                    	ret 
; section: .text.transfora
; function: function_2af0 at 0x2af0 -- 0x2c32
0x2af0:   41 57                                 	push r15
0x2af2:   31 c0                                 	xor eax, eax
0x2af4:   41 56                                 	push r14
0x2af6:   41 55                                 	push r13
0x2af8:   49 89 fd                              	mov r13, rdi
0x2afb:   41 54                                 	push r12
0x2afd:   53                                    	push rbx
0x2afe:   48 83 c4 80                           	add rsp, -0x80
0x2b02:   49 39 f5                              	cmp r13, rsi
0x2b05:   48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x2b0a:   48 8d 7c 24 28                        	lea rdi, [rsp + 0x28]
0x2b0f:   b9 16 00 00 00                        	mov ecx, 0x16
0x2b14:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x2b16:   0f 94 c0                              	sete al
0x2b19:   4d 85 ed                              	test r13, r13
0x2b1c:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x2b21:   0f 94 c2                              	sete dl
0x2b24:   08 d0                                 	or al, dl
0x2b26:   48 8d 44 24 28                        	lea rax, [rsp + 0x28]
0x2b2b:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x2b30:   75 08                                 	jne 0x2b3a <function_2af0+0x4a>
0x2b32:   49 89 f4                              	mov r12, rsi
0x2b35:   48 85 f6                              	test rsi, rsi
0x2b38:   75 07                                 	jne 0x2b41 <function_2af0+0x51>
0x2b3a:   31 c0                                 	xor eax, eax
0x2b3c:   e9 e3 00 00 00                        	jmp 0x2c24 <function_2af0+0x134>
0x2b41:   48 89 f0                              	mov rax, rsi
0x2b44:   4d 89 cf                              	mov r15, r9
0x2b47:   4c 29 e8                              	sub rax, r13
0x2b4a:   49 39 f5                              	cmp r13, rsi
0x2b4d:   72 06                                 	jb 0x2b55 <function_2af0+0x65>
0x2b4f:   4c 89 e8                              	mov rax, r13
0x2b52:   48 29 f0                              	sub rax, rsi
0x2b55:   48 83 f8 0f                           	cmp rax, 0xf
0x2b59:   7f df                                 	jg 0x2b3a <function_2af0+0x4a>
0x2b5b:   49 8b 88 68 02 00 00                  	mov rcx, qword ptr [r8 + 0x268]
0x2b62:   48 85 c9                              	test rcx, rcx
0x2b65:   74 d3                                 	je 0x2b3a <function_2af0+0x4a>
0x2b67:   49 8b b8 88 02 00 00                  	mov rdi, qword ptr [r8 + 0x288]
0x2b6e:   48 85 ff                              	test rdi, rdi
0x2b71:   74 c7                                 	je 0x2b3a <function_2af0+0x4a>
0x2b73:   4d 8b b0 90 02 00 00                  	mov r14, qword ptr [r8 + 0x290]
0x2b7a:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x2b7f:   4c 89 f6                              	mov rsi, r14
0x2b82:   e8 b9 e3 ff ff                        	call 0xf40 <.Llzma_mt_block_size.1>
0x2b87:   85 c0                                 	test eax, eax
0x2b89:   74 af                                 	je 0x2b3a <function_2af0+0x4a>
0x2b8b:   48 8b 5c 24 28                        	mov rbx, qword ptr [rsp + 0x28]
0x2b90:   48 8b 74 24 30                        	mov rsi, qword ptr [rsp + 0x30]
0x2b95:   4c 89 f2                              	mov rdx, r14
0x2b98:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x2b9d:   48 01 de                              	add rsi, rbx
0x2ba0:   e8 5b d4 ff ff                        	call 0 <.Lx86_code.part.0>
0x2ba5:   85 c0                                 	test eax, eax
0x2ba7:   74 41                                 	je 0x2bea <function_2af0+0xfa>
0x2ba9:   81 7c 24 50 68 01 00 00               	cmp dword ptr [rsp + 0x50], 0x168
0x2bb1:   75 37                                 	jne 0x2bea <function_2af0+0xfa>
0x2bb3:   48 8b 5c 24 30                        	mov rbx, qword ptr [rsp + 0x30]
0x2bb8:   45 8b 0f                              	mov r9d, dword ptr [r15]
0x2bbb:   31 c0                                 	xor eax, eax
0x2bbd:   48 8d 54 24 20                        	lea rdx, [rsp + 0x20]
0x2bc2:   48 03 5c 24 60                        	add rbx, qword ptr [rsp + 0x60]
0x2bc7:   4c 8b 44 24 18                        	mov r8, qword ptr [rsp + 0x18]
0x2bcc:   31 f6                                 	xor esi, esi
0x2bce:   48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x2bd3:   48 03 5c 24 28                        	add rbx, qword ptr [rsp + 0x28]
0x2bd8:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x2bdd:   48 89 df                              	mov rdi, rbx
0x2be0:   e8 9b df ff ff                        	call 0xb80 <.Llzma2_encoder_init.1>
0x2be5:   4c 8b 74 24 20                        	mov r14, qword ptr [rsp + 0x20]
0x2bea:   31 d2                                 	xor edx, edx
0x2bec:   4d 89 e8                              	mov r8, r13
0x2bef:   b9 09 01 00 00                        	mov ecx, 0x109
0x2bf4:   4c 89 f6                              	mov rsi, r14
0x2bf7:   48 89 df                              	mov rdi, rbx
0x2bfa:   e8 41 e4 ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x2bff:   85 c0                                 	test eax, eax
0x2c01:   0f 84 33 ff ff ff                     	je 0x2b3a <function_2af0+0x4a>
0x2c07:   31 d2                                 	xor edx, edx
0x2c09:   4d 89 e0                              	mov r8, r12
0x2c0c:   b9 09 01 00 00                        	mov ecx, 0x109
0x2c11:   4c 89 f6                              	mov rsi, r14
0x2c14:   48 89 df                              	mov rdi, rbx
0x2c17:   e8 24 e4 ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x2c1c:   85 c0                                 	test eax, eax
0x2c1e:   0f 95 c0                              	setne al
0x2c21:   0f b6 c0                              	movzx eax, al
0x2c24:   48 83 ec 80                           	sub rsp, -0x80
0x2c28:   5b                                    	pop rbx
0x2c29:   41 5c                                 	pop r12
0x2c2b:   41 5d                                 	pop r13
0x2c2d:   41 5e                                 	pop r14
0x2c2f:   41 5f                                 	pop r15
0x2c31:   c3                                    	ret 
; section: .text.lzma_next_filter_inia
; function: function_2c40 at 0x2c40 -- 0x2d03
0x2c40:   41 57                                 	push r15
0x2c42:   41 89 f8                              	mov r8d, edi
0x2c45:   31 c0                                 	xor eax, eax
0x2c47:   41 56                                 	push r14
0x2c49:   49 c1 e0 05                           	shl r8, 5
0x2c4d:   41 55                                 	push r13
0x2c4f:   41 54                                 	push r12
0x2c51:   53                                    	push rbx
0x2c52:   48 89 cb                              	mov rbx, rcx
0x2c55:   b9 16 00 00 00                        	mov ecx, 0x16
0x2c5a:   48 83 ec 60                           	sub rsp, 0x60
0x2c5e:   48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x2c63:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x2c65:   4a 8d 04 06                           	lea rax, [rsi + r8]
0x2c69:   4c 8b 68 08                           	mov r13, qword ptr [rax + 8]
0x2c6d:   4d 85 ed                              	test r13, r13
0x2c70:   75 04                                 	jne 0x2c76 <function_2c40+0x36>
0x2c72:   31 c0                                 	xor eax, eax
0x2c74:   eb 7f                                 	jmp 0x2cf5 <function_2c40+0xb5>
0x2c76:   4c 8b 78 10                           	mov r15, qword ptr [rax + 0x10]
0x2c7a:   49 89 d6                              	mov r14, rdx
0x2c7d:   4c 8d 64 24 08                        	lea r12, [rsp + 8]
0x2c82:   48 83 eb 04                           	sub rbx, 4
0x2c86:   4d 39 fd                              	cmp r13, r15
0x2c89:   73 e7                                 	jae 0x2c72 <function_2c40+0x32>
0x2c8b:   45 31 c0                              	xor r8d, r8d
0x2c8e:   b9 0b 01 00 00                        	mov ecx, 0x10b
0x2c93:   4c 89 e2                              	mov rdx, r12
0x2c96:   4c 89 fe                              	mov rsi, r15
0x2c99:   4c 89 ef                              	mov rdi, r13
0x2c9c:   e8 9f e3 ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x2ca1:   85 c0                                 	test eax, eax
0x2ca3:   74 4b                                 	je 0x2cf0 <function_2c40+0xb0>
0x2ca5:   8a 44 24 23                           	mov al, byte ptr [rsp + 0x23]
0x2ca9:   83 e0 48                              	and eax, 0x48
0x2cac:   3c 48                                 	cmp al, 0x48
0x2cae:   74 39                                 	je 0x2ce9 <function_2c40+0xa9>
0x2cb0:   f6 44 24 19 01                        	test byte ptr [rsp + 0x19], 1
0x2cb5:   75 07                                 	jne 0x2cbe <function_2c40+0x7e>
0x2cb7:   4d 85 f6                              	test r14, r14
0x2cba:   74 b6                                 	je 0x2c72 <function_2c40+0x32>
0x2cbc:   eb 2b                                 	jmp 0x2ce9 <function_2c40+0xa9>
0x2cbe:   8b 54 24 24                           	mov edx, dword ptr [rsp + 0x24]
0x2cc2:   48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0x2cc7:   81 e2 00 ff 00 ff                     	and edx, 0xff00ff00
0x2ccd:   81 fa 00 00 00 05                     	cmp edx, 0x5000000
0x2cd3:   75 0a                                 	jne 0x2cdf <function_2c40+0x9f>
0x2cd5:   48 03 44 24 08                        	add rax, qword ptr [rsp + 8]
0x2cda:   48 03 44 24 10                        	add rax, qword ptr [rsp + 0x10]
0x2cdf:   4c 39 f0                              	cmp rax, r14
0x2ce2:   72 05                                 	jb 0x2ce9 <function_2c40+0xa9>
0x2ce4:   48 39 c3                              	cmp rbx, rax
0x2ce7:   73 0c                                 	jae 0x2cf5 <function_2c40+0xb5>
0x2ce9:   4c 03 6c 24 10                        	add r13, qword ptr [rsp + 0x10]
0x2cee:   eb 96                                 	jmp 0x2c86 <function_2c40+0x46>
0x2cf0:   49 ff c5                              	inc r13
0x2cf3:   eb 91                                 	jmp 0x2c86 <function_2c40+0x46>
0x2cf5:   48 83 c4 60                           	add rsp, 0x60
0x2cf9:   5b                                    	pop rbx
0x2cfa:   41 5c                                 	pop r12
0x2cfc:   41 5d                                 	pop r13
0x2cfe:   41 5e                                 	pop r14
0x2d00:   41 5f                                 	pop r15
0x2d02:   c3                                    	ret 
; section: .text.auto_decoder_iniz
; function: function_2d10 at 0x2d10 -- 0x2fc7
0x2d10:   41 57                                 	push r15
0x2d12:   48 89 f2                              	mov rdx, rsi
0x2d15:   b8 10 00 00 00                        	mov eax, 0x10
0x2d1a:   41 56                                 	push r14
0x2d1c:   41 55                                 	push r13
0x2d1e:   49 89 f5                              	mov r13, rsi
0x2d21:   41 54                                 	push r12
0x2d23:   53                                    	push rbx
0x2d24:   48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x2d2b:   48 89 7c 24 08                        	mov qword ptr [rsp + 8], rdi
0x2d30:   89 02                                 	mov dword ptr [rdx], eax
0x2d32:   83 c0 08                              	add eax, 8
0x2d35:   48 83 c2 20                           	add rdx, 0x20
0x2d39:   3d e8 00 00 00                        	cmp eax, 0xe8
0x2d3e:   75 f0                                 	jne 0x2d30 <function_2d10+0x20>
0x2d40:   31 c0                                 	xor eax, eax
0x2d42:   48 8d 7c 24 38                        	lea rdi, [rsp + 0x38]
0x2d47:   b9 16 00 00 00                        	mov ecx, 0x16
0x2d4c:   31 d2                                 	xor edx, edx
0x2d4e:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x2d50:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x2d55:   48 8d 74 24 28                        	lea rsi, [rsp + 0x28]
0x2d5a:   48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x2d5f:   48 89 54 24 30                        	mov qword ptr [rsp + 0x30], rdx
0x2d64:   e8 37 f1 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x2d69:   49 89 c6                              	mov r14, rax
0x2d6c:   48 85 c0                              	test rax, rax
0x2d6f:   48 8d 44 24 38                        	lea rax, [rsp + 0x38]
0x2d74:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x2d79:   0f 84 37 02 00 00                     	je 0x2fb6 <function_2d10+0x2a6>
0x2d7f:   48 8b 5c 24 28                        	mov rbx, qword ptr [rsp + 0x28]
0x2d84:   48 83 fb 10                           	cmp rbx, 0x10
0x2d88:   0f 86 28 02 00 00                     	jbe 0x2fb6 <function_2d10+0x2a6>
0x2d8e:   48 8d 44 24 24                        	lea rax, [rsp + 0x24]
0x2d93:   4c 01 f3                              	add rbx, r14
0x2d96:   31 d2                                 	xor edx, edx
0x2d98:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x2d9d:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x2da2:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x2da7:   31 c0                                 	xor eax, eax
0x2da9:   89 44 24 24                           	mov dword ptr [rsp + 0x24], eax
0x2dad:   e8 ce f2 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x2db2:   49 89 c4                              	mov r12, rax
0x2db5:   48 85 c0                              	test rax, rax
0x2db8:   74 42                                 	je 0x2dfc <function_2d10+0xec>
0x2dba:   45 31 ff                              	xor r15d, r15d
0x2dbd:   4b 83 7c 3d 18 00                     	cmp qword ptr [r13 + r15 + 0x18], 0
0x2dc3:   75 23                                 	jne 0x2de8 <function_2d10+0xd8>
0x2dc5:   8b 44 24 24                           	mov eax, dword ptr [rsp + 0x24]
0x2dc9:   43 39 44 3d 00                        	cmp dword ptr [r13 + r15], eax
0x2dce:   75 18                                 	jne 0x2de8 <function_2d10+0xd8>
0x2dd0:   4c 89 e2                              	mov rdx, r12
0x2dd3:   48 89 de                              	mov rsi, rbx
0x2dd6:   4c 89 f7                              	mov rdi, r14
0x2dd9:   e8 22 e2 ff ff                        	call 0x1000 <.Lstream_encode.1>
0x2dde:   48 85 c0                              	test rax, rax
0x2de1:   74 05                                 	je 0x2de8 <function_2d10+0xd8>
0x2de3:   4b 89 44 3d 18                        	mov qword ptr [r13 + r15 + 0x18], rax
0x2de8:   49 83 c7 20                           	add r15, 0x20
0x2dec:   49 81 ff 60 03 00 00                  	cmp r15, 0x360
0x2df3:   75 c8                                 	jne 0x2dbd <function_2d10+0xad>
0x2df5:   49 8d 54 24 01                        	lea rdx, [r12 + 1]
0x2dfa:   eb a1                                 	jmp 0x2d9d <function_2d10+0x8d>
0x2dfc:   4d 8d 65 08                           	lea r12, [r13 + 8]
0x2e00:   4d 8d bd 68 03 00 00                  	lea r15, [r13 + 0x368]
0x2e07:   4c 89 e0                              	mov rax, r12
0x2e0a:   48 8b 50 10                           	mov rdx, qword ptr [rax + 0x10]
0x2e0e:   48 85 d2                              	test rdx, rdx
0x2e11:   74 25                                 	je 0x2e38 <function_2d10+0x128>
0x2e13:   4c 39 f2                              	cmp rdx, r14
0x2e16:   73 13                                 	jae 0x2e2b <function_2d10+0x11b>
0x2e18:   48 8b 48 08                           	mov rcx, qword ptr [rax + 8]
0x2e1c:   48 8d 51 ff                           	lea rdx, [rcx - 1]
0x2e20:   4c 39 f2                              	cmp rdx, r14
0x2e23:   72 13                                 	jb 0x2e38 <function_2d10+0x128>
0x2e25:   4c 89 70 08                           	mov qword ptr [rax + 8], r14
0x2e29:   eb 0d                                 	jmp 0x2e38 <function_2d10+0x128>
0x2e2b:   4c 39 30                              	cmp qword ptr [rax], r14
0x2e2e:   73 03                                 	jae 0x2e33 <function_2d10+0x123>
0x2e30:   4c 89 30                              	mov qword ptr [rax], r14
0x2e33:   49 39 d6                              	cmp r14, rdx
0x2e36:   74 e0                                 	je 0x2e18 <function_2d10+0x108>
0x2e38:   48 83 c0 20                           	add rax, 0x20
0x2e3c:   4c 39 f8                              	cmp rax, r15
0x2e3f:   75 c9                                 	jne 0x2e0a <function_2d10+0xfa>
0x2e41:   4d 89 f5                              	mov r13, r14
0x2e44:   49 39 dd                              	cmp r13, rbx
0x2e47:   0f 83 d2 00 00 00                     	jae 0x2f1f <function_2d10+0x20f>
0x2e4d:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x2e52:   4c 89 ee                              	mov rsi, r13
0x2e55:   48 89 da                              	mov rdx, rbx
0x2e58:   49 ff c5                              	inc r13
0x2e5b:   e8 a0 d1 ff ff                        	call 0 <.Lx86_code.part.0>
0x2e60:   85 c0                                 	test eax, eax
0x2e62:   74 e0                                 	je 0x2e44 <function_2d10+0x134>
0x2e64:   48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0x2e69:   48 8b 74 24 40                        	mov rsi, qword ptr [rsp + 0x40]
0x2e6e:   8b 54 24 60                           	mov edx, dword ptr [rsp + 0x60]
0x2e72:   4c 8d 2c 30                           	lea r13, [rax + rsi]
0x2e76:   81 fa 68 01 00 00                     	cmp edx, 0x168
0x2e7c:   75 12                                 	jne 0x2e90 <function_2d10+0x180>
0x2e7e:   48 8b 54 24 70                        	mov rdx, qword ptr [rsp + 0x70]
0x2e83:   48 85 d2                              	test rdx, rdx
0x2e86:   74 bc                                 	je 0x2e44 <function_2d10+0x134>
0x2e88:   48 01 f2                              	add rdx, rsi
0x2e8b:   48 01 d0                              	add rax, rdx
0x2e8e:   eb 35                                 	jmp 0x2ec5 <function_2d10+0x1b5>
0x2e90:   81 fa fe a5 00 00                     	cmp edx, 0xa5fe
0x2e96:   74 2d                                 	je 0x2ec5 <function_2d10+0x1b5>
0x2e98:   81 fa 0d 01 00 00                     	cmp edx, 0x10d
0x2e9e:   75 a4                                 	jne 0x2e44 <function_2d10+0x134>
0x2ea0:   8a 44 24 53                           	mov al, byte ptr [rsp + 0x53]
0x2ea4:   83 e0 48                              	and eax, 0x48
0x2ea7:   3c 48                                 	cmp al, 0x48
0x2ea9:   75 99                                 	jne 0x2e44 <function_2d10+0x134>
0x2eab:   8b 44 24 54                           	mov eax, dword ptr [rsp + 0x54]
0x2eaf:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x2eb4:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x2eb9:   75 89                                 	jne 0x2e44 <function_2d10+0x134>
0x2ebb:   48 8b 44 24 68                        	mov rax, qword ptr [rsp + 0x68]
0x2ec0:   4c 01 e8                              	add rax, r13
0x2ec3:   eb 09                                 	jmp 0x2ece <function_2d10+0x1be>
0x2ec5:   48 85 c0                              	test rax, rax
0x2ec8:   0f 84 76 ff ff ff                     	je 0x2e44 <function_2d10+0x134>
0x2ece:   49 39 c6                              	cmp r14, rax
0x2ed1:   0f 87 6d ff ff ff                     	ja 0x2e44 <function_2d10+0x134>
0x2ed7:   48 39 c3                              	cmp rbx, rax
0x2eda:   0f 82 64 ff ff ff                     	jb 0x2e44 <function_2d10+0x134>
0x2ee0:   4c 89 e2                              	mov rdx, r12
0x2ee3:   48 8b 72 10                           	mov rsi, qword ptr [rdx + 0x10]
0x2ee7:   48 85 f6                              	test rsi, rsi
0x2eea:   74 25                                 	je 0x2f11 <function_2d10+0x201>
0x2eec:   48 39 c6                              	cmp rsi, rax
0x2eef:   73 13                                 	jae 0x2f04 <function_2d10+0x1f4>
0x2ef1:   48 8b 7a 08                           	mov rdi, qword ptr [rdx + 8]
0x2ef5:   48 8d 77 ff                           	lea rsi, [rdi - 1]
0x2ef9:   48 39 c6                              	cmp rsi, rax
0x2efc:   72 13                                 	jb 0x2f11 <function_2d10+0x201>
0x2efe:   48 89 42 08                           	mov qword ptr [rdx + 8], rax
0x2f02:   eb 0d                                 	jmp 0x2f11 <function_2d10+0x201>
0x2f04:   48 39 02                              	cmp qword ptr [rdx], rax
0x2f07:   73 03                                 	jae 0x2f0c <function_2d10+0x1fc>
0x2f09:   48 89 02                              	mov qword ptr [rdx], rax
0x2f0c:   48 39 c6                              	cmp rsi, rax
0x2f0f:   74 e0                                 	je 0x2ef1 <function_2d10+0x1e1>
0x2f11:   48 83 c2 20                           	add rdx, 0x20
0x2f15:   4c 39 fa                              	cmp rdx, r15
0x2f18:   75 c9                                 	jne 0x2ee3 <function_2d10+0x1d3>
0x2f1a:   e9 25 ff ff ff                        	jmp 0x2e44 <function_2d10+0x134>
0x2f1f:   4c 8d 6c 24 30                        	lea r13, [rsp + 0x30]
0x2f24:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x2f29:   31 f6                                 	xor esi, esi
0x2f2b:   4d 89 e8                              	mov r8, r13
0x2f2e:   48 89 d9                              	mov rcx, rbx
0x2f31:   4c 89 f2                              	mov rdx, r14
0x2f34:   e8 37 ec ff ff                        	call 0x1b70 <.Lstream_encoder_update.0>
0x2f39:   48 85 c0                              	test rax, rax
0x2f3c:   74 58                                 	je 0x2f96 <function_2d10+0x286>
0x2f3e:   4c 89 e2                              	mov rdx, r12
0x2f41:   48 8b 4a 10                           	mov rcx, qword ptr [rdx + 0x10]
0x2f45:   48 85 c9                              	test rcx, rcx
0x2f48:   74 24                                 	je 0x2f6e <function_2d10+0x25e>
0x2f4a:   48 39 c1                              	cmp rcx, rax
0x2f4d:   73 12                                 	jae 0x2f61 <function_2d10+0x251>
0x2f4f:   48 8b 4a 08                           	mov rcx, qword ptr [rdx + 8]
0x2f53:   48 ff c9                              	dec rcx
0x2f56:   48 39 c1                              	cmp rcx, rax
0x2f59:   72 13                                 	jb 0x2f6e <function_2d10+0x25e>
0x2f5b:   48 89 42 08                           	mov qword ptr [rdx + 8], rax
0x2f5f:   eb 0d                                 	jmp 0x2f6e <function_2d10+0x25e>
0x2f61:   48 39 02                              	cmp qword ptr [rdx], rax
0x2f64:   73 03                                 	jae 0x2f69 <function_2d10+0x259>
0x2f66:   48 89 02                              	mov qword ptr [rdx], rax
0x2f69:   48 39 c8                              	cmp rax, rcx
0x2f6c:   74 e1                                 	je 0x2f4f <function_2d10+0x23f>
0x2f6e:   48 83 c2 20                           	add rdx, 0x20
0x2f72:   4c 39 fa                              	cmp rdx, r15
0x2f75:   75 ca                                 	jne 0x2f41 <function_2d10+0x231>
0x2f77:   eb ab                                 	jmp 0x2f24 <function_2d10+0x214>
0x2f79:   48 39 d8                              	cmp rax, rbx
0x2f7c:   72 24                                 	jb 0x2fa2 <function_2d10+0x292>
0x2f7e:   49 39 1c 24                           	cmp qword ptr [r12], rbx
0x2f82:   73 04                                 	jae 0x2f88 <function_2d10+0x278>
0x2f84:   49 89 1c 24                           	mov qword ptr [r12], rbx
0x2f88:   48 39 d8                              	cmp rax, rbx
0x2f8b:   74 15                                 	je 0x2fa2 <function_2d10+0x292>
0x2f8d:   49 83 c4 20                           	add r12, 0x20
0x2f91:   4d 39 fc                              	cmp r12, r15
0x2f94:   74 20                                 	je 0x2fb6 <function_2d10+0x2a6>
0x2f96:   49 8b 44 24 10                        	mov rax, qword ptr [r12 + 0x10]
0x2f9b:   48 85 c0                              	test rax, rax
0x2f9e:   74 ed                                 	je 0x2f8d <function_2d10+0x27d>
0x2fa0:   eb d7                                 	jmp 0x2f79 <function_2d10+0x269>
0x2fa2:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x2fa7:   48 ff c8                              	dec rax
0x2faa:   48 39 d8                              	cmp rax, rbx
0x2fad:   72 de                                 	jb 0x2f8d <function_2d10+0x27d>
0x2faf:   49 89 5c 24 08                        	mov qword ptr [r12 + 8], rbx
0x2fb4:   eb d7                                 	jmp 0x2f8d <function_2d10+0x27d>
0x2fb6:   48 81 c4 90 00 00 00                  	add rsp, 0x90
0x2fbd:   5b                                    	pop rbx
0x2fbe:   41 5c                                 	pop r12
0x2fc0:   41 5d                                 	pop r13
0x2fc2:   41 5e                                 	pop r14
0x2fc4:   41 5f                                 	pop r15
0x2fc6:   c3                                    	ret 
; section: .text.lzma_lzma_set_out_limia
; function: function_2fd0 at 0x2fd0 -- 0x3296
0x2fd0:   41 57                                 	push r15
0x2fd2:   31 c0                                 	xor eax, eax
0x2fd4:   41 56                                 	push r14
0x2fd6:   41 55                                 	push r13
0x2fd8:   41 54                                 	push r12
0x2fda:   53                                    	push rbx
0x2fdb:   48 81 ec a0 00 00 00                  	sub rsp, 0xa0
0x2fe2:   49 89 00                              	mov qword ptr [r8], rax
0x2fe5:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x2fea:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x2fef:   48 89 4c 24 20                        	mov qword ptr [rsp + 0x20], rcx
0x2ff4:   48 39 f7                              	cmp rdi, rsi
0x2ff7:   0f 83 88 02 00 00                     	jae 0x3285 <function_2fd0+0x2b5>
0x2ffd:   31 c0                                 	xor eax, eax
0x2fff:   49 89 ff                              	mov r15, rdi
0x3002:   b9 16 00 00 00                        	mov ecx, 0x16
0x3007:   4d 89 c5                              	mov r13, r8
0x300a:   48 8d 7c 24 48                        	lea rdi, [rsp + 0x48]
0x300f:   4d 89 ce                              	mov r14, r9
0x3012:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3014:   48 8d 44 24 48                        	lea rax, [rsp + 0x48]
0x3019:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x301e:   4c 8b 44 24 10                        	mov r8, qword ptr [rsp + 0x10]
0x3023:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x3028:   b9 01 00 00 00                        	mov ecx, 1
0x302d:   4c 89 ff                              	mov rdi, r15
0x3030:   ba 01 00 00 00                        	mov edx, 1
0x3035:   e8 e6 dc ff ff                        	call 0xd20 <.Llzma_filters_update.0>
0x303a:   85 c0                                 	test eax, eax
0x303c:   0f 84 43 02 00 00                     	je 0x3285 <function_2fd0+0x2b5>
0x3042:   8a 4c 24 59                           	mov cl, byte ptr [rsp + 0x59]
0x3046:   4c 8b 54 24 48                        	mov r10, qword ptr [rsp + 0x48]
0x304b:   45 31 e4                              	xor r12d, r12d
0x304e:   48 8b 54 24 50                        	mov rdx, qword ptr [rsp + 0x50]
0x3053:   f6 c1 01                              	test cl, 1
0x3056:   74 1d                                 	je 0x3075 <function_2fd0+0xa5>
0x3058:   8b 44 24 64                           	mov eax, dword ptr [rsp + 0x64]
0x305c:   4c 8b 64 24 78                        	mov r12, qword ptr [rsp + 0x78]
0x3061:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x3066:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x306b:   75 08                                 	jne 0x3075 <function_2fd0+0xa5>
0x306d:   4f 8d 0c 22                           	lea r9, [r10 + r12]
0x3071:   4d 8d 24 11                           	lea r12, [r9 + rdx]
0x3075:   45 31 db                              	xor r11d, r11d
0x3078:   66 f7 44 24 58 40 10                  	test word ptr [rsp + 0x58], 0x1040
0x307f:   74 39                                 	je 0x30ba <function_2fd0+0xea>
0x3081:   8a 44 24 58                           	mov al, byte ptr [rsp + 0x58]
0x3085:   a8 40                                 	test al, 0x40
0x3087:   74 12                                 	je 0x309b <function_2fd0+0xcb>
0x3089:   44 8a 5c 24 66                        	mov r11b, byte ptr [rsp + 0x66]
0x308e:   a8 20                                 	test al, 0x20
0x3090:   74 28                                 	je 0x30ba <function_2fd0+0xea>
0x3092:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x3097:   01 c0                                 	add eax, eax
0x3099:   eb 19                                 	jmp 0x30b4 <function_2fd0+0xe4>
0x309b:   80 e1 10                              	and cl, 0x10
0x309e:   41 89 cb                              	mov r11d, ecx
0x30a1:   74 17                                 	je 0x30ba <function_2fd0+0xea>
0x30a3:   44 8a 5c 24 68                        	mov r11b, byte ptr [rsp + 0x68]
0x30a8:   a8 20                                 	test al, 0x20
0x30aa:   74 0e                                 	je 0x30ba <function_2fd0+0xea>
0x30ac:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x30b1:   c1 e0 03                              	shl eax, 3
0x30b4:   83 e0 08                              	and eax, 8
0x30b7:   41 09 c3                              	or r11d, eax
0x30ba:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x30bf:   4d 8d 3c 12                           	lea r15, [r10 + rdx]
0x30c3:   49 39 c4                              	cmp r12, rax
0x30c6:   0f 82 7f 01 00 00                     	jb 0x324b <function_2fd0+0x27b>
0x30cc:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x30d1:   49 39 c4                              	cmp r12, rax
0x30d4:   0f 83 71 01 00 00                     	jae 0x324b <function_2fd0+0x27b>
0x30da:   49 8b 46 60                           	mov rax, qword ptr [r14 + 0x60]
0x30de:   4d 8d 47 40                           	lea r8, [r15 + 0x40]
0x30e2:   4c 89 fe                              	mov rsi, r15
0x30e5:   49 39 c0                              	cmp r8, rax
0x30e8:   4c 0f 47 c0                           	cmova r8, rax
0x30ec:   31 db                                 	xor ebx, ebx
0x30ee:   31 c9                                 	xor ecx, ecx
0x30f0:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x30f5:   4c 89 c2                              	mov rdx, r8
0x30f8:   88 4c 24 3f                           	mov byte ptr [rsp + 0x3f], cl
0x30fc:   44 88 5c 24 3e                        	mov byte ptr [rsp + 0x3e], r11b
0x3101:   4c 89 44 24 30                        	mov qword ptr [rsp + 0x30], r8
0x3106:   48 89 74 24 28                        	mov qword ptr [rsp + 0x28], rsi
0x310b:   e8 f0 ce ff ff                        	call 0 <.Lx86_code.part.0>
0x3110:   48 8b 74 24 28                        	mov rsi, qword ptr [rsp + 0x28]
0x3115:   4c 8b 44 24 30                        	mov r8, qword ptr [rsp + 0x30]
0x311a:   85 c0                                 	test eax, eax
0x311c:   44 8a 5c 24 3e                        	mov r11b, byte ptr [rsp + 0x3e]
0x3121:   8a 4c 24 3f                           	mov cl, byte ptr [rsp + 0x3f]
0x3125:   0f 84 11 01 00 00                     	je 0x323c <function_2fd0+0x26c>
0x312b:   8b 44 24 70                           	mov eax, dword ptr [rsp + 0x70]
0x312f:   48 8b 74 24 50                        	mov rsi, qword ptr [rsp + 0x50]
0x3134:   48 03 74 24 48                        	add rsi, qword ptr [rsp + 0x48]
0x3139:   3d 09 01 00 00                        	cmp eax, 0x109
0x313e:   75 6a                                 	jne 0x31aa <function_2fd0+0x1da>
0x3140:   8a 54 24 58                           	mov dl, byte ptr [rsp + 0x58]
0x3144:   89 d0                                 	mov eax, edx
0x3146:   83 e0 40                              	and eax, 0x40
0x3149:   66 f7 44 24 58 40 10                  	test word ptr [rsp + 0x58], 0x1040
0x3150:   74 47                                 	je 0x3199 <function_2fd0+0x1c9>
0x3152:   84 c0                                 	test al, al
0x3154:   74 17                                 	je 0x316d <function_2fd0+0x19d>
0x3156:   8a 4c 24 66                           	mov cl, byte ptr [rsp + 0x66]
0x315a:   f6 c2 20                              	test dl, 0x20
0x315d:   74 42                                 	je 0x31a1 <function_2fd0+0x1d1>
0x315f:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x3164:   01 c0                                 	add eax, eax
0x3166:   83 e0 08                              	and eax, 8
0x3169:   09 c1                                 	or ecx, eax
0x316b:   eb 34                                 	jmp 0x31a1 <function_2fd0+0x1d1>
0x316d:   8a 4c 24 59                           	mov cl, byte ptr [rsp + 0x59]
0x3171:   80 e1 10                              	and cl, 0x10
0x3174:   0f 84 ac 00 00 00                     	je 0x3226 <function_2fd0+0x256>
0x317a:   80 e2 20                              	and dl, 0x20
0x317d:   8a 4c 24 68                           	mov cl, byte ptr [rsp + 0x68]
0x3181:   0f 84 9f 00 00 00                     	je 0x3226 <function_2fd0+0x256>
0x3187:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x318c:   c1 e0 03                              	shl eax, 3
0x318f:   83 e0 08                              	and eax, 8
0x3192:   09 c1                                 	or ecx, eax
0x3194:   e9 8d 00 00 00                        	jmp 0x3226 <function_2fd0+0x256>
0x3199:   84 c0                                 	test al, al
0x319b:   0f 84 85 00 00 00                     	je 0x3226 <function_2fd0+0x256>
0x31a1:   8a 5c 24 67                           	mov bl, byte ptr [rsp + 0x67]
0x31a5:   80 e2 20                              	and dl, 0x20
0x31a8:   eb 6d                                 	jmp 0x3217 <function_2fd0+0x247>
0x31aa:   3d 0b 01 00 00                        	cmp eax, 0x10b
0x31af:   75 75                                 	jne 0x3226 <function_2fd0+0x256>
0x31b1:   8b 54 24 58                           	mov edx, dword ptr [rsp + 0x58]
0x31b5:   8a 44 24 58                           	mov al, byte ptr [rsp + 0x58]
0x31b9:   66 81 e2 40 10                        	and dx, 0x1040
0x31be:   a8 40                                 	test al, 0x40
0x31c0:   75 07                                 	jne 0x31c9 <function_2fd0+0x1f9>
0x31c2:   66 85 d2                              	test dx, dx
0x31c5:   75 38                                 	jne 0x31ff <function_2fd0+0x22f>
0x31c7:   eb 5d                                 	jmp 0x3226 <function_2fd0+0x256>
0x31c9:   8a 4c 24 67                           	mov cl, byte ptr [rsp + 0x67]
0x31cd:   a8 20                                 	test al, 0x20
0x31cf:   74 23                                 	je 0x31f4 <function_2fd0+0x224>
0x31d1:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x31d6:   8d 3c c5 00 00 00 00                  	lea edi, [rax*8]
0x31dd:   83 e7 08                              	and edi, 8
0x31e0:   09 f9                                 	or ecx, edi
0x31e2:   66 85 d2                              	test dx, dx
0x31e5:   74 3f                                 	je 0x3226 <function_2fd0+0x256>
0x31e7:   01 c0                                 	add eax, eax
0x31e9:   83 e0 08                              	and eax, 8
0x31ec:   0a 44 24 66                           	or al, byte ptr [rsp + 0x66]
0x31f0:   89 c3                                 	mov ebx, eax
0x31f2:   eb 32                                 	jmp 0x3226 <function_2fd0+0x256>
0x31f4:   66 85 d2                              	test dx, dx
0x31f7:   74 2d                                 	je 0x3226 <function_2fd0+0x256>
0x31f9:   8a 5c 24 66                           	mov bl, byte ptr [rsp + 0x66]
0x31fd:   eb 27                                 	jmp 0x3226 <function_2fd0+0x256>
0x31ff:   8a 5c 24 59                           	mov bl, byte ptr [rsp + 0x59]
0x3203:   80 e3 10                              	and bl, 0x10
0x3206:   75 09                                 	jne 0x3211 <function_2fd0+0x241>
0x3208:   41 38 cb                              	cmp r11b, cl
0x320b:   75 32                                 	jne 0x323f <function_2fd0+0x26f>
0x320d:   31 c0                                 	xor eax, eax
0x320f:   eb 21                                 	jmp 0x3232 <function_2fd0+0x262>
0x3211:   8a 5c 24 68                           	mov bl, byte ptr [rsp + 0x68]
0x3215:   a8 20                                 	test al, 0x20
0x3217:   74 0d                                 	je 0x3226 <function_2fd0+0x256>
0x3219:   0f b6 44 24 63                        	movzx eax, byte ptr [rsp + 0x63]
0x321e:   c1 e0 03                              	shl eax, 3
0x3221:   83 e0 08                              	and eax, 8
0x3224:   09 c3                                 	or ebx, eax
0x3226:   41 38 cb                              	cmp r11b, cl
0x3229:   75 14                                 	jne 0x323f <function_2fd0+0x26f>
0x322b:   80 fb 07                              	cmp bl, 7
0x322e:   74 2b                                 	je 0x325b <function_2fd0+0x28b>
0x3230:   89 d8                                 	mov eax, ebx
0x3232:   41 89 db                              	mov r11d, ebx
0x3235:   89 c3                                 	mov ebx, eax
0x3237:   e9 b4 fe ff ff                        	jmp 0x30f0 <function_2fd0+0x120>
0x323c:   48 ff c6                              	inc rsi
0x323f:   4c 39 c6                              	cmp rsi, r8
0x3242:   73 07                                 	jae 0x324b <function_2fd0+0x27b>
0x3244:   89 d8                                 	mov eax, ebx
0x3246:   44 89 db                              	mov ebx, r11d
0x3249:   eb e7                                 	jmp 0x3232 <function_2fd0+0x262>
0x324b:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x3250:   49 39 c7                              	cmp r15, rax
0x3253:   0f 82 c5 fd ff ff                     	jb 0x301e <function_2fd0+0x4e>
0x3259:   eb 2a                                 	jmp 0x3285 <function_2fd0+0x2b5>
0x325b:   49 8b 46 20                           	mov rax, qword ptr [r14 + 0x20]
0x325f:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x3264:   4c 89 c6                              	mov rsi, r8
0x3267:   48 8b 7c 24 50                        	mov rdi, qword ptr [rsp + 0x50]
0x326c:   48 03 7c 24 48                        	add rdi, qword ptr [rsp + 0x48]
0x3271:   48 8b 90 a8 00 00 00                  	mov rdx, qword ptr [rax + 0xa8]
0x3278:   e8 f3 d9 ff ff                        	call 0xc70 <.Llzma_optimum_normal.0>
0x327d:   85 c0                                 	test eax, eax
0x327f:   74 ca                                 	je 0x324b <function_2fd0+0x27b>
0x3281:   4d 89 65 00                           	mov qword ptr [r13], r12
0x3285:   48 81 c4 a0 00 00 00                  	add rsp, 0xa0
0x328c:   5b                                    	pop rbx
0x328d:   41 5c                                 	pop r12
0x328f:   41 5d                                 	pop r13
0x3291:   41 5e                                 	pop r14
0x3293:   41 5f                                 	pop r15
0x3295:   c3                                    	ret 
; section: .text.lzma_auto_decoda
; function: .Llzma_auto_decode.1 at 0x32a0 -- 0x331b
0x32a0:   f3 0f 1e fa                           	endbr64 
0x32a4:   41 57                                 	push r15
0x32a6:   41 56                                 	push r14
0x32a8:   49 89 ce                              	mov r14, rcx
0x32ab:   31 c9                                 	xor ecx, ecx
0x32ad:   41 55                                 	push r13
0x32af:   49 89 d5                              	mov r13, rdx
0x32b2:   ba 0d 00 00 00                        	mov edx, 0xd
0x32b7:   41 54                                 	push r12
0x32b9:   49 89 fc                              	mov r12, rdi
0x32bc:   bf d2 00 00 00                        	mov edi, 0xd2
0x32c1:   53                                    	push rbx
0x32c2:   48 83 ec 10                           	sub rsp, 0x10
0x32c6:   89 74 24 0c                           	mov dword ptr [rsp + 0xc], esi
0x32ca:   be 04 00 00 00                        	mov esi, 4
0x32cf:   e8 0c 79 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x32d4:   85 c0                                 	test eax, eax
0x32d6:   74 33                                 	je 0x330b <.Llzma_auto_decode.1+0x6b>
0x32d8:   33 d2                                 	xor edx, edx
0x32da:   4c 8d 7c 24 0c                        	lea r15, [rsp + 0xc]
0x32df:   4c 89 fe                              	mov rsi, r15
0x32e2:   4c 89 e7                              	mov rdi, r12
0x32e5:   e8 96 ed ff ff                        	call 0x2080 <.Llzip_decode.0>
0x32ea:   48 8b d8                              	mov rbx, rax
0x32ed:   48 85 c0                              	test rax, rax
0x32f0:   74 19                                 	je 0x330b <.Llzma_auto_decode.1+0x6b>
0x32f2:   48 8b d0                              	mov rdx, rax
0x32f5:   4c 89 f6                              	mov rsi, r14
0x32f8:   4c 89 ef                              	mov rdi, r13
0x32fb:   e8 00 dd ff ff                        	call 0x1000 <.Lstream_encode.1>
0x3300:   48 85 c0                              	test rax, rax
0x3303:   75 08                                 	jne 0x330d <.Llzma_auto_decode.1+0x6d>
0x3305:   48 8d 53 01                           	lea rdx, [rbx + 1]
0x3309:   eb d4                                 	jmp 0x32df <.Llzma_auto_decode.1+0x3f>
0x330b:   33 c0                                 	xor eax, eax
0x330d:   48 83 c4 10                           	add rsp, 0x10
0x3311:   5b                                    	pop rbx
0x3312:   41 5c                                 	pop r12
0x3314:   41 5d                                 	pop r13
0x3316:   41 5e                                 	pop r14
0x3318:   41 5f                                 	pop r15
0x331a:   c3                                    	ret 
; section: .text.lzma_lzma_encoder_resea
; function: function_3320 at 0x3320 -- 0x3659
0x3320:   41 57                                 	push r15
0x3322:   31 c0                                 	xor eax, eax
0x3324:   49 89 d7                              	mov r15, rdx
0x3327:   41 56                                 	push r14
0x3329:   41 55                                 	push r13
0x332b:   49 89 fd                              	mov r13, rdi
0x332e:   41 54                                 	push r12
0x3330:   4d 89 c4                              	mov r12, r8
0x3333:   53                                    	push rbx
0x3334:   48 89 cb                              	mov rbx, rcx
0x3337:   b9 16 00 00 00                        	mov ecx, 0x16
0x333c:   48 81 ec e0 00 00 00                  	sub rsp, 0xe0
0x3343:   48 8d 7c 24 30                        	lea rdi, [rsp + 0x30]
0x3348:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x334d:   be e0 01 00 00                        	mov esi, 0x1e0
0x3352:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3354:   31 c0                                 	xor eax, eax
0x3356:   48 89 d9                              	mov rcx, rbx
0x3359:   4c 89 cf                              	mov rdi, r9
0x335c:   49 89 00                              	mov qword ptr [r8], rax
0x335f:   e8 3c ff ff ff                        	call 0x32a0 <.Llzma_auto_decode.1>
0x3364:   49 89 c6                              	mov r14, rax
0x3367:   48 85 c0                              	test rax, rax
0x336a:   48 8d 44 24 30                        	lea rax, [rsp + 0x30]
0x336f:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x3374:   75 40                                 	jne 0x33b6 <function_3320+0x96>
0x3376:   31 c0                                 	xor eax, eax
0x3378:   e9 cb 02 00 00                        	jmp 0x3648 <function_3320+0x328>
0x337d:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x3382:   48 89 da                              	mov rdx, rbx
0x3385:   4c 89 f6                              	mov rsi, r14
0x3388:   e8 73 cc ff ff                        	call 0 <.Lx86_code.part.0>
0x338d:   85 c0                                 	test eax, eax
0x338f:   0f 84 a2 02 00 00                     	je 0x3637 <function_3320+0x317>
0x3395:   8b 44 24 58                           	mov eax, dword ptr [rsp + 0x58]
0x3399:   89 c2                                 	mov edx, eax
0x339b:   83 e2 fd                              	and edx, 0xfffffffd
0x339e:   81 fa b1 00 00 00                     	cmp edx, 0xb1
0x33a4:   0f 85 f9 01 00 00                     	jne 0x35a3 <function_3320+0x283>
0x33aa:   80 7c 24 4d 03                        	cmp byte ptr [rsp + 0x4d], 3
0x33af:   74 0c                                 	je 0x33bd <function_3320+0x9d>
0x33b1:   4c 03 74 24 38                        	add r14, qword ptr [rsp + 0x38]
0x33b6:   49 39 de                              	cmp r14, rbx
0x33b9:   72 c2                                 	jb 0x337d <function_3320+0x5d>
0x33bb:   eb b9                                 	jmp 0x3376 <function_3320+0x56>
0x33bd:   8a 44 24 40                           	mov al, byte ptr [rsp + 0x40]
0x33c1:   89 c2                                 	mov edx, eax
0x33c3:   80 e2 20                              	and dl, 0x20
0x33c6:   74 07                                 	je 0x33cf <function_3320+0xaf>
0x33c8:   f6 44 24 4b 08                        	test byte ptr [rsp + 0x4b], 8
0x33cd:   75 e2                                 	jne 0x33b1 <function_3320+0x91>
0x33cf:   83 e0 40                              	and eax, 0x40
0x33d2:   66 f7 44 24 40 40 10                  	test word ptr [rsp + 0x40], 0x1040
0x33d9:   75 06                                 	jne 0x33e1 <function_3320+0xc1>
0x33db:   84 c0                                 	test al, al
0x33dd:   75 46                                 	jne 0x3425 <function_3320+0x105>
0x33df:   eb 67                                 	jmp 0x3448 <function_3320+0x128>
0x33e1:   84 c0                                 	test al, al
0x33e3:   74 1c                                 	je 0x3401 <function_3320+0xe1>
0x33e5:   44 8a 44 24 4e                        	mov r8b, byte ptr [rsp + 0x4e]
0x33ea:   8a 44 24 4f                           	mov al, byte ptr [rsp + 0x4f]
0x33ee:   84 d2                                 	test dl, dl
0x33f0:   74 4b                                 	je 0x343d <function_3320+0x11d>
0x33f2:   0f b6 54 24 4b                        	movzx edx, byte ptr [rsp + 0x4b]
0x33f7:   01 d2                                 	add edx, edx
0x33f9:   83 e2 08                              	and edx, 8
0x33fc:   41 09 d0                              	or r8d, edx
0x33ff:   eb 2f                                 	jmp 0x3430 <function_3320+0x110>
0x3401:   44 8a 44 24 41                        	mov r8b, byte ptr [rsp + 0x41]
0x3406:   41 80 e0 10                           	and r8b, 0x10
0x340a:   74 3f                                 	je 0x344b <function_3320+0x12b>
0x340c:   44 8a 44 24 50                        	mov r8b, byte ptr [rsp + 0x50]
0x3411:   84 d2                                 	test dl, dl
0x3413:   74 28                                 	je 0x343d <function_3320+0x11d>
0x3415:   0f b6 54 24 4b                        	movzx edx, byte ptr [rsp + 0x4b]
0x341a:   c1 e2 03                              	shl edx, 3
0x341d:   83 e2 08                              	and edx, 8
0x3420:   41 09 d0                              	or r8d, edx
0x3423:   eb 18                                 	jmp 0x343d <function_3320+0x11d>
0x3425:   8a 44 24 4f                           	mov al, byte ptr [rsp + 0x4f]
0x3429:   45 31 c0                              	xor r8d, r8d
0x342c:   84 d2                                 	test dl, dl
0x342e:   74 0d                                 	je 0x343d <function_3320+0x11d>
0x3430:   0f b6 54 24 4b                        	movzx edx, byte ptr [rsp + 0x4b]
0x3435:   c1 e2 03                              	shl edx, 3
0x3438:   83 e2 08                              	and edx, 8
0x343b:   09 d0                                 	or eax, edx
0x343d:   44 38 c0                              	cmp al, r8b
0x3440:   0f 85 6b ff ff ff                     	jne 0x33b1 <function_3320+0x91>
0x3446:   eb 03                                 	jmp 0x344b <function_3320+0x12b>
0x3448:   45 31 c0                              	xor r8d, r8d
0x344b:   31 c0                                 	xor eax, eax
0x344d:   b9 16 00 00 00                        	mov ecx, 0x16
0x3452:   48 8b 74 24 38                        	mov rsi, qword ptr [rsp + 0x38]
0x3457:   48 8d bc 24 88 00 00 00               	lea rdi, [rsp + 0x88]
0x345f:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3461:   48 8d 84 24 88 00 00 00               	lea rax, [rsp + 0x88]
0x3469:   48 03 74 24 30                        	add rsi, qword ptr [rsp + 0x30]
0x346e:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x3473:   48 39 de                              	cmp rsi, rbx
0x3476:   0f 83 35 ff ff ff                     	jae 0x33b1 <function_3320+0x91>
0x347c:   83 f9 05                              	cmp ecx, 5
0x347f:   0f 87 2c ff ff ff                     	ja 0x33b1 <function_3320+0x91>
0x3485:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x348a:   48 89 da                              	mov rdx, rbx
0x348d:   44 88 44 24 2f                        	mov byte ptr [rsp + 0x2f], r8b
0x3492:   89 4c 24 28                           	mov dword ptr [rsp + 0x28], ecx
0x3496:   48 89 74 24 20                        	mov qword ptr [rsp + 0x20], rsi
0x349b:   e8 60 cb ff ff                        	call 0 <.Lx86_code.part.0>
0x34a0:   85 c0                                 	test eax, eax
0x34a2:   0f 84 09 ff ff ff                     	je 0x33b1 <function_3320+0x91>
0x34a8:   8b 84 24 b0 00 00 00                  	mov eax, dword ptr [rsp + 0xb0]
0x34af:   48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0x34b4:   8b 4c 24 28                           	mov ecx, dword ptr [rsp + 0x28]
0x34b8:   44 8a 44 24 2f                        	mov r8b, byte ptr [rsp + 0x2f]
0x34bd:   3d 09 01 00 00                        	cmp eax, 0x109
0x34c2:   0f 85 c1 00 00 00                     	jne 0x3589 <function_3320+0x269>
0x34c8:   8b 84 24 a4 00 00 00                  	mov eax, dword ptr [rsp + 0xa4]
0x34cf:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x34d4:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x34d9:   0f 85 b5 00 00 00                     	jne 0x3594 <function_3320+0x274>
0x34df:   31 c0                                 	xor eax, eax
0x34e1:   66 f7 84 24 98 00 00 00 40 10         	test word ptr [rsp + 0x98], 0x1040
0x34eb:   74 4b                                 	je 0x3538 <function_3320+0x218>
0x34ed:   8a 94 24 98 00 00 00                  	mov dl, byte ptr [rsp + 0x98]
0x34f4:   f6 c2 40                              	test dl, 0x40
0x34f7:   74 18                                 	je 0x3511 <function_3320+0x1f1>
0x34f9:   80 e2 20                              	and dl, 0x20
0x34fc:   8a 84 24 a6 00 00 00                  	mov al, byte ptr [rsp + 0xa6]
0x3503:   74 33                                 	je 0x3538 <function_3320+0x218>
0x3505:   0f b6 94 24 a3 00 00 00               	movzx edx, byte ptr [rsp + 0xa3]
0x350d:   01 d2                                 	add edx, edx
0x350f:   eb 22                                 	jmp 0x3533 <function_3320+0x213>
0x3511:   8a 84 24 99 00 00 00                  	mov al, byte ptr [rsp + 0x99]
0x3518:   24 10                                 	and al, 0x10
0x351a:   74 1c                                 	je 0x3538 <function_3320+0x218>
0x351c:   80 e2 20                              	and dl, 0x20
0x351f:   8a 84 24 a8 00 00 00                  	mov al, byte ptr [rsp + 0xa8]
0x3526:   74 10                                 	je 0x3538 <function_3320+0x218>
0x3528:   0f b6 94 24 a3 00 00 00               	movzx edx, byte ptr [rsp + 0xa3]
0x3530:   c1 e2 03                              	shl edx, 3
0x3533:   83 e2 08                              	and edx, 8
0x3536:   09 d0                                 	or eax, edx
0x3538:   44 38 c0                              	cmp al, r8b
0x353b:   75 57                                 	jne 0x3594 <function_3320+0x274>
0x353d:   31 c0                                 	xor eax, eax
0x353f:   f6 84 24 99 00 00 00 01               	test byte ptr [rsp + 0x99], 1
0x3547:   74 18                                 	je 0x3561 <function_3320+0x241>
0x3549:   48 8b 84 24 b8 00 00 00               	mov rax, qword ptr [rsp + 0xb8]
0x3551:   48 03 84 24 88 00 00 00               	add rax, qword ptr [rsp + 0x88]
0x3559:   48 03 84 24 90 00 00 00               	add rax, qword ptr [rsp + 0x90]
0x3561:   48 8d 50 e8                           	lea rdx, [rax - 0x18]
0x3565:   4c 39 ea                              	cmp rdx, r13
0x3568:   41 0f 93 c2                           	setae r10b
0x356c:   48 83 f8 18                           	cmp rax, 0x18
0x3570:   40 0f 95 c7                           	setne dil
0x3574:   41 84 fa                              	test r10b, dil
0x3577:   74 1b                                 	je 0x3594 <function_3320+0x274>
0x3579:   48 83 c0 04                           	add rax, 4
0x357d:   48 39 44 24 08                        	cmp qword ptr [rsp + 8], rax
0x3582:   72 10                                 	jb 0x3594 <function_3320+0x274>
0x3584:   e9 b6 00 00 00                        	jmp 0x363f <function_3320+0x31f>
0x3589:   3d fe a5 00 00                        	cmp eax, 0xa5fe
0x358e:   0f 84 1d fe ff ff                     	je 0x33b1 <function_3320+0x91>
0x3594:   48 03 b4 24 90 00 00 00               	add rsi, qword ptr [rsp + 0x90]
0x359c:   ff c1                                 	inc ecx
0x359e:   e9 d0 fe ff ff                        	jmp 0x3473 <function_3320+0x153>
0x35a3:   3d 47 01 00 00                        	cmp eax, 0x147
0x35a8:   75 72                                 	jne 0x361c <function_3320+0x2fc>
0x35aa:   f6 44 24 4b 08                        	test byte ptr [rsp + 0x4b], 8
0x35af:   0f 85 fc fd ff ff                     	jne 0x33b1 <function_3320+0x91>
0x35b5:   8b 44 24 4c                           	mov eax, dword ptr [rsp + 0x4c]
0x35b9:   30 c0                                 	xor al, al
0x35bb:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x35c0:   0f 85 eb fd ff ff                     	jne 0x33b1 <function_3320+0x91>
0x35c6:   8a 54 24 41                           	mov dl, byte ptr [rsp + 0x41]
0x35ca:   f6 c2 08                              	test dl, 8
0x35cd:   0f 84 de fd ff ff                     	je 0x33b1 <function_3320+0x91>
0x35d3:   48 8b 44 24 70                        	mov rax, qword ptr [rsp + 0x70]
0x35d8:   48 85 c0                              	test rax, rax
0x35db:   0f 85 d0 fd ff ff                     	jne 0x33b1 <function_3320+0x91>
0x35e1:   80 e2 01                              	and dl, 1
0x35e4:   74 0f                                 	je 0x35f5 <function_3320+0x2d5>
0x35e6:   48 8b 44 24 60                        	mov rax, qword ptr [rsp + 0x60]
0x35eb:   48 03 44 24 30                        	add rax, qword ptr [rsp + 0x30]
0x35f0:   48 03 44 24 38                        	add rax, qword ptr [rsp + 0x38]
0x35f5:   48 8d 50 e8                           	lea rdx, [rax - 0x18]
0x35f9:   48 83 c0 04                           	add rax, 4
0x35fd:   48 39 44 24 08                        	cmp qword ptr [rsp + 8], rax
0x3602:   0f 82 a9 fd ff ff                     	jb 0x33b1 <function_3320+0x91>
0x3608:   49 39 d5                              	cmp r13, rdx
0x360b:   0f 87 a0 fd ff ff                     	ja 0x33b1 <function_3320+0x91>
0x3611:   48 85 d2                              	test rdx, rdx
0x3614:   0f 84 97 fd ff ff                     	je 0x33b1 <function_3320+0x91>
0x361a:   eb 23                                 	jmp 0x363f <function_3320+0x31f>
0x361c:   3d fe a5 00 00                        	cmp eax, 0xa5fe
0x3621:   0f 85 8a fd ff ff                     	jne 0x33b1 <function_3320+0x91>
0x3627:   4c 3b 7c 24 30                        	cmp r15, qword ptr [rsp + 0x30]
0x362c:   0f 84 7f fd ff ff                     	je 0x33b1 <function_3320+0x91>
0x3632:   e9 3f fd ff ff                        	jmp 0x3376 <function_3320+0x56>
0x3637:   49 ff c6                              	inc r14
0x363a:   e9 77 fd ff ff                        	jmp 0x33b6 <function_3320+0x96>
0x363f:   49 89 14 24                           	mov qword ptr [r12], rdx
0x3643:   b8 01 00 00 00                        	mov eax, 1
0x3648:   48 81 c4 e0 00 00 00                  	add rsp, 0xe0
0x364f:   5b                                    	pop rbx
0x3650:   41 5c                                 	pop r12
0x3652:   41 5d                                 	pop r13
0x3654:   41 5e                                 	pop r14
0x3656:   41 5f                                 	pop r15
0x3658:   c3                                    	ret 
; section: .text.lzma_bufcpa
; function: .Llzma_buf_cpy.0 at 0x3660 -- 0x3846
0x3660:   f3 0f 1e fa                           	endbr64 
0x3664:   41 57                                 	push r15
0x3666:   31 c0                                 	xor eax, eax
0x3668:   41 56                                 	push r14
0x366a:   41 55                                 	push r13
0x366c:   41 54                                 	push r12
0x366e:   53                                    	push rbx
0x366f:   48 81 ec 10 01 00 00                  	sub rsp, 0x110
0x3676:   49 89 01                              	mov qword ptr [r9], rax
0x3679:   4d 8b 78 08                           	mov r15, qword ptr [r8 + 8]
0x367d:   48 89 7c 24 18                        	mov qword ptr [rsp + 0x18], rdi
0x3682:   48 89 74 24 20                        	mov qword ptr [rsp + 0x20], rsi
0x3687:   48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x368c:   4d 85 ff                              	test r15, r15
0x368f:   0f 84 9e 01 00 00                     	je 0x3833 <.Llzma_buf_cpy.0+0x1d3>
0x3695:   31 c0                                 	xor eax, eax
0x3697:   48 8d bc 24 90 00 00 00               	lea rdi, [rsp + 0x90]
0x369f:   48 89 d3                              	mov rbx, rdx
0x36a2:   4d 89 cc                              	mov r12, r9
0x36a5:   b9 20 00 00 00                        	mov ecx, 0x20
0x36aa:   41 b6 ff                              	mov r14b, 0xff
0x36ad:   45 31 d2                              	xor r10d, r10d
0x36b0:   45 31 ed                              	xor r13d, r13d
0x36b3:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x36b5:   48 8d 7c 24 38                        	lea rdi, [rsp + 0x38]
0x36ba:   b9 16 00 00 00                        	mov ecx, 0x16
0x36bf:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x36c1:   48 8d 44 24 38                        	lea rax, [rsp + 0x38]
0x36c6:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x36cb:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x36d0:   48 39 c3                              	cmp rbx, rax
0x36d3:   0f 83 06 01 00 00                     	jae 0x37df <.Llzma_buf_cpy.0+0x17f>
0x36d9:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x36de:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x36e3:   4c 89 fa                              	mov rdx, r15
0x36e6:   48 89 df                              	mov rdi, rbx
0x36e9:   4c 89 54 24 28                        	mov qword ptr [rsp + 0x28], r10
0x36ee:   e8 7d d5 ff ff                        	call 0xc70 <.Llzma_optimum_normal.0>
0x36f3:   85 c0                                 	test eax, eax
0x36f5:   0f 84 e4 00 00 00                     	je 0x37df <.Llzma_buf_cpy.0+0x17f>
0x36fb:   48 8b 5c 24 40                        	mov rbx, qword ptr [rsp + 0x40]
0x3700:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x3705:   45 31 c0                              	xor r8d, r8d
0x3708:   b9 09 01 00 00                        	mov ecx, 0x109
0x370d:   48 03 5c 24 38                        	add rbx, qword ptr [rsp + 0x38]
0x3712:   48 8d 73 20                           	lea rsi, [rbx + 0x20]
0x3716:   48 89 df                              	mov rdi, rbx
0x3719:   e8 22 d9 ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x371e:   4c 8b 54 24 28                        	mov r10, qword ptr [rsp + 0x28]
0x3723:   85 c0                                 	test eax, eax
0x3725:   74 a4                                 	je 0x36cb <.Llzma_buf_cpy.0+0x6b>
0x3727:   66 f7 44 24 48 40 10                  	test word ptr [rsp + 0x48], 0x1040
0x372e:   74 38                                 	je 0x3768 <.Llzma_buf_cpy.0+0x108>
0x3730:   8a 44 24 48                           	mov al, byte ptr [rsp + 0x48]
0x3734:   a8 40                                 	test al, 0x40
0x3736:   74 12                                 	je 0x374a <.Llzma_buf_cpy.0+0xea>
0x3738:   44 8a 74 24 56                        	mov r14b, byte ptr [rsp + 0x56]
0x373d:   a8 20                                 	test al, 0x20
0x373f:   74 27                                 	je 0x3768 <.Llzma_buf_cpy.0+0x108>
0x3741:   0f b6 44 24 53                        	movzx eax, byte ptr [rsp + 0x53]
0x3746:   01 c0                                 	add eax, eax
0x3748:   eb 18                                 	jmp 0x3762 <.Llzma_buf_cpy.0+0x102>
0x374a:   f6 44 24 49 10                        	test byte ptr [rsp + 0x49], 0x10
0x374f:   74 2b                                 	je 0x377c <.Llzma_buf_cpy.0+0x11c>
0x3751:   44 8a 74 24 58                        	mov r14b, byte ptr [rsp + 0x58]
0x3756:   a8 20                                 	test al, 0x20
0x3758:   74 0e                                 	je 0x3768 <.Llzma_buf_cpy.0+0x108>
0x375a:   0f b6 44 24 53                        	movzx eax, byte ptr [rsp + 0x53]
0x375f:   c1 e0 03                              	shl eax, 3
0x3762:   83 e0 08                              	and eax, 8
0x3765:   41 09 c6                              	or r14d, eax
0x3768:   45 84 f6                              	test r14b, r14b
0x376b:   74 0f                                 	je 0x377c <.Llzma_buf_cpy.0+0x11c>
0x376d:   48 8b 5c 24 40                        	mov rbx, qword ptr [rsp + 0x40]
0x3772:   48 03 5c 24 38                        	add rbx, qword ptr [rsp + 0x38]
0x3777:   e9 4f ff ff ff                        	jmp 0x36cb <.Llzma_buf_cpy.0+0x6b>
0x377c:   f6 44 24 49 01                        	test byte ptr [rsp + 0x49], 1
0x3781:   74 1f                                 	je 0x37a2 <.Llzma_buf_cpy.0+0x142>
0x3783:   8b 44 24 54                           	mov eax, dword ptr [rsp + 0x54]
0x3787:   4c 8b 54 24 68                        	mov r10, qword ptr [rsp + 0x68]
0x378c:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x3791:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x3796:   75 0a                                 	jne 0x37a2 <.Llzma_buf_cpy.0+0x142>
0x3798:   4c 03 54 24 38                        	add r10, qword ptr [rsp + 0x38]
0x379d:   4c 03 54 24 40                        	add r10, qword ptr [rsp + 0x40]
0x37a2:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x37a7:   49 39 c2                              	cmp r10, rax
0x37aa:   72 21                                 	jb 0x37cd <.Llzma_buf_cpy.0+0x16d>
0x37ac:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x37b1:   49 39 c2                              	cmp r10, rax
0x37b4:   73 17                                 	jae 0x37cd <.Llzma_buf_cpy.0+0x16d>
0x37b6:   45 0f b6 dd                           	movzx r11d, r13b
0x37ba:   41 8d 45 01                           	lea eax, [r13 + 1]
0x37be:   4e 89 94 dc 90 00 00 00               	mov qword ptr [rsp + r11*8 + 0x90], r10
0x37c6:   3c 0f                                 	cmp al, 0xf
0x37c8:   77 18                                 	ja 0x37e2 <.Llzma_buf_cpy.0+0x182>
0x37ca:   41 89 c5                              	mov r13d, eax
0x37cd:   48 8b 5c 24 40                        	mov rbx, qword ptr [rsp + 0x40]
0x37d2:   45 31 f6                              	xor r14d, r14d
0x37d5:   48 03 5c 24 38                        	add rbx, qword ptr [rsp + 0x38]
0x37da:   e9 ec fe ff ff                        	jmp 0x36cb <.Llzma_buf_cpy.0+0x6b>
0x37df:   44 89 e8                              	mov eax, r13d
0x37e2:   31 c9                                 	xor ecx, ecx
0x37e4:   0f b6 c0                              	movzx eax, al
0x37e7:   48 8d bc 24 90 00 00 00               	lea rdi, [rsp + 0x90]
0x37ef:   39 c1                                 	cmp ecx, eax
0x37f1:   73 40                                 	jae 0x3833 <.Llzma_buf_cpy.0+0x1d3>
0x37f3:   4c 8b 0c cf                           	mov r9, qword ptr [rdi + rcx*8]
0x37f7:   31 d2                                 	xor edx, edx
0x37f9:   4c 8b 14 d7                           	mov r10, qword ptr [rdi + rdx*8]
0x37fd:   31 f6                                 	xor esi, esi
0x37ff:   4d 8d 5a f8                           	lea r11, [r10 - 8]
0x3803:   4d 39 d9                              	cmp r9, r11
0x3806:   75 18                                 	jne 0x3820 <.Llzma_buf_cpy.0+0x1c0>
0x3808:   48 8b 1c f7                           	mov rbx, qword ptr [rdi + rsi*8]
0x380c:   4c 8d 43 f8                           	lea r8, [rbx - 8]
0x3810:   4d 39 c2                              	cmp r10, r8
0x3813:   75 0b                                 	jne 0x3820 <.Llzma_buf_cpy.0+0x1c0>
0x3815:   4d 89 0c 24                           	mov qword ptr [r12], r9
0x3819:   b8 01 00 00 00                        	mov eax, 1
0x381e:   eb 15                                 	jmp 0x3835 <.Llzma_buf_cpy.0+0x1d5>
0x3820:   48 ff c6                              	inc rsi
0x3823:   39 c6                                 	cmp esi, eax
0x3825:   72 dc                                 	jb 0x3803 <.Llzma_buf_cpy.0+0x1a3>
0x3827:   48 ff c2                              	inc rdx
0x382a:   39 c2                                 	cmp edx, eax
0x382c:   72 cb                                 	jb 0x37f9 <.Llzma_buf_cpy.0+0x199>
0x382e:   48 ff c1                              	inc rcx
0x3831:   eb bc                                 	jmp 0x37ef <.Llzma_buf_cpy.0+0x18f>
0x3833:   31 c0                                 	xor eax, eax
0x3835:   48 81 c4 10 01 00 00                  	add rsp, 0x110
0x383c:   5b                                    	pop rbx
0x383d:   41 5c                                 	pop r12
0x383f:   41 5d                                 	pop r13
0x3841:   41 5e                                 	pop r14
0x3843:   41 5f                                 	pop r15
0x3845:   c3                                    	ret 
; section: .text.lzma_check_finisa
; function: .Llzma_check_finish.0 at 0x3850 -- 0x38e7
0x3850:   f3 0f 1e fa                           	endbr64 
0x3854:   41 56                                 	push r14
0x3856:   41 55                                 	push r13
0x3858:   41 54                                 	push r12
0x385a:   45 31 e4                              	xor r12d, r12d
0x385d:   53                                    	push rbx
0x385e:   48 83 ec 68                           	sub rsp, 0x68
0x3862:   4c 8b 72 28                           	mov r14, qword ptr [rdx + 0x28]
0x3866:   4d 85 f6                              	test r14, r14
0x3869:   74 6d                                 	je 0x38d8 <.Llzma_check_finish.0+0x88>
0x386b:   4c 8b 6a 30                           	mov r13, qword ptr [rdx + 0x30]
0x386f:   48 89 f9                              	mov rcx, rdi
0x3872:   31 d2                                 	xor edx, edx
0x3874:   48 89 fb                              	mov rbx, rdi
0x3877:   4c 89 f7                              	mov rdi, r14
0x387a:   45 31 e4                              	xor r12d, r12d
0x387d:   4c 89 ee                              	mov rsi, r13
0x3880:   e8 7b d8 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x3885:   48 8d 7c 24 08                        	lea rdi, [rsp + 8]
0x388a:   b9 16 00 00 00                        	mov ecx, 0x16
0x388f:   4c 89 ee                              	mov rsi, r13
0x3892:   85 c0                                 	test eax, eax
0x3894:   48 8d 54 24 08                        	lea rdx, [rsp + 8]
0x3899:   41 0f 95 c4                           	setne r12b
0x389d:   31 c0                                 	xor eax, eax
0x389f:   48 83 c3 10                           	add rbx, 0x10
0x38a3:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x38a5:   48 89 d9                              	mov rcx, rbx
0x38a8:   4c 89 f7                              	mov rdi, r14
0x38ab:   e8 50 d8 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x38b0:   85 c0                                 	test eax, eax
0x38b2:   74 24                                 	je 0x38d8 <.Llzma_check_finish.0+0x88>
0x38b4:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x38b9:   31 d2                                 	xor edx, edx
0x38bb:   48 03 7c 24 08                        	add rdi, qword ptr [rsp + 8]
0x38c0:   48 89 d9                              	mov rcx, rbx
0x38c3:   4c 89 ee                              	mov rsi, r13
0x38c6:   e8 35 d8 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x38cb:   85 c0                                 	test eax, eax
0x38cd:   75 05                                 	jne 0x38d4 <.Llzma_check_finish.0+0x84>
0x38cf:   41 ff c4                              	inc r12d
0x38d2:   eb 04                                 	jmp 0x38d8 <.Llzma_check_finish.0+0x88>
0x38d4:   41 83 c4 02                           	add r12d, 2
0x38d8:   48 83 c4 68                           	add rsp, 0x68
0x38dc:   44 89 e0                              	mov eax, r12d
0x38df:   5b                                    	pop rbx
0x38e0:   41 5c                                 	pop r12
0x38e2:   41 5d                                 	pop r13
0x38e4:   41 5e                                 	pop r14
0x38e6:   c3                                    	ret 
; section: .text.lzma_decoder_inia
; function: .Llzma_decoder_init.1 at 0x38f0 -- 0x3964
0x38f0:   f3 0f 1e fa                           	endbr64 
0x38f4:   41 56                                 	push r14
0x38f6:   41 55                                 	push r13
0x38f8:   41 54                                 	push r12
0x38fa:   45 31 e4                              	xor r12d, r12d
0x38fd:   53                                    	push rbx
0x38fe:   51                                    	push rcx
0x38ff:   4c 8b 6a 48                           	mov r13, qword ptr [rdx + 0x48]
0x3903:   4d 85 ed                              	test r13, r13
0x3906:   74 50                                 	je 0x3958 <.Llzma_decoder_init.1+0x68>
0x3908:   4c 8b 72 50                           	mov r14, qword ptr [rdx + 0x50]
0x390c:   48 89 fb                              	mov rbx, rdi
0x390f:   48 89 f9                              	mov rcx, rdi
0x3912:   31 d2                                 	xor edx, edx
0x3914:   4c 89 ef                              	mov rdi, r13
0x3917:   45 31 e4                              	xor r12d, r12d
0x391a:   4c 89 f6                              	mov rsi, r14
0x391d:   e8 de d7 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x3922:   48 8d 4b 10                           	lea rcx, [rbx + 0x10]
0x3926:   4c 89 f6                              	mov rsi, r14
0x3929:   4c 89 ef                              	mov rdi, r13
0x392c:   85 c0                                 	test eax, eax
0x392e:   41 0f 95 c4                           	setne r12b
0x3932:   31 d2                                 	xor edx, edx
0x3934:   e8 c7 d7 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x3939:   48 8d 4b 08                           	lea rcx, [rbx + 8]
0x393d:   4c 89 f6                              	mov rsi, r14
0x3940:   4c 89 ef                              	mov rdi, r13
0x3943:   83 f8 01                              	cmp eax, 1
0x3946:   41 83 dc ff                           	sbb r12d, -1
0x394a:   31 d2                                 	xor edx, edx
0x394c:   e8 af d7 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x3951:   83 f8 01                              	cmp eax, 1
0x3954:   41 83 dc ff                           	sbb r12d, -1
0x3958:   5a                                    	pop rdx
0x3959:   44 89 e0                              	mov eax, r12d
0x395c:   5b                                    	pop rbx
0x395d:   41 5c                                 	pop r12
0x395f:   41 5d                                 	pop r13
0x3961:   41 5e                                 	pop r14
0x3963:   c3                                    	ret 
; section: .text.lzma_delta_coder_inia
; function: .Llzma_delta_coder_init.1 at 0x3970 -- 0x399e
0x3970:   f3 0f 1e fa                           	endbr64 
0x3974:   48 89 f9                              	mov rcx, rdi
0x3977:   48 8b 7a 68                           	mov rdi, qword ptr [rdx + 0x68]
0x397b:   48 85 ff                              	test rdi, rdi
0x397e:   74 1b                                 	je 0x399b <.Llzma_delta_coder_init.1+0x2b>
0x3980:   56                                    	push rsi
0x3981:   48 8b 72 70                           	mov rsi, qword ptr [rdx + 0x70]
0x3985:   31 d2                                 	xor edx, edx
0x3987:   e8 74 d7 ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x398c:   85 c0                                 	test eax, eax
0x398e:   75 04                                 	jne 0x3994 <.Llzma_delta_coder_init.1+0x24>
0x3990:   31 c0                                 	xor eax, eax
0x3992:   eb 05                                 	jmp 0x3999 <.Llzma_delta_coder_init.1+0x29>
0x3994:   b8 03 00 00 00                        	mov eax, 3
0x3999:   5a                                    	pop rdx
0x399a:   c3                                    	ret 
0x399b:   31 c0                                 	xor eax, eax
0x399d:   c3                                    	ret 
; section: .text.lzma_encoder_inia
; function: .Llzma_encoder_init.0 at 0x39a0 -- 0x39fa
0x39a0:   f3 0f 1e fa                           	endbr64 
0x39a4:   48 89 f0                              	mov rax, rsi
0x39a7:   40 80 ff 2d                           	cmp dil, 0x2d
0x39ab:   75 4a                                 	jne 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39ad:   0f b7 10                              	movzx edx, word ptr [rax]
0x39b0:   89 d1                                 	mov ecx, edx
0x39b2:   89 d6                                 	mov esi, edx
0x39b4:   c1 e2 08                              	shl edx, 8
0x39b7:   30 c9                                 	xor cl, cl
0x39b9:   66 81 f9 00 64                        	cmp cx, 0x6400
0x39be:   74 39                                 	je 0x39f9 <.Llzma_encoder_init.0+0x59>
0x39c0:   66 81 fa 00 64                        	cmp dx, 0x6400
0x39c5:   74 32                                 	je 0x39f9 <.Llzma_encoder_init.0+0x59>
0x39c7:   66 f7 c6 00 df                        	test si, 0xdf00
0x39cc:   74 29                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39ce:   66 81 f9 00 09                        	cmp cx, 0x900
0x39d3:   74 22                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39d5:   66 81 f9 00 3d                        	cmp cx, 0x3d00
0x39da:   74 1b                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39dc:   66 f7 c2 00 df                        	test dx, 0xdf00
0x39e1:   74 14                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39e3:   66 81 fa 00 3d                        	cmp dx, 0x3d00
0x39e8:   74 0d                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39ea:   66 81 fa 00 09                        	cmp dx, 0x900
0x39ef:   74 06                                 	je 0x39f7 <.Llzma_encoder_init.0+0x57>
0x39f1:   48 83 c0 02                           	add rax, 2
0x39f5:   eb b6                                 	jmp 0x39ad <.Llzma_encoder_init.0+0xd>
0x39f7:   31 c0                                 	xor eax, eax
0x39f9:   c3                                    	ret 
; section: .text.lzma_file_info_decodea
; function: function_3a00 at 0x3a00 -- 0x3b5f
0x3a00:   55                                    	push rbp
0x3a01:   48 89 e5                              	mov rbp, rsp
0x3a04:   41 57                                 	push r15
0x3a06:   41 56                                 	push r14
0x3a08:   41 55                                 	push r13
0x3a0a:   41 54                                 	push r12
0x3a0c:   53                                    	push rbx
0x3a0d:   48 83 ec 28                           	sub rsp, 0x28
0x3a11:   48 89 7d b8                           	mov qword ptr [rbp - 0x48], rdi
0x3a15:   48 39 f5                              	cmp rbp, rsi
0x3a18:   0f 83 30 01 00 00                     	jae 0x3b4e <function_3a00+0x14e>
0x3a1e:   48 89 f0                              	mov rax, rsi
0x3a21:   48 89 f3                              	mov rbx, rsi
0x3a24:   48 29 e8                              	sub rax, rbp
0x3a27:   48 3d 00 20 00 00                     	cmp rax, 0x2000
0x3a2d:   0f 87 1b 01 00 00                     	ja 0x3b4e <function_3a00+0x14e>
0x3a33:   4c 8b 26                              	mov r12, qword ptr [rsi]
0x3a36:   49 8d 44 24 ff                        	lea rax, [r12 - 1]
0x3a3b:   48 83 f8 1f                           	cmp rax, 0x1f
0x3a3f:   0f 87 09 01 00 00                     	ja 0x3b4e <function_3a00+0x14e>
0x3a45:   48 8b 7e 08                           	mov rdi, qword ptr [rsi + 8]
0x3a49:   48 39 fe                              	cmp rsi, rdi
0x3a4c:   0f 83 fc 00 00 00                     	jae 0x3b4e <function_3a00+0x14e>
0x3a52:   48 85 ff                              	test rdi, rdi
0x3a55:   0f 84 f3 00 00 00                     	je 0x3b4e <function_3a00+0x14e>
0x3a5b:   48 89 f8                              	mov rax, rdi
0x3a5e:   48 29 f0                              	sub rax, rsi
0x3a61:   48 3d 00 40 00 00                     	cmp rax, 0x4000
0x3a67:   0f 87 e1 00 00 00                     	ja 0x3b4e <function_3a00+0x14e>
0x3a6d:   31 f6                                 	xor esi, esi
0x3a6f:   e8 2c 6e 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x3a74:   41 b8 01 00 00 00                     	mov r8d, 1
0x3a7a:   3d 08 01 00 00                        	cmp eax, 0x108
0x3a7f:   0f 85 c9 00 00 00                     	jne 0x3b4e <function_3a00+0x14e>
0x3a85:   4d 39 e0                              	cmp r8, r12
0x3a88:   4d 8d 40 01                           	lea r8, [r8 + 1]
0x3a8c:   74 3a                                 	je 0x3ac8 <function_3a00+0xc8>
0x3a8e:   4a 8b 34 c3                           	mov rsi, qword ptr [rbx + r8*8]
0x3a92:   48 39 f3                              	cmp rbx, rsi
0x3a95:   0f 83 b3 00 00 00                     	jae 0x3b4e <function_3a00+0x14e>
0x3a9b:   48 85 f6                              	test rsi, rsi
0x3a9e:   0f 84 aa 00 00 00                     	je 0x3b4e <function_3a00+0x14e>
0x3aa4:   48 89 f0                              	mov rax, rsi
0x3aa7:   48 29 d8                              	sub rax, rbx
0x3aaa:   48 3d 00 40 00 00                     	cmp rax, 0x4000
0x3ab0:   0f 87 98 00 00 00                     	ja 0x3b4e <function_3a00+0x14e>
0x3ab6:   0f b7 3e                              	movzx edi, word ptr [rsi]
0x3ab9:   e8 e2 fe ff ff                        	call 0x39a0 <.Llzma_encoder_init.0>
0x3abe:   48 85 c0                              	test rax, rax
0x3ac1:   74 c2                                 	je 0x3a85 <function_3a00+0x85>
0x3ac3:   e9 86 00 00 00                        	jmp 0x3b4e <function_3a00+0x14e>
0x3ac8:   4a 83 3c c3 00                        	cmp qword ptr [rbx + r8*8], 0
0x3acd:   4a 8d 04 c5 00 00 00 00               	lea rax, [r8*8]
0x3ad5:   75 77                                 	jne 0x3b4e <function_3a00+0x14e>
0x3ad7:   4c 8d 64 03 08                        	lea r12, [rbx + rax + 8]
0x3adc:   4c 8d 75 c8                           	lea r14, [rbp - 0x38]
0x3ae0:   4d 8b 2c 24                           	mov r13, qword ptr [r12]
0x3ae4:   4d 85 ed                              	test r13, r13
0x3ae7:   74 65                                 	je 0x3b4e <function_3a00+0x14e>
0x3ae9:   4c 39 eb                              	cmp rbx, r13
0x3aec:   73 0e                                 	jae 0x3afc <function_3a00+0xfc>
0x3aee:   4c 89 e8                              	mov rax, r13
0x3af1:   48 29 d8                              	sub rax, rbx
0x3af4:   48 3d 00 40 00 00                     	cmp rax, 0x4000
0x3afa:   76 31                                 	jbe 0x3b2d <function_3a00+0x12d>
0x3afc:   48 8b 7d b8                           	mov rdi, qword ptr [rbp - 0x48]
0x3b00:   31 c0                                 	xor eax, eax
0x3b02:   ba 01 00 00 00                        	mov edx, 1
0x3b07:   4c 89 f6                              	mov rsi, r14
0x3b0a:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0x3b0e:   4d 8d 7d 2c                           	lea r15, [r13 + 0x2c]
0x3b12:   e8 19 e6 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x3b17:   48 85 c0                              	test rax, rax
0x3b1a:   74 32                                 	je 0x3b4e <function_3a00+0x14e>
0x3b1c:   48 8b 55 c8                           	mov rdx, qword ptr [rbp - 0x38]
0x3b20:   48 01 c2                              	add rdx, rax
0x3b23:   49 39 d7                              	cmp r15, rdx
0x3b26:   77 26                                 	ja 0x3b4e <function_3a00+0x14e>
0x3b28:   49 39 c5                              	cmp r13, rax
0x3b2b:   72 21                                 	jb 0x3b4e <function_3a00+0x14e>
0x3b2d:   49 8b 3c 24                           	mov rdi, qword ptr [r12]
0x3b31:   31 f6                                 	xor esi, esi
0x3b33:   e8 68 6d 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x3b38:   85 c0                                 	test eax, eax
0x3b3a:   75 12                                 	jne 0x3b4e <function_3a00+0x14e>
0x3b3c:   49 83 c4 08                           	add r12, 8
0x3b40:   49 83 3c 24 00                        	cmp qword ptr [r12], 0
0x3b45:   75 99                                 	jne 0x3ae0 <function_3a00+0xe0>
0x3b47:   b8 01 00 00 00                        	mov eax, 1
0x3b4c:   eb 02                                 	jmp 0x3b50 <function_3a00+0x150>
0x3b4e:   31 c0                                 	xor eax, eax
0x3b50:   48 83 c4 28                           	add rsp, 0x28
0x3b54:   5b                                    	pop rbx
0x3b55:   41 5c                                 	pop r12
0x3b57:   41 5d                                 	pop r13
0x3b59:   41 5e                                 	pop r14
0x3b5b:   41 5f                                 	pop r15
0x3b5d:   5d                                    	pop rbp
0x3b5e:   c3                                    	ret 
; data inside code section at 0x3b5f -- 0x3b60
0x3b5f:   90                                                 |.               |
; function: function_3b60 at 0x3b60 -- 0x3cba
0x3b60:   41 57                                 	push r15
0x3b62:   0f 57 c0                              	xorps xmm0, xmm0
0x3b65:   31 c0                                 	xor eax, eax
0x3b67:   41 56                                 	push r14
0x3b69:   41 55                                 	push r13
0x3b6b:   41 54                                 	push r12
0x3b6d:   55                                    	push rbp
0x3b6e:   48 89 fd                              	mov rbp, rdi
0x3b71:   53                                    	push rbx
0x3b72:   48 89 cb                              	mov rbx, rcx
0x3b75:   b9 86 01 00 00                        	mov ecx, 0x186
0x3b7a:   48 81 ec 88 06 00 00                  	sub rsp, 0x688
0x3b81:   48 8d 7c 24 68                        	lea rdi, [rsp + 0x68]
0x3b86:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x3b8b:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3b8d:   0f 11 44 24 58                        	movups xmmword ptr [rsp + 0x58], xmm0
0x3b92:   48 85 ed                              	test rbp, rbp
0x3b95:   74 05                                 	je 0x3b9c <function_3b60+0x3c>
0x3b97:   48 85 db                              	test rbx, rbx
0x3b9a:   75 07                                 	jne 0x3ba3 <function_3b60+0x43>
0x3b9c:   31 c0                                 	xor eax, eax
0x3b9e:   e9 05 01 00 00                        	jmp 0x3ca8 <function_3b60+0x148>
0x3ba3:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x3ba7:   48 85 c0                              	test rax, rax
0x3baa:   74 f0                                 	je 0x3b9c <function_3b60+0x3c>
0x3bac:   4c 8b 40 30                           	mov r8, qword ptr [rax + 0x30]
0x3bb0:   4d 85 c0                              	test r8, r8
0x3bb3:   74 e7                                 	je 0x3b9c <function_3b60+0x3c>
0x3bb5:   48 83 78 38 00                        	cmp qword ptr [rax + 0x38], 0
0x3bba:   74 e0                                 	je 0x3b9c <function_3b60+0x3c>
0x3bbc:   45 31 c9                              	xor r9d, r9d
0x3bbf:   48 8d 74 24 18                        	lea rsi, [rsp + 0x18]
0x3bc4:   48 8d 4c 24 28                        	lea rcx, [rsp + 0x28]
0x3bc9:   48 89 ef                              	mov rdi, rbp
0x3bcc:   4c 89 4c 24 18                        	mov qword ptr [rsp + 0x18], r9
0x3bd1:   49 89 d6                              	mov r14, rdx
0x3bd4:   48 8d 54 24 20                        	lea rdx, [rsp + 0x20]
0x3bd9:   4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x3bde:   4c 89 4c 24 28                        	mov qword ptr [rsp + 0x28], r9
0x3be3:   41 ff d0                              	call r8
0x3be6:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x3bea:   48 89 ef                              	mov rdi, rbp
0x3bed:   ff 50 38                              	call qword ptr [rax + 0x38]
0x3bf0:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x3bf5:   48 85 f6                              	test rsi, rsi
0x3bf8:   74 a2                                 	je 0x3b9c <function_3b60+0x3c>
0x3bfa:   48 8b 4c 24 20                        	mov rcx, qword ptr [rsp + 0x20]
0x3bff:   48 85 c9                              	test rcx, rcx
0x3c02:   74 98                                 	je 0x3b9c <function_3b60+0x3c>
0x3c04:   48 8b 54 24 28                        	mov rdx, qword ptr [rsp + 0x28]
0x3c09:   48 85 d2                              	test rdx, rdx
0x3c0c:   74 8e                                 	je 0x3b9c <function_3b60+0x3c>
0x3c0e:   48 85 c0                              	test rax, rax
0x3c11:   74 89                                 	je 0x3b9c <function_3b60+0x3c>
0x3c13:   31 ff                                 	xor edi, edi
0x3c15:   48 83 7b 08 00                        	cmp qword ptr [rbx + 8], 0
0x3c1a:   48 89 74 24 38                        	mov qword ptr [rsp + 0x38], rsi
0x3c1f:   48 89 7c 24 30                        	mov qword ptr [rsp + 0x30], rdi
0x3c24:   48 89 4c 24 40                        	mov qword ptr [rsp + 0x40], rcx
0x3c29:   48 89 54 24 48                        	mov qword ptr [rsp + 0x48], rdx
0x3c2e:   48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x3c33:   0f 84 63 ff ff ff                     	je 0x3b9c <function_3b60+0x3c>
0x3c39:   45 31 e4                              	xor r12d, r12d
0x3c3c:   31 ed                                 	xor ebp, ebp
0x3c3e:   4c 8d 7c 24 30                        	lea r15, [rsp + 0x30]
0x3c43:   be 28 06 00 00                        	mov esi, 0x628
0x3c48:   4c 8d 6c 24 58                        	lea r13, [rsp + 0x58]
0x3c4d:   4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x3c51:   4c 89 fa                              	mov rdx, r15
0x3c54:   4a 8b 4c e4 38                        	mov rcx, qword ptr [rsp + r12*8 + 0x38]
0x3c59:   48 29 ee                              	sub rsi, rbp
0x3c5c:   49 8d 7c 2d 00                        	lea rdi, [r13 + rbp]
0x3c61:   e8 da 36 00 00                        	call 0x7340 <function_7340>
0x3c66:   85 c0                                 	test eax, eax
0x3c68:   0f 84 2e ff ff ff                     	je 0x3b9c <function_3b60+0x3c>
0x3c6e:   48 03 6c 24 30                        	add rbp, qword ptr [rsp + 0x30]
0x3c73:   48 81 fd 28 06 00 00                  	cmp rbp, 0x628
0x3c7a:   0f 87 1c ff ff ff                     	ja 0x3b9c <function_3b60+0x3c>
0x3c80:   49 ff c4                              	inc r12
0x3c83:   49 83 fc 04                           	cmp r12, 4
0x3c87:   75 ba                                 	jne 0x3c43 <function_3b60+0xe3>
0x3c89:   4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x3c8d:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x3c92:   4c 89 f1                              	mov rcx, r14
0x3c95:   48 89 ee                              	mov rsi, rbp
0x3c98:   4c 89 ef                              	mov rdi, r13
0x3c9b:   e8 30 36 00 00                        	call 0x72d0 <function_72d0>
0x3ca0:   85 c0                                 	test eax, eax
0x3ca2:   0f 95 c0                              	setne al
0x3ca5:   0f b6 c0                              	movzx eax, al
0x3ca8:   48 81 c4 88 06 00 00                  	add rsp, 0x688
0x3caf:   5b                                    	pop rbx
0x3cb0:   5d                                    	pop rbp
0x3cb1:   41 5c                                 	pop r12
0x3cb3:   41 5d                                 	pop r13
0x3cb5:   41 5e                                 	pop r14
0x3cb7:   41 5f                                 	pop r15
0x3cb9:   c3                                    	ret 
; section: .text.lzma_filter_decoder_is_supportea
; function: .Llzma_filter_decoder_is_supported.part.0 at 0x3cc0 -- 0x3d2e
0x3cc0:   f3 0f 1e fa                           	endbr64 
0x3cc4:   41 54                                 	push r12
0x3cc6:   53                                    	push rbx
0x3cc7:   48 89 fb                              	mov rbx, rdi
0x3cca:   51                                    	push rcx
0x3ccb:   48 8b 07                              	mov rax, qword ptr [rdi]
0x3cce:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x3cd2:   48 8b 70 08                           	mov rsi, qword ptr [rax + 8]
0x3cd6:   e8 d5 d6 ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x3cdb:   85 c0                                 	test eax, eax
0x3cdd:   75 04                                 	jne 0x3ce3 <.Llzma_filter_decoder_is_supported.part.0+0x23>
0x3cdf:   31 c0                                 	xor eax, eax
0x3ce1:   eb 46                                 	jmp 0x3d29 <.Llzma_filter_decoder_is_supported.part.0+0x69>
0x3ce3:   48 8b 03                              	mov rax, qword ptr [rbx]
0x3ce6:   ba c0 08 00 00                        	mov edx, 0x8c0
0x3ceb:   be b0 02 00 00                        	mov esi, 0x2b0 ; "   "
0x3cf0:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x3cf4:   e8 67 db ff ff                        	call 0x1860 <.Lcrc_init.0>
0x3cf9:   48 85 c0                              	test rax, rax
0x3cfc:   74 e1                                 	je 0x3cdf <.Llzma_filter_decoder_is_supported.part.0+0x1f>
0x3cfe:   48 8b 13                              	mov rdx, qword ptr [rbx]
0x3d01:   4c 8b 60 08                           	mov r12, qword ptr [rax + 8]
0x3d05:   48 8b 7a 08                           	mov rdi, qword ptr [rdx + 8]
0x3d09:   4c 03 27                              	add r12, qword ptr [rdi]
0x3d0c:   49 8b 34 24                           	mov rsi, qword ptr [r12]
0x3d10:   e8 eb fc ff ff                        	call 0x3a00 <function_3a00>
0x3d15:   85 c0                                 	test eax, eax
0x3d17:   74 c6                                 	je 0x3cdf <.Llzma_filter_decoder_is_supported.part.0+0x1f>
0x3d19:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0x3d1d:   49 8b 14 24                           	mov rdx, qword ptr [r12]
0x3d21:   48 89 10                              	mov qword ptr [rax], rdx
0x3d24:   b8 01 00 00 00                        	mov eax, 1
0x3d29:   5a                                    	pop rdx
0x3d2a:   5b                                    	pop rbx
0x3d2b:   41 5c                                 	pop r12
0x3d2d:   c3                                    	ret 
; section: .text.lzma_lzma2_encoder_memusaga
; function: .Llzma_lzma2_encoder_memusage.0 at 0x3d30 -- 0x3d8a
0x3d30:   f3 0f 1e fa                           	endbr64 
0x3d34:   48 85 ff                              	test rdi, rdi
0x3d37:   74 4e                                 	je 0x3d87 <.Llzma_lzma2_encoder_memusage.0+0x57>
0x3d39:   41 57                                 	push r15
0x3d3b:   49 89 cf                              	mov r15, rcx
0x3d3e:   41 56                                 	push r14
0x3d40:   49 89 d6                              	mov r14, rdx
0x3d43:   41 55                                 	push r13
0x3d45:   49 89 f5                              	mov r13, rsi
0x3d48:   41 54                                 	push r12
0x3d4a:   49 89 fc                              	mov r12, rdi
0x3d4d:   53                                    	push rbx
0x3d4e:   e8 1d fc ff ff                        	call 0x3970 <.Llzma_delta_coder_init.1>
0x3d53:   4c 89 f9                              	mov rcx, r15
0x3d56:   4c 89 f2                              	mov rdx, r14
0x3d59:   4c 89 ee                              	mov rsi, r13
0x3d5c:   4c 89 e7                              	mov rdi, r12
0x3d5f:   89 c3                                 	mov ebx, eax
0x3d61:   e8 8a fb ff ff                        	call 0x38f0 <.Llzma_decoder_init.1>
0x3d66:   4c 89 f9                              	mov rcx, r15
0x3d69:   4c 89 f2                              	mov rdx, r14
0x3d6c:   4c 89 ee                              	mov rsi, r13
0x3d6f:   01 c3                                 	add ebx, eax
0x3d71:   4c 89 e7                              	mov rdi, r12
0x3d74:   e8 d7 fa ff ff                        	call 0x3850 <.Llzma_check_finish.0>
0x3d79:   01 db                                 	add ebx, ebx
0x3d7b:   01 d8                                 	add eax, ebx
0x3d7d:   5b                                    	pop rbx
0x3d7e:   41 5c                                 	pop r12
0x3d80:   41 5d                                 	pop r13
0x3d82:   41 5e                                 	pop r14
0x3d84:   41 5f                                 	pop r15
0x3d86:   c3                                    	ret 
0x3d87:   31 c0                                 	xor eax, eax
0x3d89:   c3                                    	ret 
; section: .text.lzma_mf_bt4_fina
; function: .Llzma_mf_bt4_find.0 at 0x3d90 -- 0x3f3c
0x3d90:   f3 0f 1e fa                           	endbr64 
0x3d94:   41 57                                 	push r15
0x3d96:   31 c9                                 	xor ecx, ecx
0x3d98:   41 56                                 	push r14
0x3d9a:   49 89 f6                              	mov r14, rsi
0x3d9d:   be 14 00 00 00                        	mov esi, 0x14
0x3da2:   41 55                                 	push r13
0x3da4:   41 54                                 	push r12
0x3da6:   49 89 d4                              	mov r12, rdx
0x3da9:   ba 0f 00 00 00                        	mov edx, 0xf
0x3dae:   53                                    	push rbx
0x3daf:   48 89 fb                              	mov rbx, rdi
0x3db2:   bf da 00 00 00                        	mov edi, 0xda
0x3db7:   48 81 ec c0 00 00 00                  	sub rsp, 0xc0
0x3dbe:   e8 1d 6e 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x3dc3:   85 c0                                 	test eax, eax
0x3dc5:   75 07                                 	jne 0x3dce <.Llzma_mf_bt4_find.0+0x3e>
0x3dc7:   33 c0                                 	xor eax, eax
0x3dc9:   e9 5d 01 00 00                        	jmp 0x3f2b <.Llzma_mf_bt4_find.0+0x19b>
0x3dce:   49 8b 44 24 20                        	mov rax, qword ptr [r12 + 0x20]
0x3dd3:   33 d2                                 	xor edx, edx
0x3dd5:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x3dda:   48 83 b8 a8 00 00 00 00               	cmp qword ptr [rax + 0xa8], 0
0x3de2:   74 e3                                 	je 0x3dc7 <.Llzma_mf_bt4_find.0+0x37>
0x3de4:   31 c0                                 	xor eax, eax
0x3de6:   48 8d 74 24 18                        	lea rsi, [rsp + 0x18]
0x3deb:   31 d2                                 	xor edx, edx
0x3ded:   48 89 df                              	mov rdi, rbx
0x3df0:   49 89 44 24 48                        	mov qword ptr [r12 + 0x48], rax
0x3df5:   e8 36 e3 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x3dfa:   49 89 c7                              	mov r15, rax
0x3dfd:   48 85 c0                              	test rax, rax
0x3e00:   74 c5                                 	je 0x3dc7 <.Llzma_mf_bt4_find.0+0x37>
0x3e02:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x3e07:   48 8d 7c 24 70                        	lea rdi, [rsp + 0x70]
0x3e0c:   b9 14 00 00 00                        	mov ecx, 0x14
0x3e11:   33 db                                 	xor ebx, ebx
0x3e13:   4c 8d 6c 24 70                        	lea r13, [rsp + 0x70]
0x3e18:   4c 8d 54 24 20                        	lea r10, [rsp + 0x20]
0x3e1d:   4c 01 f8                              	add rax, r15
0x3e20:   48 89 04 24                           	mov qword ptr [rsp], rax
0x3e24:   48 b8 04 00 00 00 05 00 00 00         	movabs rax, 0x500000004
0x3e2e:   48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x3e33:   48 b8 06 00 00 00 07 00 00 00         	movabs rax, 0x700000006
0x3e3d:   48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x3e42:   48 b8 08 00 00 00 09 00 00 00         	movabs rax, 0x900000008
0x3e4c:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x3e51:   48 b8 0a 00 00 00 0b 00 00 00         	movabs rax, 0xb0000000a
0x3e5b:   48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0x3e60:   48 b8 0c 00 00 00 0d 00 00 00         	movabs rax, 0xd0000000c
0x3e6a:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x3e6f:   31 c0                                 	xor eax, eax
0x3e71:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3e73:   41 8b 04 9a                           	mov eax, dword ptr [r10 + rbx*4]
0x3e77:   48 c1 e0 05                           	shl rax, 5
0x3e7b:   4c 01 f0                              	add rax, r14
0x3e7e:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x3e82:   48 85 ff                              	test rdi, rdi
0x3e85:   74 22                                 	je 0x3ea9 <.Llzma_mf_bt4_find.0+0x119>
0x3e87:   48 8b 70 10                           	mov rsi, qword ptr [rax + 0x10]
0x3e8b:   48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0x3e8f:   4d 89 e1                              	mov r9, r12
0x3e92:   4d 8d 44 dd 00                        	lea r8, [r13 + rbx*8]
0x3e97:   4c 89 fa                              	mov rdx, r15
0x3e9a:   4c 89 54 24 08                        	mov qword ptr [rsp + 8], r10
0x3e9f:   e8 2c f1 ff ff                        	call 0x2fd0 <function_2fd0>
0x3ea4:   4c 8b 54 24 08                        	mov r10, qword ptr [rsp + 8]
0x3ea9:   48 ff c3                              	inc rbx
0x3eac:   48 83 fb 0a                           	cmp rbx, 0xa
0x3eb0:   75 c1                                 	jne 0x3e73 <.Llzma_mf_bt4_find.0+0xe3>
0x3eb2:   31 c0                                 	xor eax, eax
0x3eb4:   48 8d 7c 24 48                        	lea rdi, [rsp + 0x48]
0x3eb9:   48 8d 74 24 48                        	lea rsi, [rsp + 0x48]
0x3ebe:   48 8b cb                              	mov rcx, rbx
0x3ec1:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x3ec3:   33 c0                                 	xor eax, eax
0x3ec5:   49 8b 7c c5 00                        	mov rdi, qword ptr [r13 + rax*8]
0x3eca:   33 d2                                 	xor edx, edx
0x3ecc:   8b ca                                 	mov ecx, edx
0x3ece:   39 c2                                 	cmp edx, eax
0x3ed0:   73 12                                 	jae 0x3ee4 <.Llzma_mf_bt4_find.0+0x154>
0x3ed2:   48 ff c2                              	inc rdx
0x3ed5:   49 39 7c d5 f8                        	cmp qword ptr [r13 + rdx*8 - 8], rdi
0x3eda:   75 f0                                 	jne 0x3ecc <.Llzma_mf_bt4_find.0+0x13c>
0x3edc:   8b d1                                 	mov edx, ecx
0x3ede:   ff 44 94 48                           	inc dword ptr [rsp + rdx*4 + 0x48]
0x3ee2:   eb 03                                 	jmp 0x3ee7 <.Llzma_mf_bt4_find.0+0x157>
0x3ee4:   ff 04 86                              	inc dword ptr [rsi + rax*4]
0x3ee7:   48 ff c0                              	inc rax
0x3eea:   48 83 f8 0a                           	cmp rax, 0xa
0x3eee:   75 d5                                 	jne 0x3ec5 <.Llzma_mf_bt4_find.0+0x135>
0x3ef0:   33 c0                                 	xor eax, eax
0x3ef2:   33 d2                                 	xor edx, edx
0x3ef4:   31 c9                                 	xor ecx, ecx
0x3ef6:   8b 3c 86                              	mov edi, dword ptr [rsi + rax*4]
0x3ef9:   3b cf                                 	cmp ecx, edi
0x3efb:   73 04                                 	jae 0x3f01 <.Llzma_mf_bt4_find.0+0x171>
0x3efd:   89 c2                                 	mov edx, eax
0x3eff:   89 f9                                 	mov ecx, edi
0x3f01:   48 ff c0                              	inc rax
0x3f04:   48 83 f8 0a                           	cmp rax, 0xa
0x3f08:   75 ec                                 	jne 0x3ef6 <.Llzma_mf_bt4_find.0+0x166>
0x3f0a:   83 f9 04                              	cmp ecx, 4
0x3f0d:   0f 86 b4 fe ff ff                     	jbe 0x3dc7 <.Llzma_mf_bt4_find.0+0x37>
0x3f13:   48 8b 44 d4 70                        	mov rax, qword ptr [rsp + rdx*8 + 0x70]
0x3f18:   48 85 c0                              	test rax, rax
0x3f1b:   0f 84 a6 fe ff ff                     	je 0x3dc7 <.Llzma_mf_bt4_find.0+0x37>
0x3f21:   49 89 44 24 48                        	mov qword ptr [r12 + 0x48], rax
0x3f26:   b8 01 00 00 00                        	mov eax, 1
0x3f2b:   48 81 c4 c0 00 00 00                  	add rsp, 0xc0
0x3f32:   5b                                    	pop rbx
0x3f33:   41 5c                                 	pop r12
0x3f35:   41 5d                                 	pop r13
0x3f37:   41 5e                                 	pop r14
0x3f39:   41 5f                                 	pop r15
0x3f3b:   c3                                    	ret 
; section: .text.lzma_stream_decoder_inia
; function: .Llzma_stream_decoder_init.1 at 0x3f40 -- 0x3f54
0x3f40:   f3 0f 1e fa                           	endbr64 
0x3f44:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x3f4b:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x3f4f:   48 89 47 18                           	mov qword ptr [rdi + 0x18], rax
0x3f53:   c3                                    	ret 
; section: .text.lzma_stream_flags_compara
; function: .Llzma_stream_flags_compare.1 at 0x3f60 -- 0x3f74
0x3f60:   f3 0f 1e fa                           	endbr64 
0x3f64:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x3f6b:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x3f6f:   48 89 47 20                           	mov qword ptr [rdi + 0x20], rax
0x3f73:   c3                                    	ret 
; section: .text.lzma_stream_header_encoda
; function: .Llzma_stream_header_encode.part.0 at 0x3f80 -- 0x3fb8
0x3f80:   f3 0f 1e fa                           	endbr64 
0x3f84:   48 8d 15 8d 6e 00 00                  	lea rdx, [rip + 0x6e8d]
0x3f8b:   48 89 17                              	mov qword ptr [rdi], rdx
0x3f8e:   e8 cd ff ff ff                        	call 0x3f60 <.Llzma_stream_flags_compare.1>
0x3f93:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x3f9a:   48 2b 57 20                           	sub rdx, qword ptr [rdi + 0x20]
0x3f9e:   48 89 57 08                           	mov qword ptr [rdi + 8], rdx
0x3fa2:   48 8b 00                              	mov rax, qword ptr [rax]
0x3fa5:   48 8b 04 10                           	mov rax, qword ptr [rax + rdx]
0x3fa9:   48 c1 f8 38                           	sar rax, 0x38
0x3fad:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x3fb1:   31 c0                                 	xor eax, eax
0x3fb3:   48 89 47 18                           	mov qword ptr [rdi + 0x18], rax
0x3fb7:   c3                                    	ret 
; section: .text.lzma_stream_header_encodb
; function: .Llzma_block_param_decoder.0 at 0x3fc0 -- 0x3fee
0x3fc0:   f3 0f 1e fa                           	endbr64 
0x3fc4:   83 fe 01                              	cmp esi, 1
0x3fc7:   48 8d 54 24 f8                        	lea rdx, [rsp - 8]
0x3fcc:   48 19 c0                              	sbb rax, rax
0x3fcf:   48 25 98 f0 ff ff                     	and rax, 0xfffffffffffff098
0x3fd5:   8d 88 e8 0f 00 00                     	lea ecx, [rax + 0xfe8]
0x3fdb:   31 c0                                 	xor eax, eax
0x3fdd:   31 f6                                 	xor esi, esi
0x3fdf:   ff c0                                 	inc eax
0x3fe1:   48 83 ea 08                           	sub rdx, 8
0x3fe5:   48 89 72 08                           	mov qword ptr [rdx + 8], rsi
0x3fe9:   39 c1                                 	cmp ecx, eax
0x3feb:   75 f0                                 	jne 0x3fdd <.Llzma_block_param_decoder.0+0x1d>
0x3fed:   c3                                    	ret 
; section: .text.parse_delt1
; function: .Lparse_delta.0 at 0x3ff0 -- 0x4003
0x3ff0:   f3 0f 1e fa                           	endbr64 
0x3ff4:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x3ffb:   48 8b 00                              	mov rax, qword ptr [rax]
0x3ffe:   48 89 47 20                           	mov qword ptr [rdi + 0x20], rax
0x4002:   c3                                    	ret 
; section: .text.read_output_and_waia
; function: .Llzma_delta_props_decoder at 0x4010 -- 0x403b
0x4010:   f3 0f 1e fa                           	endbr64 
0x4014:   48 8d 05 05 6e 00 00                  	lea rax, [rip + 0x6e05]
0x401b:   48 89 07                              	mov qword ptr [rdi], rax
0x401e:   48 8b 47 28                           	mov rax, qword ptr [rdi + 0x28]
0x4022:   48 8b 40 18                           	mov rax, qword ptr [rax + 0x18]
0x4026:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x402a:   e8 c1 ff ff ff                        	call 0x3ff0 <.Lparse_delta.0>
0x402f:   e8 0c ff ff ff                        	call 0x3f40 <.Llzma_stream_decoder_init.1>
0x4034:   31 c0                                 	xor eax, eax
0x4036:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
0x403a:   c3                                    	ret 
; section: .text.stream_decoder_memconfia
; function: .Lstream_decoder_memconfig.part.1 at 0x4040 -- 0x4053
0x4040:   f3 0f 1e fa                           	endbr64 
0x4044:   bf 21 00 00 00                        	mov edi, 0x21
0x4049:   e8 22 e4 ff ff                        	call 0x2470 <.Lstream_decoder_mt_end.0>
0x404e:   48 83 c0 08                           	add rax, 8
0x4052:   c3                                    	ret 
; section: .text.lzma_delta_props_encoda
; function: .Llzma_delta_props_encode.part.0 at 0x4060 -- 0x4348
0x4060:   f3 0f 1e fa                           	endbr64 
0x4064:   41 57                                 	push r15
0x4066:   41 56                                 	push r14
0x4068:   49 89 ce                              	mov r14, rcx
0x406b:   b9 05 00 00 00                        	mov ecx, 5
0x4070:   41 55                                 	push r13
0x4072:   41 54                                 	push r12
0x4074:   49 89 fc                              	mov r12, rdi
0x4077:   31 ff                                 	xor edi, edi
0x4079:   53                                    	push rbx
0x407a:   48 83 ec 40                           	sub rsp, 0x40
0x407e:   48 89 74 24 28                        	mov qword ptr [rsp + 0x28], rsi
0x4083:   be 6c 00 00 00                        	mov esi, 0x6c
0x4088:   48 89 54 24 20                        	mov qword ptr [rsp + 0x20], rdx
0x408d:   ba 10 00 00 00                        	mov edx, 0x10
0x4092:   e8 19 6b 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x4097:   85 c0                                 	test eax, eax
0x4099:   0f 84 13 01 00 00                     	je 0x41b2 <.Llzma_delta_props_encode.part.0+0x152>
0x409f:   49 8b 04 24                           	mov rax, qword ptr [r12]
0x40a3:   bf 01 00 00 00                        	mov edi, 1
0x40a8:   49 8b 9e 18 01 00 00                  	mov rbx, qword ptr [r14 + 0x118]
0x40af:   4c 8b 68 10                           	mov r13, qword ptr [rax + 0x10]
0x40b3:   e8 88 ff ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x40b8:   bf a8 08 00 00                        	mov edi, 0x8a8
0x40bd:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x40c2:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x40c7:   48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x40cc:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x40d0:   48 89 ce                              	mov rsi, rcx
0x40d3:   48 89 41 10                           	mov qword ptr [rcx + 0x10], rax
0x40d7:   e8 84 8a 00 00                        	call 0xcb60 <lzma_alloc>
0x40dc:   48 89 43 18                           	mov qword ptr [rbx + 0x18], rax
0x40e0:   48 85 c0                              	test rax, rax
0x40e3:   74 02                                 	je 0x40e7 <.Llzma_delta_props_encode.part.0+0x87>
0x40e5:   ff 03                                 	inc dword ptr [rbx]
0x40e7:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x40ec:   bf 28 04 00 00                        	mov edi, 0x428
0x40f1:   e8 6a 8a 00 00                        	call 0xcb60 <lzma_alloc>
0x40f6:   48 89 43 58                           	mov qword ptr [rbx + 0x58], rax
0x40fa:   48 85 c0                              	test rax, rax
0x40fd:   74 02                                 	je 0x4101 <.Llzma_delta_props_encode.part.0+0xa1>
0x40ff:   ff 03                                 	inc dword ptr [rbx]
0x4101:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x4106:   bf f0 05 00 00                        	mov edi, 0x5f0
0x410b:   e8 50 8a 00 00                        	call 0xcb60 <lzma_alloc>
0x4110:   48 89 43 20                           	mov qword ptr [rbx + 0x20], rax
0x4114:   48 85 c0                              	test rax, rax
0x4117:   74 02                                 	je 0x411b <.Llzma_delta_props_encode.part.0+0xbb>
0x4119:   ff 03                                 	inc dword ptr [rbx]
0x411b:   bf 01 00 00 00                        	mov edi, 1
0x4120:   e8 1b ff ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x4125:   be 60 0a 00 00                        	mov esi, 0xa60
0x412a:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x412f:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4134:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x4139:   48 8b 50 20                           	mov rdx, qword ptr [rax + 0x20]
0x413d:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x4141:   48 89 51 10                           	mov qword ptr [rcx + 0x10], rdx
0x4145:   33 d2                                 	xor edx, edx
0x4147:   e8 14 d7 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x414c:   49 89 c7                              	mov r15, rax
0x414f:   48 85 c0                              	test rax, rax
0x4152:   74 5e                                 	je 0x41b2 <.Llzma_delta_props_encode.part.0+0x152>
0x4154:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x4159:   bf e0 04 00 00                        	mov edi, 0x4e0
0x415e:   e8 fd 89 00 00                        	call 0xcb60 <lzma_alloc>
0x4163:   49 89 46 68                           	mov qword ptr [r14 + 0x68], rax
0x4167:   48 85 c0                              	test rax, rax
0x416a:   74 07                                 	je 0x4173 <.Llzma_delta_props_encode.part.0+0x113>
0x416c:   41 ff 86 20 01 00 00                  	inc dword ptr [r14 + 0x120]
0x4173:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4178:   49 8b 57 10                           	mov rdx, qword ptr [r15 + 0x10]
0x417c:   b9 04 00 00 00                        	mov ecx, 4
0x4181:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x4185:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x4189:   48 03 07                              	add rax, qword ptr [rdi]
0x418c:   48 89 c6                              	mov rsi, rax
0x418f:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x4194:   e8 e7 d1 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x4199:   49 8d 95 60 09 00 00                  	lea rdx, [r13 + 0x960]
0x41a0:   85 c0                                 	test eax, eax
0x41a2:   75 2c                                 	jne 0x41d0 <.Llzma_delta_props_encode.part.0+0x170>
0x41a4:   49 8b 7e 68                           	mov rdi, qword ptr [r14 + 0x68]
0x41a8:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x41ad:   e8 a6 89 00 00                        	call 0xcb58 <lzma_free>
0x41b2:   31 c0                                 	xor eax, eax
0x41b4:   e9 81 01 00 00                        	jmp 0x433a <.Llzma_delta_props_encode.part.0+0x2da>
0x41b9:   4d 8b 4c 24 08                        	mov r9, qword ptr [r12 + 8]
0x41be:   49 8b 41 18                           	mov rax, qword ptr [r9 + 0x18]
0x41c2:   48 8b 48 50                           	mov rcx, qword ptr [rax + 0x50]
0x41c6:   49 39 4d 00                           	cmp qword ptr [r13], rcx
0x41ca:   74 0b                                 	je 0x41d7 <.Llzma_delta_props_encode.part.0+0x177>
0x41cc:   49 83 c5 08                           	add r13, 8
0x41d0:   49 39 d5                              	cmp r13, rdx
0x41d3:   75 e4                                 	jne 0x41b9 <.Llzma_delta_props_encode.part.0+0x159>
0x41d5:   eb cd                                 	jmp 0x41a4 <.Llzma_delta_props_encode.part.0+0x144>
0x41d7:   48 8b 40 58                           	mov rax, qword ptr [rax + 0x58]
0x41db:   49 39 45 08                           	cmp qword ptr [r13 + 8], rax
0x41df:   75 eb                                 	jne 0x41cc <.Llzma_delta_props_encode.part.0+0x16c>
0x41e1:   49 8b 04 24                           	mov rax, qword ptr [r12]
0x41e5:   4d 8d 55 18                           	lea r10, [r13 + 0x18]
0x41e9:   31 c9                                 	xor ecx, ecx
0x41eb:   48 83 ca ff                           	or rdx, 0xffffffffffffffff
0x41ef:   48 8b 70 10                           	mov rsi, qword ptr [rax + 0x10]
0x41f3:   49 8d 45 68                           	lea rax, [r13 + 0x68]
0x41f7:   eb 21                                 	jmp 0x421a <.Llzma_delta_props_encode.part.0+0x1ba>
0x41f9:   48 8b 3e                              	mov rdi, qword ptr [rsi]
0x41fc:   4c 39 d7                              	cmp rdi, r10
0x41ff:   72 15                                 	jb 0x4216 <.Llzma_delta_props_encode.part.0+0x1b6>
0x4201:   48 3b c2                              	cmp rax, rdx
0x4204:   49 89 d3                              	mov r11, rdx
0x4207:   4c 0f 46 d8                           	cmovbe r11, rax
0x420b:   4c 39 df                              	cmp rdi, r11
0x420e:   48 0f 42 ce                           	cmovb rcx, rsi
0x4212:   48 0f 42 d7                           	cmovb rdx, rdi
0x4216:   48 83 c6 08                           	add rsi, 8
0x421a:   4c 39 d6                              	cmp rsi, r10
0x421d:   72 da                                 	jb 0x41f9 <.Llzma_delta_props_encode.part.0+0x199>
0x421f:   48 83 fa ff                           	cmp rdx, -1
0x4223:   0f 84 7b ff ff ff                     	je 0x41a4 <.Llzma_delta_props_encode.part.0+0x144>
0x4229:   48 89 4c 24 38                        	mov qword ptr [rsp + 0x38], rcx
0x422e:   49 8b 41 10                           	mov rax, qword ptr [r9 + 0x10]
0x4232:   bf b8 0a 00 00                        	mov edi, 0xab8
0x4237:   48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x423c:   48 89 54 24 30                        	mov qword ptr [rsp + 0x30], rdx
0x4241:   48 89 41 10                           	mov qword ptr [rcx + 0x10], rax
0x4245:   48 89 ce                              	mov rsi, rcx
0x4248:   e8 13 89 00 00                        	call 0xcb60 <lzma_alloc>
0x424d:   48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x4252:   48 8b 4c 24 38                        	mov rcx, qword ptr [rsp + 0x38]
0x4257:   48 85 c0                              	test rax, rax
0x425a:   48 89 43 28                           	mov qword ptr [rbx + 0x28], rax
0x425e:   74 02                                 	je 0x4262 <.Llzma_delta_props_encode.part.0+0x202>
0x4260:   ff 03                                 	inc dword ptr [rbx]
0x4262:   49 8b 3c 24                           	mov rdi, qword ptr [r12]
0x4266:   48 8b 77 10                           	mov rsi, qword ptr [rdi + 0x10]
0x426a:   48 2b d6                              	sub rdx, rsi
0x426d:   48 8b c6                              	mov rax, rsi
0x4270:   49 89 d5                              	mov r13, rdx
0x4273:   48 29 c8                              	sub rax, rcx
0x4276:   48 39 f1                              	cmp rcx, rsi
0x4279:   72 06                                 	jb 0x4281 <.Llzma_delta_props_encode.part.0+0x221>
0x427b:   48 8b c1                              	mov rax, rcx
0x427e:   48 2b c6                              	sub rax, rsi
0x4281:   48 8b 4c 24 20                        	mov rcx, qword ptr [rsp + 0x20]
0x4286:   8b c0                                 	mov eax, eax
0x4288:   48 03 47 18                           	add rax, qword ptr [rdi + 0x18]
0x428c:   4c 89 ea                              	mov rdx, r13
0x428f:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x4294:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x4299:   48 89 81 f8 00 00 00                  	mov qword ptr [rcx + 0xf8], rax
0x42a0:   49 03 77 10                           	add rsi, qword ptr [r15 + 0x10]
0x42a4:   e8 e7 cb ff ff                        	call 0xe90 <.Llzma_raw_encoder.0>
0x42a9:   85 c0                                 	test eax, eax
0x42ab:   0f 84 01 ff ff ff                     	je 0x41b2 <.Llzma_delta_props_encode.part.0+0x152>
0x42b1:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x42b6:   4c 89 ea                              	mov rdx, r13
0x42b9:   48 8b b8 00 01 00 00                  	mov rdi, qword ptr [rax + 0x100]
0x42c0:   48 8b b0 08 01 00 00                  	mov rsi, qword ptr [rax + 0x108]
0x42c7:   48 03 f7                              	add rsi, rdi
0x42ca:   e8 c1 cb ff ff                        	call 0xe90 <.Llzma_raw_encoder.0>
0x42cf:   85 c0                                 	test eax, eax
0x42d1:   0f 84 db fe ff ff                     	je 0x41b2 <.Llzma_delta_props_encode.part.0+0x152>
0x42d7:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x42dc:   48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x42e1:   bf f8 09 00 00                        	mov edi, 0x9f8
0x42e6:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x42ea:   48 8b f1                              	mov rsi, rcx
0x42ed:   48 89 41 10                           	mov qword ptr [rcx + 0x10], rax
0x42f1:   e8 6a 88 00 00                        	call 0xcb60 <lzma_alloc>
0x42f6:   48 89 43 30                           	mov qword ptr [rbx + 0x30], rax
0x42fa:   48 85 c0                              	test rax, rax
0x42fd:   74 02                                 	je 0x4301 <.Llzma_delta_props_encode.part.0+0x2a1>
0x42ff:   ff 03                                 	inc dword ptr [rbx]
0x4301:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x4306:   bf 60 07 00 00                        	mov edi, 0x760
0x430b:   e8 50 88 00 00                        	call 0xcb60 <lzma_alloc>
0x4310:   48 89 43 60                           	mov qword ptr [rbx + 0x60], rax
0x4314:   48 85 c0                              	test rax, rax
0x4317:   74 02                                 	je 0x431b <.Llzma_delta_props_encode.part.0+0x2bb>
0x4319:   ff 03                                 	inc dword ptr [rbx]
0x431b:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4320:   48 8b 5c 24 10                        	mov rbx, qword ptr [rsp + 0x10]
0x4325:   48 8b 40 20                           	mov rax, qword ptr [rax + 0x20]
0x4329:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x432d:   48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x4332:   4c 89 28                              	mov qword ptr [rax], r13
0x4335:   b8 01 00 00 00                        	mov eax, 1
0x433a:   48 83 c4 40                           	add rsp, 0x40
0x433e:   5b                                    	pop rbx
0x433f:   41 5c                                 	pop r12
0x4341:   41 5d                                 	pop r13
0x4343:   41 5e                                 	pop r14
0x4345:   41 5f                                 	pop r15
0x4347:   c3                                    	ret 
; section: .text.lzma_filter_flags_decoda
; function: .Llzma_filter_flags_decode.0 at 0x4350 -- 0x45bb
0x4350:   f3 0f 1e fa                           	endbr64 
0x4354:   41 57                                 	push r15
0x4356:   31 c0                                 	xor eax, eax
0x4358:   41 56                                 	push r14
0x435a:   49 89 f6                              	mov r14, rsi
0x435d:   be 98 0a 00 00                        	mov esi, 0xa98
0x4362:   41 55                                 	push r13
0x4364:   41 54                                 	push r12
0x4366:   49 89 d4                              	mov r12, rdx
0x4369:   31 d2                                 	xor edx, edx
0x436b:   53                                    	push rbx
0x436c:   48 89 cb                              	mov rbx, rcx
0x436f:   48 81 ec 90 00 00 00                  	sub rsp, 0x90
0x4376:   89 54 24 2c                           	mov dword ptr [rsp + 0x2c], edx
0x437a:   31 d2                                 	xor edx, edx
0x437c:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x4380:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x4385:   e8 d6 d4 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x438a:   48 85 c0                              	test rax, rax
0x438d:   0f 84 9c 01 00 00                     	je 0x452f <.Llzma_filter_flags_decode.0+0x1df>
0x4393:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x4397:   31 d2                                 	xor edx, edx
0x4399:   48 8d 74 24 2c                        	lea rsi, [rsp + 0x2c]
0x439e:   49 89 c7                              	mov r15, rax
0x43a1:   c7 44 24 2c a8 06 00 00               	mov dword ptr [rsp + 0x2c], 0x6a8
0x43a9:   e8 d2 dc ff ff                        	call 0x2080 <.Llzip_decode.0>
0x43ae:   48 85 c0                              	test rax, rax
0x43b1:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x43b6:   0f 84 73 01 00 00                     	je 0x452f <.Llzma_filter_flags_decode.0+0x1df>
0x43bc:   31 d2                                 	xor edx, edx
0x43be:   be d0 09 00 00                        	mov esi, 0x9d0
0x43c3:   4c 89 f7                              	mov rdi, r14
0x43c6:   e8 95 d4 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x43cb:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x43cf:   48 8d 74 24 30                        	lea rsi, [rsp + 0x30]
0x43d4:   49 89 c5                              	mov r13, rax
0x43d7:   e8 c4 da ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x43dc:   48 89 c7                              	mov rdi, rax
0x43df:   48 85 c0                              	test rax, rax
0x43e2:   0f 84 47 01 00 00                     	je 0x452f <.Llzma_filter_flags_decode.0+0x1df>
0x43e8:   48 8b 74 24 30                        	mov rsi, qword ptr [rsp + 0x30]
0x43ed:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x43f2:   48 01 c6                              	add rsi, rax
0x43f5:   e8 06 cc ff ff                        	call 0x1000 <.Lstream_encode.1>
0x43fa:   49 89 c2                              	mov r10, rax
0x43fd:   48 85 c0                              	test rax, rax
0x4400:   0f 84 29 01 00 00                     	je 0x452f <.Llzma_filter_flags_decode.0+0x1df>
0x4406:   4d 85 ed                              	test r13, r13
0x4409:   74 11                                 	je 0x441c <.Llzma_filter_flags_decode.0+0xcc>
0x440b:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x440f:   49 03 06                              	add rax, qword ptr [r14]
0x4412:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x4418:   48 89 43 30                           	mov qword ptr [rbx + 0x30], rax
0x441c:   31 c0                                 	xor eax, eax
0x441e:   48 8d 7c 24 38                        	lea rdi, [rsp + 0x38]
0x4423:   4c 89 54 24 18                        	mov qword ptr [rsp + 0x18], r10
0x4428:   4d 8d 6a 80                           	lea r13, [r10 - 0x80]
0x442c:   b9 16 00 00 00                        	mov ecx, 0x16
0x4431:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x4433:   48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0x4437:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x443b:   bf 01 00 00 00                        	mov edi, 1
0x4440:   48 03 01                              	add rax, qword ptr [rcx]
0x4443:   48 89 04 24                           	mov qword ptr [rsp], rax
0x4447:   49 03 47 10                           	add rax, qword ptr [r15 + 0x10]
0x444b:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x4450:   e8 eb fb ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x4455:   bf 10 0d 00 00                        	mov edi, 0xd10
0x445a:   4c 89 70 10                           	mov qword ptr [rax + 0x10], r14
0x445e:   48 89 c6                              	mov rsi, rax
0x4461:   49 89 c7                              	mov r15, rax
0x4464:   e8 f7 86 00 00                        	call 0xcb60 <lzma_alloc>
0x4469:   4c 8b 54 24 18                        	mov r10, qword ptr [rsp + 0x18]
0x446e:   48 89 83 90 00 00 00                  	mov qword ptr [rbx + 0x90], rax
0x4475:   48 85 c0                              	test rax, rax
0x4478:   48 8d 44 24 38                        	lea rax, [rsp + 0x38]
0x447d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x4482:   74 06                                 	je 0x448a <.Llzma_filter_flags_decode.0+0x13a>
0x4484:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x448a:   45 31 f6                              	xor r14d, r14d
0x448d:   4d 39 d5                              	cmp r13, r10
0x4490:   0f 83 85 00 00 00                     	jae 0x451b <.Llzma_filter_flags_decode.0+0x1cb>
0x4496:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x449b:   45 31 c0                              	xor r8d, r8d
0x449e:   4c 89 d6                              	mov rsi, r10
0x44a1:   4c 89 ef                              	mov rdi, r13
0x44a4:   b9 0b 01 00 00                        	mov ecx, 0x10b
0x44a9:   4c 89 54 24 18                        	mov qword ptr [rsp + 0x18], r10
0x44ae:   49 ff c5                              	inc r13
0x44b1:   e8 8a cb ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x44b6:   4c 8b 54 24 18                        	mov r10, qword ptr [rsp + 0x18]
0x44bb:   85 c0                                 	test eax, eax
0x44bd:   74 ce                                 	je 0x448d <.Llzma_filter_flags_decode.0+0x13d>
0x44bf:   48 8b 4c 24 38                        	mov rcx, qword ptr [rsp + 0x38]
0x44c4:   f6 44 24 49 01                        	test byte ptr [rsp + 0x49], 1
0x44c9:   74 3e                                 	je 0x4509 <.Llzma_filter_flags_decode.0+0x1b9>
0x44cb:   8b 54 24 54                           	mov edx, dword ptr [rsp + 0x54]
0x44cf:   48 8b 44 24 68                        	mov rax, qword ptr [rsp + 0x68]
0x44d4:   81 e2 00 ff 00 ff                     	and edx, 0xff00ff00
0x44da:   81 fa 00 00 00 05                     	cmp edx, 0x5000000
0x44e0:   75 08                                 	jne 0x44ea <.Llzma_filter_flags_decode.0+0x19a>
0x44e2:   48 01 c8                              	add rax, rcx
0x44e5:   48 03 44 24 40                        	add rax, qword ptr [rsp + 0x40]
0x44ea:   8a 54 24 53                           	mov dl, byte ptr [rsp + 0x53]
0x44ee:   83 e2 48                              	and edx, 0x48
0x44f1:   80 fa 48                              	cmp dl, 0x48
0x44f4:   74 13                                 	je 0x4509 <.Llzma_filter_flags_decode.0+0x1b9>
0x44f6:   48 39 04 24                           	cmp qword ptr [rsp], rax
0x44fa:   73 0d                                 	jae 0x4509 <.Llzma_filter_flags_decode.0+0x1b9>
0x44fc:   48 8d 50 04                           	lea rdx, [rax + 4]
0x4500:   48 39 54 24 08                        	cmp qword ptr [rsp + 8], rdx
0x4505:   4c 0f 43 f0                           	cmovae r14, rax
0x4509:   0f b6 84 24 88 00 00 00               	movzx eax, byte ptr [rsp + 0x88]
0x4511:   4c 8d 6c 01 01                        	lea r13, [rcx + rax + 1]
0x4516:   e9 72 ff ff ff                        	jmp 0x448d <.Llzma_filter_flags_decode.0+0x13d>
0x451b:   4d 85 f6                              	test r14, r14
0x451e:   75 13                                 	jne 0x4533 <.Llzma_filter_flags_decode.0+0x1e3>
0x4520:   48 8b bb 90 00 00 00                  	mov rdi, qword ptr [rbx + 0x90]
0x4527:   4c 89 fe                              	mov rsi, r15
0x452a:   e8 29 86 00 00                        	call 0xcb58 <lzma_free>
0x452f:   31 c0                                 	xor eax, eax
0x4531:   eb 77                                 	jmp 0x45aa <.Llzma_filter_flags_decode.0+0x25a>
0x4533:   49 8b bc 24 00 01 00 00               	mov rdi, qword ptr [r12 + 0x100]
0x453b:   49 8b b4 24 08 01 00 00               	mov rsi, qword ptr [r12 + 0x108]
0x4543:   31 d2                                 	xor edx, edx
0x4545:   4d 89 f0                              	mov r8, r14
0x4548:   b9 0b 01 00 00                        	mov ecx, 0x10b
0x454d:   48 01 fe                              	add rsi, rdi
0x4550:   e8 eb ca ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x4555:   85 c0                                 	test eax, eax
0x4557:   74 c7                                 	je 0x4520 <.Llzma_filter_flags_decode.0+0x1d0>
0x4559:   4c 89 fe                              	mov rsi, r15
0x455c:   bf 68 04 00 00                        	mov edi, 0x468
0x4561:   e8 fa 85 00 00                        	call 0xcb60 <lzma_alloc>
0x4566:   48 89 43 38                           	mov qword ptr [rbx + 0x38], rax
0x456a:   48 85 c0                              	test rax, rax
0x456d:   74 06                                 	je 0x4575 <.Llzma_filter_flags_decode.0+0x225>
0x456f:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x4575:   41 83 3e 00                           	cmp dword ptr [r14], 0
0x4579:   75 07                                 	jne 0x4582 <.Llzma_filter_flags_decode.0+0x232>
0x457b:   49 83 7e f8 00                        	cmp qword ptr [r14 - 8], 0
0x4580:   74 15                                 	je 0x4597 <.Llzma_filter_flags_decode.0+0x247>
0x4582:   48 8b bb 90 00 00 00                  	mov rdi, qword ptr [rbx + 0x90]
0x4589:   4c 89 fe                              	mov rsi, r15
0x458c:   e8 c7 85 00 00                        	call 0xcb58 <lzma_free>
0x4591:   48 8b 7b 38                           	mov rdi, qword ptr [rbx + 0x38]
0x4595:   eb 90                                 	jmp 0x4527 <.Llzma_filter_flags_decode.0+0x1d7>
0x4597:   4d 89 74 24 78                        	mov qword ptr [r12 + 0x78], r14
0x459c:   49 8d 46 f8                           	lea rax, [r14 - 8]
0x45a0:   49 89 44 24 70                        	mov qword ptr [r12 + 0x70], rax
0x45a5:   b8 01 00 00 00                        	mov eax, 1
0x45aa:   48 81 c4 90 00 00 00                  	add rsp, 0x90
0x45b1:   5b                                    	pop rbx
0x45b2:   41 5c                                 	pop r12
0x45b4:   41 5d                                 	pop r13
0x45b6:   41 5e                                 	pop r14
0x45b8:   41 5f                                 	pop r15
0x45ba:   c3                                    	ret 
; section: .text.lzma_index_buffer_encoda
; function: .Llzma_index_buffer_encode.0 at 0x45c0 -- 0x4636
0x45c0:   f3 0f 1e fa                           	endbr64 
0x45c4:   41 56                                 	push r14
0x45c6:   49 89 fe                              	mov r14, rdi
0x45c9:   bf 01 00 00 00                        	mov edi, 1
0x45ce:   41 55                                 	push r13
0x45d0:   41 54                                 	push r12
0x45d2:   49 89 f4                              	mov r12, rsi
0x45d5:   53                                    	push rbx
0x45d6:   48 89 d3                              	mov rbx, rdx
0x45d9:   51                                    	push rcx
0x45da:   e8 61 fa ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x45df:   49 8b 3e                              	mov rdi, qword ptr [r14]
0x45e2:   4c 89 e6                              	mov rsi, r12
0x45e5:   49 89 c5                              	mov r13, rax
0x45e8:   e8 c3 cd ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x45ed:   85 c0                                 	test eax, eax
0x45ef:   74 3c                                 	je 0x462d <.Llzma_index_buffer_encode.0+0x6d>
0x45f1:   4d 89 65 10                           	mov qword ptr [r13 + 0x10], r12
0x45f5:   4c 89 ee                              	mov rsi, r13
0x45f8:   bf 08 03 00 00                        	mov edi, 0x308
0x45fd:   e8 5e 85 00 00                        	call 0xcb60 <lzma_alloc>
0x4602:   48 89 43 48                           	mov qword ptr [rbx + 0x48], rax
0x4606:   48 85 c0                              	test rax, rax
0x4609:   74 02                                 	je 0x460d <.Llzma_index_buffer_encode.0+0x4d>
0x460b:   ff 03                                 	inc dword ptr [rbx]
0x460d:   4c 89 ee                              	mov rsi, r13
0x4610:   bf 78 08 00 00                        	mov edi, 0x878
0x4615:   e8 46 85 00 00                        	call 0xcb60 <lzma_alloc>
0x461a:   48 89 43 50                           	mov qword ptr [rbx + 0x50], rax
0x461e:   48 85 c0                              	test rax, rax
0x4621:   74 02                                 	je 0x4625 <.Llzma_index_buffer_encode.0+0x65>
0x4623:   ff 03                                 	inc dword ptr [rbx]
0x4625:   31 c0                                 	xor eax, eax
0x4627:   83 3b 02                              	cmp dword ptr [rbx], 2
0x462a:   0f 94 c0                              	sete al
0x462d:   5a                                    	pop rdx
0x462e:   5b                                    	pop rbx
0x462f:   41 5c                                 	pop r12
0x4631:   41 5d                                 	pop r13
0x4633:   41 5e                                 	pop r14
0x4635:   c3                                    	ret 
; section: .text.lzma_index_encoder_inia
; function: .Llzma_index_encoder_init.1 at 0x4640 -- 0x4a12
0x4640:   f3 0f 1e fa                           	endbr64 
0x4644:   48 85 ff                              	test rdi, rdi
0x4647:   0f 84 c2 03 00 00                     	je 0x4a0f <.Llzma_index_encoder_init.1+0x3cf>
0x464d:   41 57                                 	push r15
0x464f:   31 d2                                 	xor edx, edx
0x4651:   41 56                                 	push r14
0x4653:   41 55                                 	push r13
0x4655:   41 54                                 	push r12
0x4657:   49 89 fc                              	mov r12, rdi
0x465a:   53                                    	push rbx
0x465b:   48 89 f3                              	mov rbx, rsi
0x465e:   48 83 ec 10                           	sub rsp, 0x10
0x4662:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x4666:   be b8 05 00 00                        	mov esi, 0x5b8
0x466b:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x466f:   e8 ec d1 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x4674:   49 89 c5                              	mov r13, rax
0x4677:   48 85 c0                              	test rax, rax
0x467a:   75 43                                 	jne 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x467c:   31 c0                                 	xor eax, eax
0x467e:   e9 7e 03 00 00                        	jmp 0x4a01 <.Llzma_index_encoder_init.1+0x3c1>
0x4683:   49 83 3c 24 00                        	cmp qword ptr [r12], 0
0x4688:   74 f2                                 	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x468a:   49 8b 74 24 08                        	mov rsi, qword ptr [r12 + 8]
0x468f:   48 85 f6                              	test rsi, rsi
0x4692:   74 e8                                 	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4694:   49 83 7c 24 10 00                     	cmp qword ptr [r12 + 0x10], 0
0x469a:   74 e0                                 	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x469c:   80 3e 00                              	cmp byte ptr [rsi], 0
0x469f:   75 2b                                 	jne 0x46cc <.Llzma_index_encoder_init.1+0x8c>
0x46a1:   48 8b 03                              	mov rax, qword ptr [rbx]
0x46a4:   48 83 38 00                           	cmp qword ptr [rax], 0
0x46a8:   75 d2                                 	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x46aa:   4c 89 20                              	mov qword ptr [rax], r12
0x46ad:   48 8b 03                              	mov rax, qword ptr [rbx]
0x46b0:   4d 8b 64 24 18                        	mov r12, qword ptr [r12 + 0x18]
0x46b5:   48 83 38 00                           	cmp qword ptr [rax], 0
0x46b9:   0f 85 22 01 00 00                     	jne 0x47e1 <.Llzma_index_encoder_init.1+0x1a1>
0x46bf:   49 83 7c 24 18 00                     	cmp qword ptr [r12 + 0x18], 0
0x46c5:   75 bc                                 	jne 0x4683 <.Llzma_index_encoder_init.1+0x43>
0x46c7:   e9 6f 01 00 00                        	jmp 0x483b <.Llzma_index_encoder_init.1+0x1fb>
0x46cc:   48 89 f7                              	mov rdi, rsi
0x46cf:   8a 06                                 	mov al, byte ptr [rsi]
0x46d1:   84 c0                                 	test al, al
0x46d3:   74 0b                                 	je 0x46e0 <.Llzma_index_encoder_init.1+0xa0>
0x46d5:   48 ff c6                              	inc rsi
0x46d8:   3c 2f                                 	cmp al, 0x2f
0x46da:   48 0f 44 fe                           	cmove rdi, rsi
0x46de:   eb ef                                 	jmp 0x46cf <.Llzma_index_encoder_init.1+0x8f>
0x46e0:   e8 bb 61 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x46e5:   48 8b 13                              	mov rdx, qword ptr [rbx]
0x46e8:   3d d0 07 00 00                        	cmp eax, 0x7d0
0x46ed:   0f 84 da 00 00 00                     	je 0x47cd <.Llzma_index_encoder_init.1+0x18d>
0x46f3:   77 14                                 	ja 0x4709 <.Llzma_index_encoder_init.1+0xc9>
0x46f5:   3d 90 05 00 00                        	cmp eax, 0x590
0x46fa:   74 7a                                 	je 0x4776 <.Llzma_index_encoder_init.1+0x136>
0x46fc:   3d c0 07 00 00                        	cmp eax, 0x7c0
0x4701:   0f 84 b2 00 00 00                     	je 0x47b9 <.Llzma_index_encoder_init.1+0x179>
0x4707:   eb a4                                 	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x4709:   3d 38 09 00 00                        	cmp eax, 0x938
0x470e:   74 52                                 	je 0x4762 <.Llzma_index_encoder_init.1+0x122>
0x4710:   3d 48 0a 00 00                        	cmp eax, 0xa48
0x4715:   75 96                                 	jne 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x4717:   48 83 7a 08 00                        	cmp qword ptr [rdx + 8], 0
0x471c:   0f 85 5a ff ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4722:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x4726:   48 8b 48 08                           	mov rcx, qword ptr [rax + 8]
0x472a:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x472e:   48 03 01                              	add rax, qword ptr [rcx]
0x4731:   4c 39 e0                              	cmp rax, r12
0x4734:   0f 83 42 ff ff ff                     	jae 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x473a:   4c 89 e6                              	mov rsi, r12
0x473d:   48 29 c6                              	sub rsi, rax
0x4740:   49 39 75 10                           	cmp qword ptr [r13 + 0x10], rsi
0x4744:   0f 82 32 ff ff ff                     	jb 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x474a:   48 8b 41 20                           	mov rax, qword ptr [rcx + 0x20]
0x474e:   49 39 44 24 10                        	cmp qword ptr [r12 + 0x10], rax
0x4753:   0f 85 23 ff ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4759:   4c 89 62 08                           	mov qword ptr [rdx + 8], r12
0x475d:   e9 4b ff ff ff                        	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x4762:   48 83 7a 20 00                        	cmp qword ptr [rdx + 0x20], 0
0x4767:   0f 85 0f ff ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x476d:   4c 89 62 20                           	mov qword ptr [rdx + 0x20], r12
0x4771:   e9 37 ff ff ff                        	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x4776:   48 83 7a 10 00                        	cmp qword ptr [rdx + 0x10], 0
0x477b:   0f 85 fb fe ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4781:   49 8b 04 24                           	mov rax, qword ptr [r12]
0x4785:   48 8d 0d b4 fe ff ff                  	lea rcx, [rip - 0x14c]
0x478c:   48 39 c8                              	cmp rax, rcx
0x478f:   0f 83 e7 fe ff ff                     	jae 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4795:   48 05 00 00 40 00                     	add rax, 0x400000
0x479b:   48 39 c8                              	cmp rax, rcx
0x479e:   0f 82 d8 fe ff ff                     	jb 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x47a4:   49 83 7c 24 18 00                     	cmp qword ptr [r12 + 0x18], 0
0x47aa:   0f 84 cc fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x47b0:   4c 89 62 10                           	mov qword ptr [rdx + 0x10], r12
0x47b4:   e9 f4 fe ff ff                        	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x47b9:   48 83 7a 18 00                        	cmp qword ptr [rdx + 0x18], 0
0x47be:   0f 85 b8 fe ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x47c4:   4c 89 62 18                           	mov qword ptr [rdx + 0x18], r12
0x47c8:   e9 e0 fe ff ff                        	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x47cd:   48 83 7a 28 00                        	cmp qword ptr [rdx + 0x28], 0
0x47d2:   0f 85 a4 fe ff ff                     	jne 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x47d8:   4c 89 62 28                           	mov qword ptr [rdx + 0x28], r12
0x47dc:   e9 cc fe ff ff                        	jmp 0x46ad <.Llzma_index_encoder_init.1+0x6d>
0x47e1:   48 83 78 18 00                        	cmp qword ptr [rax + 0x18], 0
0x47e6:   0f 84 d3 fe ff ff                     	je 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x47ec:   48 83 78 08 00                        	cmp qword ptr [rax + 8], 0
0x47f1:   0f 84 c8 fe ff ff                     	je 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x47f7:   48 83 78 20 00                        	cmp qword ptr [rax + 0x20], 0
0x47fc:   0f 84 bd fe ff ff                     	je 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x4802:   48 83 78 10 00                        	cmp qword ptr [rax + 0x10], 0
0x4807:   0f 84 b2 fe ff ff                     	je 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x480d:   48 83 78 28 00                        	cmp qword ptr [rax + 0x28], 0
0x4812:   0f 84 a7 fe ff ff                     	je 0x46bf <.Llzma_index_encoder_init.1+0x7f>
0x4818:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x481c:   4c 8b 6b 20                           	mov r13, qword ptr [rbx + 0x20]
0x4820:   4c 8b 73 18                           	mov r14, qword ptr [rbx + 0x18]
0x4824:   4c 8b 7b 10                           	mov r15, qword ptr [rbx + 0x10]
0x4828:   4c 8b 20                              	mov r12, qword ptr [rax]
0x482b:   48 8b 03                              	mov rax, qword ptr [rbx]
0x482e:   48 8b 00                              	mov rax, qword ptr [rax]
0x4831:   48 85 c0                              	test rax, rax
0x4834:   75 4a                                 	jne 0x4880 <.Llzma_index_encoder_init.1+0x240>
0x4836:   e9 41 fe ff ff                        	jmp 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x483b:   48 8b 03                              	mov rax, qword ptr [rbx]
0x483e:   48 83 38 00                           	cmp qword ptr [rax], 0
0x4842:   0f 84 34 fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4848:   48 83 78 18 00                        	cmp qword ptr [rax + 0x18], 0
0x484d:   0f 84 29 fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4853:   48 83 78 08 00                        	cmp qword ptr [rax + 8], 0
0x4858:   0f 84 1e fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x485e:   48 83 78 20 00                        	cmp qword ptr [rax + 0x20], 0
0x4863:   0f 84 13 fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4869:   48 83 78 10 00                        	cmp qword ptr [rax + 0x10], 0
0x486e:   0f 84 08 fe ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4874:   48 83 78 28 00                        	cmp qword ptr [rax + 0x28], 0
0x4879:   75 9d                                 	jne 0x4818 <.Llzma_index_encoder_init.1+0x1d8>
0x487b:   e9 fc fd ff ff                        	jmp 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4880:   48 8b 38                              	mov rdi, qword ptr [rax]
0x4883:   4c 89 e6                              	mov rsi, r12
0x4886:   e8 25 cb ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x488b:   85 c0                                 	test eax, eax
0x488d:   0f 84 e9 fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4893:   41 83 7c 24 4c 00                     	cmp dword ptr [r12 + 0x4c], 0
0x4899:   0f 84 dd fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x489f:   41 f6 84 24 d0 00 00 00 20            	test byte ptr [r12 + 0xd0], 0x20
0x48a8:   0f 84 ce fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x48ae:   be d0 01 00 00                        	mov esi, 0x1d0
0x48b3:   4c 89 e7                              	mov rdi, r12
0x48b6:   e8 85 d5 ff ff                        	call 0x1e40 <.Ldelta_coder_end.1>
0x48bb:   49 89 07                              	mov qword ptr [r15], rax
0x48be:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x48c4:   77 57                                 	ja 0x491d <.Llzma_index_encoder_init.1+0x2dd>
0x48c6:   be 10 05 00 00                        	mov esi, 0x510
0x48cb:   4c 89 e7                              	mov rdi, r12
0x48ce:   e8 6d d5 ff ff                        	call 0x1e40 <.Ldelta_coder_end.1>
0x48d3:   49 89 06                              	mov qword ptr [r14], rax
0x48d6:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x48dc:   76 0d                                 	jbe 0x48eb <.Llzma_index_encoder_init.1+0x2ab>
0x48de:   48 81 38 ff ff ff 00                  	cmp qword ptr [rax], 0xffffff
0x48e5:   0f 87 91 fd ff ff                     	ja 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x48eb:   be 98 07 00 00                        	mov esi, 0x798
0x48f0:   4c 89 e7                              	mov rdi, r12
0x48f3:   e8 48 d5 ff ff                        	call 0x1e40 <.Ldelta_coder_end.1>
0x48f8:   49 89 45 00                           	mov qword ptr [r13], rax
0x48fc:   48 3d ff ff ff 00                     	cmp rax, 0xffffff
0x4902:   77 19                                 	ja 0x491d <.Llzma_index_encoder_init.1+0x2dd>
0x4904:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x4908:   48 8b 70 20                           	mov rsi, qword ptr [rax + 0x20]
0x490c:   48 8b 03                              	mov rax, qword ptr [rbx]
0x490f:   48 8b 40 18                           	mov rax, qword ptr [rax + 0x18]
0x4913:   48 85 c0                              	test rax, rax
0x4916:   75 13                                 	jne 0x492b <.Llzma_index_encoder_init.1+0x2eb>
0x4918:   e9 5f fd ff ff                        	jmp 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x491d:   48 81 38 ff ff ff 00                  	cmp qword ptr [rax], 0xffffff
0x4924:   76 de                                 	jbe 0x4904 <.Llzma_index_encoder_init.1+0x2c4>
0x4926:   e9 51 fd ff ff                        	jmp 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x492b:   48 8b 38                              	mov rdi, qword ptr [rax]
0x492e:   e8 7d ca ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x4933:   85 c0                                 	test eax, eax
0x4935:   0f 84 41 fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x493b:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x493f:   31 f6                                 	xor esi, esi
0x4941:   4c 8b 63 28                           	mov r12, qword ptr [rbx + 0x28]
0x4945:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x494a:   4c 8b 68 18                           	mov r13, qword ptr [rax + 0x18]
0x494e:   48 8b 03                              	mov rax, qword ptr [rbx]
0x4951:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x4955:   48 85 c0                              	test rax, rax
0x4958:   0f 84 1e fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x495e:   48 8b 38                              	mov rdi, qword ptr [rax]
0x4961:   4c 89 ee                              	mov rsi, r13
0x4964:   e8 47 ca ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x4969:   85 c0                                 	test eax, eax
0x496b:   0f 84 0b fd ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x4971:   41 f6 85 d0 00 00 00 20               	test byte ptr [r13 + 0xd0], 0x20
0x4979:   0f 84 fd fc ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x497f:   ba 01 00 00 00                        	mov edx, 1
0x4984:   48 8d 74 24 08                        	lea rsi, [rsp + 8]
0x4989:   4c 89 ef                              	mov rdi, r13
0x498c:   e8 9f d7 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x4991:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x4996:   48 81 fa 97 05 00 00                  	cmp rdx, 0x597
0x499d:   0f 86 d9 fc ff ff                     	jbe 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x49a3:   48 8d 48 10                           	lea rcx, [rax + 0x10]
0x49a7:   48 81 ea 98 05 00 00                  	sub rdx, 0x598
0x49ae:   49 89 0c 24                           	mov qword ptr [r12], rcx
0x49b2:   48 89 90 90 05 00 00                  	mov qword ptr [rax + 0x590], rdx
0x49b9:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x49bd:   48 8b 70 10                           	mov rsi, qword ptr [rax + 0x10]
0x49c1:   48 8b 03                              	mov rax, qword ptr [rbx]
0x49c4:   48 8b 40 28                           	mov rax, qword ptr [rax + 0x28]
0x49c8:   48 85 c0                              	test rax, rax
0x49cb:   0f 84 ab fc ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x49d1:   48 8b 38                              	mov rdi, qword ptr [rax]
0x49d4:   e8 d7 c9 ff ff                        	call 0x13b0 <.Lget_literal_price.part.0>
0x49d9:   85 c0                                 	test eax, eax
0x49db:   0f 84 9b fc ff ff                     	je 0x467c <.Llzma_index_encoder_init.1+0x3c>
0x49e1:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x49e5:   48 8b 53 30                           	mov rdx, qword ptr [rbx + 0x30]
0x49e9:   48 8b 70 10                           	mov rsi, qword ptr [rax + 0x10]
0x49ed:   48 8b 03                              	mov rax, qword ptr [rbx]
0x49f0:   48 8b 78 28                           	mov rdi, qword ptr [rax + 0x28]
0x49f4:   e8 c7 fb ff ff                        	call 0x45c0 <.Llzma_index_buffer_encode.0>
0x49f9:   85 c0                                 	test eax, eax
0x49fb:   0f 95 c0                              	setne al
0x49fe:   0f b6 c0                              	movzx eax, al
0x4a01:   48 83 c4 10                           	add rsp, 0x10
0x4a05:   5b                                    	pop rbx
0x4a06:   41 5c                                 	pop r12
0x4a08:   41 5d                                 	pop r13
0x4a0a:   41 5e                                 	pop r14
0x4a0c:   41 5f                                 	pop r15
0x4a0e:   c3                                    	ret 
0x4a0f:   31 c0                                 	xor eax, eax
0x4a11:   c3                                    	ret 
; section: .text.lzma_index_stream_flaga
; function: .Llzma_index_stream_flags.0 at 0x4a20 -- 0x4ab7
0x4a20:   f3 0f 1e fa                           	endbr64 
0x4a24:   53                                    	push rbx
0x4a25:   48 89 fb                              	mov rbx, rdi
0x4a28:   ba c0 08 00 00                        	mov edx, 0x8c0
0x4a2d:   be b0 05 00 00                        	mov esi, 0x5b0
0x4a32:   48 83 ec 40                           	sub rsp, 0x40
0x4a36:   48 8b 47 08                           	mov rax, qword ptr [rdi + 8]
0x4a3a:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x4a3e:   e8 1d ce ff ff                        	call 0x1860 <.Lcrc_init.0>
0x4a43:   31 d2                                 	xor edx, edx
0x4a45:   48 85 c0                              	test rax, rax
0x4a48:   74 65                                 	je 0x4aaf <.Llzma_index_stream_flags.0+0x8f>
0x4a4a:   48 8b 4b 08                           	mov rcx, qword ptr [rbx + 8]
0x4a4e:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x4a52:   48 8b 51 08                           	mov rdx, qword ptr [rcx + 8]
0x4a56:   48 03 02                              	add rax, qword ptr [rdx]
0x4a59:   31 d2                                 	xor edx, edx
0x4a5b:   83 38 00                              	cmp dword ptr [rax], 0
0x4a5e:   7e 4f                                 	jle 0x4aaf <.Llzma_index_stream_flags.0+0x8f>
0x4a60:   48 8b 13                              	mov rdx, qword ptr [rbx]
0x4a63:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x4a67:   48 8d 74 24 08                        	lea rsi, [rsp + 8]
0x4a6c:   48 89 4c 24 10                        	mov qword ptr [rsp + 0x10], rcx
0x4a71:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x4a76:   48 8b 53 10                           	mov rdx, qword ptr [rbx + 0x10]
0x4a7a:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x4a7f:   48 8b 53 18                           	mov rdx, qword ptr [rbx + 0x18]
0x4a83:   48 89 54 24 20                        	mov qword ptr [rsp + 0x20], rdx
0x4a88:   48 8b 53 20                           	mov rdx, qword ptr [rbx + 0x20]
0x4a8c:   48 89 54 24 28                        	mov qword ptr [rsp + 0x28], rdx
0x4a91:   48 8b 53 28                           	mov rdx, qword ptr [rbx + 0x28]
0x4a95:   48 89 54 24 30                        	mov qword ptr [rsp + 0x30], rdx
0x4a9a:   48 8b 53 30                           	mov rdx, qword ptr [rbx + 0x30]
0x4a9e:   48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0x4aa3:   e8 98 fb ff ff                        	call 0x4640 <.Llzma_index_encoder_init.1>
0x4aa8:   31 d2                                 	xor edx, edx
0x4aaa:   85 c0                                 	test eax, eax
0x4aac:   0f 95 c2                              	setne dl
0x4aaf:   48 83 c4 40                           	add rsp, 0x40
0x4ab3:   89 d0                                 	mov eax, edx
0x4ab5:   5b                                    	pop rbx
0x4ab6:   c3                                    	ret 
; section: .text.lzma_index_iter_locata
; function: .Llzma_index_iter_locate.1 at 0x4ac0 -- 0x4ebf
0x4ac0:   f3 0f 1e fa                           	endbr64 
0x4ac4:   41 57                                 	push r15
0x4ac6:   b9 09 00 00 00                        	mov ecx, 9
0x4acb:   ba 1f 00 00 00                        	mov edx, 0x1f
0x4ad0:   41 56                                 	push r14
0x4ad2:   41 55                                 	push r13
0x4ad4:   49 89 f5                              	mov r13, rsi
0x4ad7:   be 97 00 00 00                        	mov esi, 0x97
0x4adc:   41 54                                 	push r12
0x4ade:   49 89 fc                              	mov r12, rdi
0x4ae1:   31 ff                                 	xor edi, edi
0x4ae3:   53                                    	push rbx
0x4ae4:   48 83 c4 80                           	add rsp, -0x80
0x4ae8:   e8 c3 60 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x4aed:   85 c0                                 	test eax, eax
0x4aef:   0f 84 ba 03 00 00                     	je 0x4eaf <.Llzma_index_iter_locate.1+0x3ef>
0x4af5:   31 c0                                 	xor eax, eax
0x4af7:   48 8d 7c 24 28                        	lea rdi, [rsp + 0x28]
0x4afc:   b9 16 00 00 00                        	mov ecx, 0x16
0x4b01:   4d 8b 7d 00                           	mov r15, qword ptr [r13]
0x4b05:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x4b07:   bf 01 00 00 00                        	mov edi, 1
0x4b0c:   e8 2f f5 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x4b11:   bf 08 0c 00 00                        	mov edi, 0xc08
0x4b16:   48 8b d8                              	mov rbx, rax
0x4b19:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4b1e:   48 89 de                              	mov rsi, rbx
0x4b21:   48 8b 40 20                           	mov rax, qword ptr [rax + 0x20]
0x4b25:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x4b29:   e8 32 80 00 00                        	call 0xcb60 <lzma_alloc>
0x4b2e:   49 8b 55 38                           	mov rdx, qword ptr [r13 + 0x38]
0x4b32:   48 85 c0                              	test rax, rax
0x4b35:   48 89 82 a8 00 00 00                  	mov qword ptr [rdx + 0xa8], rax
0x4b3c:   48 8d 44 24 28                        	lea rax, [rsp + 0x28]
0x4b41:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x4b46:   74 06                                 	je 0x4b4e <.Llzma_index_iter_locate.1+0x8e>
0x4b48:   ff 82 20 01 00 00                     	inc dword ptr [rdx + 0x120]
0x4b4e:   bf 01 00 00 00                        	mov edi, 1
0x4b53:   4c 8b b2 18 01 00 00                  	mov r14, qword ptr [rdx + 0x118]
0x4b5a:   e8 e1 f4 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x4b5f:   bf 48 03 00 00                        	mov edi, 0x348
0x4b64:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x4b69:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4b6e:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x4b73:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x4b77:   48 89 46 10                           	mov qword ptr [rsi + 0x10], rax
0x4b7b:   e8 e0 7f 00 00                        	call 0xcb60 <lzma_alloc>
0x4b80:   49 89 46 10                           	mov qword ptr [r14 + 0x10], rax
0x4b84:   48 85 c0                              	test rax, rax
0x4b87:   74 03                                 	je 0x4b8c <.Llzma_index_iter_locate.1+0xcc>
0x4b89:   41 ff 06                              	inc dword ptr [r14]
0x4b8c:   45 31 c9                              	xor r9d, r9d
0x4b8f:   41 b2 ff                              	mov r10b, 0xff
0x4b92:   49 8b 55 08                           	mov rdx, qword ptr [r13 + 8]
0x4b96:   49 39 d7                              	cmp r15, rdx
0x4b99:   0f 83 e2 02 00 00                     	jae 0x4e81 <.Llzma_index_iter_locate.1+0x3c1>
0x4b9f:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x4ba4:   4c 89 fe                              	mov rsi, r15
0x4ba7:   44 89 4c 24 1c                        	mov dword ptr [rsp + 0x1c], r9d
0x4bac:   44 88 54 24 1b                        	mov byte ptr [rsp + 0x1b], r10b
0x4bb1:   e8 4a b4 ff ff                        	call 0 <.Lx86_code.part.0>
0x4bb6:   85 c0                                 	test eax, eax
0x4bb8:   0f 84 f1 02 00 00                     	je 0x4eaf <.Llzma_index_iter_locate.1+0x3ef>
0x4bbe:   44 8b 4c 24 1c                        	mov r9d, dword ptr [rsp + 0x1c]
0x4bc3:   44 8a 54 24 1b                        	mov r10b, byte ptr [rsp + 0x1b]
0x4bc8:   45 85 c9                              	test r9d, r9d
0x4bcb:   0f 85 02 01 00 00                     	jne 0x4cd3 <.Llzma_index_iter_locate.1+0x213>
0x4bd1:   81 7c 24 50 36 10 00 00               	cmp dword ptr [rsp + 0x50], 0x1036
0x4bd9:   0f 85 98 02 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4bdf:   8b 7c 24 38                           	mov edi, dword ptr [rsp + 0x38]
0x4be3:   8b c7                                 	mov eax, edi
0x4be5:   66 25 40 01                           	and ax, 0x140
0x4be9:   66 3d 40 01                           	cmp ax, 0x140
0x4bed:   0f 85 84 02 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4bf3:   8a 44 24 45                           	mov al, byte ptr [rsp + 0x45]
0x4bf7:   ff c8                                 	dec eax
0x4bf9:   3c 01                                 	cmp al, 1
0x4bfb:   0f 87 76 02 00 00                     	ja 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4c01:   8a 54 24 38                           	mov dl, byte ptr [rsp + 0x38]
0x4c05:   40 8a 74 24 39                        	mov sil, byte ptr [rsp + 0x39]
0x4c0a:   89 d1                                 	mov ecx, edx
0x4c0c:   80 e1 40                              	and cl, 0x40
0x4c0f:   75 0b                                 	jne 0x4c1c <.Llzma_index_iter_locate.1+0x15c>
0x4c11:   33 c0                                 	xor eax, eax
0x4c13:   66 f7 c7 40 10                        	test di, 0x1040
0x4c18:   75 40                                 	jne 0x4c5a <.Llzma_index_iter_locate.1+0x19a>
0x4c1a:   eb 5e                                 	jmp 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c1c:   89 d0                                 	mov eax, edx
0x4c1e:   8a 4c 24 47                           	mov cl, byte ptr [rsp + 0x47]
0x4c22:   24 20                                 	and al, 0x20
0x4c24:   75 0d                                 	jne 0x4c33 <.Llzma_index_iter_locate.1+0x173>
0x4c26:   66 f7 c7 40 10                        	test di, 0x1040
0x4c2b:   74 4d                                 	je 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c2d:   8a 44 24 46                           	mov al, byte ptr [rsp + 0x46]
0x4c31:   eb 47                                 	jmp 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c33:   0f b6 54 24 43                        	movzx edx, byte ptr [rsp + 0x43]
0x4c38:   8d 04 d5 00 00 00 00                  	lea eax, [rdx*8]
0x4c3f:   83 e0 08                              	and eax, 8
0x4c42:   09 c1                                 	or ecx, eax
0x4c44:   31 c0                                 	xor eax, eax
0x4c46:   66 f7 c7 40 10                        	test di, 0x1040
0x4c4b:   74 2d                                 	je 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c4d:   8a 44 24 46                           	mov al, byte ptr [rsp + 0x46]
0x4c51:   01 d2                                 	add edx, edx
0x4c53:   83 e2 08                              	and edx, 8
0x4c56:   0b c2                                 	or eax, edx
0x4c58:   eb 20                                 	jmp 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c5a:   8b c6                                 	mov eax, esi
0x4c5c:   24 10                                 	and al, 0x10
0x4c5e:   74 1a                                 	je 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c60:   80 e2 20                              	and dl, 0x20
0x4c63:   8a 44 24 48                           	mov al, byte ptr [rsp + 0x48]
0x4c67:   74 0f                                 	je 0x4c78 <.Llzma_index_iter_locate.1+0x1b8>
0x4c69:   0f b6 54 24 43                        	movzx edx, byte ptr [rsp + 0x43]
0x4c6e:   c1 e2 03                              	shl edx, 3
0x4c71:   83 e2 08                              	and edx, 8
0x4c74:   09 d0                                 	or eax, edx
0x4c76:   eb 02                                 	jmp 0x4c7a <.Llzma_index_iter_locate.1+0x1ba>
0x4c78:   31 c9                                 	xor ecx, ecx
0x4c7a:   31 d2                                 	xor edx, edx
0x4c7c:   40 80 e6 01                           	and sil, 1
0x4c80:   48 8b 7c 24 30                        	mov rdi, qword ptr [rsp + 0x30]
0x4c85:   74 1f                                 	je 0x4ca6 <.Llzma_index_iter_locate.1+0x1e6>
0x4c87:   8b 74 24 44                           	mov esi, dword ptr [rsp + 0x44]
0x4c8b:   48 8b 54 24 58                        	mov rdx, qword ptr [rsp + 0x58]
0x4c90:   81 e6 00 ff 00 ff                     	and esi, 0xff00ff00
0x4c96:   81 fe 00 00 00 05                     	cmp esi, 0x5000000
0x4c9c:   75 08                                 	jne 0x4ca6 <.Llzma_index_iter_locate.1+0x1e6>
0x4c9e:   48 03 54 24 28                        	add rdx, qword ptr [rsp + 0x28]
0x4ca3:   48 03 d7                              	add rdx, rdi
0x4ca6:   41 8b 75 10                           	mov esi, dword ptr [r13 + 0x10]
0x4caa:   48 39 d6                              	cmp rsi, rdx
0x4cad:   0f 85 c4 01 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4cb3:   49 8b 75 20                           	mov rsi, qword ptr [r13 + 0x20]
0x4cb7:   0f b7 16                              	movzx edx, word ptr [rsi]
0x4cba:   d3 fa                                 	sar edx, cl
0x4cbc:   80 e2 01                              	and dl, 1
0x4cbf:   0f 84 b2 01 00 00                     	je 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4cc5:   88 46 02                              	mov byte ptr [rsi + 2], al
0x4cc8:   41 b9 01 00 00 00                     	mov r9d, 1
0x4cce:   e9 a4 01 00 00                        	jmp 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4cd3:   41 83 f9 01                           	cmp r9d, 1
0x4cd7:   0f 85 d8 00 00 00                     	jne 0x4db5 <.Llzma_index_iter_locate.1+0x2f5>
0x4cdd:   8b 74 24 50                           	mov esi, dword ptr [rsp + 0x50]
0x4ce1:   8b c6                                 	mov eax, esi
0x4ce3:   83 e0 fd                              	and eax, 0xfffffffd
0x4ce6:   3d 89 00 00 00                        	cmp eax, 0x89
0x4ceb:   0f 85 86 01 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4cf1:   8a 4c 24 38                           	mov cl, byte ptr [rsp + 0x38]
0x4cf5:   49 8b 7d 18                           	mov rdi, qword ptr [r13 + 0x18]
0x4cf9:   89 ca                                 	mov edx, ecx
0x4cfb:   83 e2 40                              	and edx, 0x40
0x4cfe:   66 f7 44 24 38 40 10                  	test word ptr [rsp + 0x38], 0x1040
0x4d05:   74 49                                 	je 0x4d50 <.Llzma_index_iter_locate.1+0x290>
0x4d07:   84 d2                                 	test dl, dl
0x4d09:   74 17                                 	je 0x4d22 <.Llzma_index_iter_locate.1+0x262>
0x4d0b:   8a 44 24 46                           	mov al, byte ptr [rsp + 0x46]
0x4d0f:   f6 c1 20                              	test cl, 0x20
0x4d12:   74 4f                                 	je 0x4d63 <.Llzma_index_iter_locate.1+0x2a3>
0x4d14:   0f b6 54 24 43                        	movzx edx, byte ptr [rsp + 0x43]
0x4d19:   03 d2                                 	add edx, edx
0x4d1b:   83 e2 08                              	and edx, 8
0x4d1e:   09 d0                                 	or eax, edx
0x4d20:   eb 41                                 	jmp 0x4d63 <.Llzma_index_iter_locate.1+0x2a3>
0x4d22:   f6 44 24 39 10                        	test byte ptr [rsp + 0x39], 0x10
0x4d27:   75 0f                                 	jne 0x4d38 <.Llzma_index_iter_locate.1+0x278>
0x4d29:   8a 4f 02                              	mov cl, byte ptr [rdi + 2]
0x4d2c:   84 c9                                 	test cl, cl
0x4d2e:   0f 85 43 01 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4d34:   33 c0                                 	xor eax, eax
0x4d36:   eb 48                                 	jmp 0x4d80 <.Llzma_index_iter_locate.1+0x2c0>
0x4d38:   80 e1 20                              	and cl, 0x20
0x4d3b:   8a 44 24 48                           	mov al, byte ptr [rsp + 0x48]
0x4d3f:   74 38                                 	je 0x4d79 <.Llzma_index_iter_locate.1+0x2b9>
0x4d41:   0f b6 4c 24 43                        	movzx ecx, byte ptr [rsp + 0x43]
0x4d46:   c1 e1 03                              	shl ecx, 3
0x4d49:   83 e1 08                              	and ecx, 8
0x4d4c:   0b c1                                 	or eax, ecx
0x4d4e:   eb 29                                 	jmp 0x4d79 <.Llzma_index_iter_locate.1+0x2b9>
0x4d50:   31 c0                                 	xor eax, eax
0x4d52:   84 d2                                 	test dl, dl
0x4d54:   75 0d                                 	jne 0x4d63 <.Llzma_index_iter_locate.1+0x2a3>
0x4d56:   8a 4f 02                              	mov cl, byte ptr [rdi + 2]
0x4d59:   84 c9                                 	test cl, cl
0x4d5b:   0f 85 16 01 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4d61:   eb 1d                                 	jmp 0x4d80 <.Llzma_index_iter_locate.1+0x2c0>
0x4d63:   80 e1 20                              	and cl, 0x20
0x4d66:   8a 54 24 47                           	mov dl, byte ptr [rsp + 0x47]
0x4d6a:   74 0d                                 	je 0x4d79 <.Llzma_index_iter_locate.1+0x2b9>
0x4d6c:   0f b6 4c 24 43                        	movzx ecx, byte ptr [rsp + 0x43]
0x4d71:   c1 e1 03                              	shl ecx, 3
0x4d74:   83 e1 08                              	and ecx, 8
0x4d77:   09 ca                                 	or edx, ecx
0x4d79:   8a 4f 02                              	mov cl, byte ptr [rdi + 2]
0x4d7c:   38 c1                                 	cmp cl, al
0x4d7e:   75 09                                 	jne 0x4d89 <.Llzma_index_iter_locate.1+0x2c9>
0x4d80:   49 8b 7d 20                           	mov rdi, qword ptr [r13 + 0x20]
0x4d84:   38 57 02                              	cmp byte ptr [rdi + 2], dl
0x4d87:   74 15                                 	je 0x4d9e <.Llzma_index_iter_locate.1+0x2de>
0x4d89:   38 ca                                 	cmp dl, cl
0x4d8b:   0f 85 e6 00 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4d91:   49 8b 4d 20                           	mov rcx, qword ptr [r13 + 0x20]
0x4d95:   38 41 02                              	cmp byte ptr [rcx + 2], al
0x4d98:   0f 85 d9 00 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4d9e:   81 fe 89 00 00 00                     	cmp esi, 0x89
0x4da4:   41 b9 02 00 00 00                     	mov r9d, 2
0x4daa:   0f 45 d0                              	cmovne edx, eax
0x4dad:   41 89 d2                              	mov r10d, edx
0x4db0:   e9 c2 00 00 00                        	jmp 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4db5:   41 83 f9 02                           	cmp r9d, 2
0x4db9:   0f 85 b8 00 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4dbf:   8b 44 24 50                           	mov eax, dword ptr [rsp + 0x50]
0x4dc3:   3d 28 01 00 00                        	cmp eax, 0x128
0x4dc8:   74 5b                                 	je 0x4e25 <.Llzma_index_iter_locate.1+0x365>
0x4dca:   3d 76 01 00 00                        	cmp eax, 0x176
0x4dcf:   0f 85 a2 00 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4dd5:   8a 44 24 46                           	mov al, byte ptr [rsp + 0x46]
0x4dd9:   84 c0                                 	test al, al
0x4ddb:   0f 85 96 00 00 00                     	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4de1:   66 f7 44 24 38 40 10                  	test word ptr [rsp + 0x38], 0x1040
0x4de8:   74 3d                                 	je 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4dea:   8a 54 24 38                           	mov dl, byte ptr [rsp + 0x38]
0x4dee:   f6 c2 40                              	test dl, 0x40
0x4df1:   74 12                                 	je 0x4e05 <.Llzma_index_iter_locate.1+0x345>
0x4df3:   8b c2                                 	mov eax, edx
0x4df5:   24 20                                 	and al, 0x20
0x4df7:   74 2e                                 	je 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4df9:   0f b6 44 24 43                        	movzx eax, byte ptr [rsp + 0x43]
0x4dfe:   01 c0                                 	add eax, eax
0x4e00:   83 e0 08                              	and eax, 8
0x4e03:   eb 22                                 	jmp 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4e05:   8a 44 24 39                           	mov al, byte ptr [rsp + 0x39]
0x4e09:   24 10                                 	and al, 0x10
0x4e0b:   74 1a                                 	je 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4e0d:   80 e2 20                              	and dl, 0x20
0x4e10:   8a 44 24 48                           	mov al, byte ptr [rsp + 0x48]
0x4e14:   74 11                                 	je 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4e16:   0f b6 54 24 43                        	movzx edx, byte ptr [rsp + 0x43]
0x4e1b:   c1 e2 03                              	shl edx, 3
0x4e1e:   83 e2 08                              	and edx, 8
0x4e21:   0b c2                                 	or eax, edx
0x4e23:   eb 02                                 	jmp 0x4e27 <.Llzma_index_iter_locate.1+0x367>
0x4e25:   31 c0                                 	xor eax, eax
0x4e27:   41 38 c2                              	cmp r10b, al
0x4e2a:   75 4b                                 	jne 0x4e77 <.Llzma_index_iter_locate.1+0x3b7>
0x4e2c:   48 8b 7c 24 68                        	mov rdi, qword ptr [rsp + 0x68]
0x4e31:   48 81 ff ff 00 00 00                  	cmp rdi, 0xff
0x4e38:   77 09                                 	ja 0x4e43 <.Llzma_index_iter_locate.1+0x383>
0x4e3a:   e8 41 5a 00 00                        	call 0xa880 <.Llz_stream_decode>
0x4e3f:   ff c8                                 	dec eax
0x4e41:   74 0a                                 	je 0x4e4d <.Llzma_index_iter_locate.1+0x38d>
0x4e43:   41 c7 45 28 01 00 00 00               	mov dword ptr [r13 + 0x28], 1
0x4e4b:   eb 62                                 	jmp 0x4eaf <.Llzma_index_iter_locate.1+0x3ef>
0x4e4d:   49 8b 14 24                           	mov rdx, qword ptr [r12]
0x4e51:   41 8b 45 10                           	mov eax, dword ptr [r13 + 0x10]
0x4e55:   49 8b 4d 30                           	mov rcx, qword ptr [r13 + 0x30]
0x4e59:   48 03 02                              	add rax, qword ptr [rdx]
0x4e5c:   48 8b 54 24 68                        	mov rdx, qword ptr [rsp + 0x68]
0x4e61:   48 89 41 60                           	mov qword ptr [rcx + 0x60], rax
0x4e65:   88 51 68                              	mov byte ptr [rcx + 0x68], dl
0x4e68:   0f b6 00                              	movzx eax, byte ptr [rax]
0x4e6b:   48 85 d0                              	test rax, rdx
0x4e6e:   75 d3                                 	jne 0x4e43 <.Llzma_index_iter_locate.1+0x383>
0x4e70:   b8 01 00 00 00                        	mov eax, 1
0x4e75:   eb 3a                                 	jmp 0x4eb1 <.Llzma_index_iter_locate.1+0x3f1>
0x4e77:   4c 03 7c 24 30                        	add r15, qword ptr [rsp + 0x30]
0x4e7c:   e9 11 fd ff ff                        	jmp 0x4b92 <.Llzma_index_iter_locate.1+0xd2>
0x4e81:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x4e86:   48 89 de                              	mov rsi, rbx
0x4e89:   48 8b 40 20                           	mov rax, qword ptr [rax + 0x20]
0x4e8d:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x4e91:   49 8b 45 38                           	mov rax, qword ptr [r13 + 0x38]
0x4e95:   48 8b b8 a8 00 00 00                  	mov rdi, qword ptr [rax + 0xa8]
0x4e9c:   e8 b7 7c 00 00                        	call 0xcb58 <lzma_free>
0x4ea1:   49 8b 7e 10                           	mov rdi, qword ptr [r14 + 0x10]
0x4ea5:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x4eaa:   e8 a9 7c 00 00                        	call 0xcb58 <lzma_free>
0x4eaf:   33 c0                                 	xor eax, eax
0x4eb1:   48 83 ec 80                           	sub rsp, -0x80
0x4eb5:   5b                                    	pop rbx
0x4eb6:   41 5c                                 	pop r12
0x4eb8:   41 5d                                 	pop r13
0x4eba:   41 5e                                 	pop r14
0x4ebc:   41 5f                                 	pop r15
0x4ebe:   c3                                    	ret 
; section: .text.lzma_index_hash_inia
; function: .Llzma_index_hash_init.part.0 at 0x4ec0 -- 0x51b6
0x4ec0:   f3 0f 1e fa                           	endbr64 
0x4ec4:   41 57                                 	push r15
0x4ec6:   41 56                                 	push r14
0x4ec8:   49 89 ce                              	mov r14, rcx
0x4ecb:   31 c9                                 	xor ecx, ecx
0x4ecd:   41 55                                 	push r13
0x4ecf:   41 54                                 	push r12
0x4ed1:   49 89 d4                              	mov r12, rdx
0x4ed4:   ba 08 00 00 00                        	mov edx, 8
0x4ed9:   53                                    	push rbx
0x4eda:   48 81 ec c0 00 00 00                  	sub rsp, 0xc0
0x4ee1:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x4ee5:   bf 85 00 00 00                        	mov edi, 0x85
0x4eea:   48 89 74 24 08                        	mov qword ptr [rsp + 8], rsi
0x4eef:   be 12 00 00 00                        	mov esi, 0x12
0x4ef4:   e8 e7 5c 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x4ef9:   85 c0                                 	test eax, eax
0x4efb:   0f 84 d5 00 00 00                     	je 0x4fd6 <.Llzma_index_hash_init.part.0+0x116>
0x4f01:   33 c0                                 	xor eax, eax
0x4f03:   48 8d 7c 24 68                        	lea rdi, [rsp + 0x68]
0x4f08:   b9 16 00 00 00                        	mov ecx, 0x16
0x4f0d:   4d 8b ae 18 01 00 00                  	mov r13, qword ptr [r14 + 0x118]
0x4f14:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x4f16:   33 c0                                 	xor eax, eax
0x4f18:   bf 01 00 00 00                        	mov edi, 1
0x4f1d:   89 44 24 20                           	mov dword ptr [rsp + 0x20], eax
0x4f21:   89 44 24 24                           	mov dword ptr [rsp + 0x24], eax
0x4f25:   e8 16 f1 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x4f2a:   bf 80 03 00 00                        	mov edi, 0x380
0x4f2f:   48 8b f0                              	mov rsi, rax
0x4f32:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x4f36:   48 89 74 24 18                        	mov qword ptr [rsp + 0x18], rsi
0x4f3b:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x4f3f:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x4f43:   48 89 46 10                           	mov qword ptr [rsi + 0x10], rax
0x4f47:   e8 14 7c 00 00                        	call 0xcb60 <lzma_alloc>
0x4f4c:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x4f51:   49 89 45 38                           	mov qword ptr [r13 + 0x38], rax
0x4f55:   48 85 c0                              	test rax, rax
0x4f58:   48 8d 44 24 68                        	lea rax, [rsp + 0x68]
0x4f5d:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x4f62:   74 04                                 	je 0x4f68 <.Llzma_index_hash_init.part.0+0xa8>
0x4f64:   41 ff 45 00                           	inc dword ptr [r13]
0x4f68:   49 8b 9c 24 00 01 00 00               	mov rbx, qword ptr [r12 + 0x100]
0x4f70:   4d 8b bc 24 08 01 00 00               	mov r15, qword ptr [r12 + 0x108]
0x4f78:   bf 90 06 00 00                        	mov edi, 0x690
0x4f7d:   c6 44 24 22 ff                        	mov byte ptr [rsp + 0x22], 0xff
0x4f82:   66 81 4c 24 20 80 00                  	or word ptr [rsp + 0x20], 0x80
0x4f89:   66 83 4c 24 24 02                     	or word ptr [rsp + 0x24], 2
0x4f8f:   49 01 df                              	add r15, rbx
0x4f92:   c6 44 24 26 ff                        	mov byte ptr [rsp + 0x26], 0xff
0x4f97:   e8 c4 7b 00 00                        	call 0xcb60 <lzma_alloc>
0x4f9c:   49 89 45 40                           	mov qword ptr [r13 + 0x40], rax
0x4fa0:   48 85 c0                              	test rax, rax
0x4fa3:   74 18                                 	je 0x4fbd <.Llzma_index_hash_init.part.0+0xfd>
0x4fa5:   41 ff 45 00                           	inc dword ptr [r13]
0x4fa9:   eb 12                                 	jmp 0x4fbd <.Llzma_index_hash_init.part.0+0xfd>
0x4fab:   81 bc 24 90 00 00 00 36 10 00 00      	cmp dword ptr [rsp + 0x90], 0x1036
0x4fb6:   74 25                                 	je 0x4fdd <.Llzma_index_hash_init.part.0+0x11d>
0x4fb8:   48 03 5c 24 70                        	add rbx, qword ptr [rsp + 0x70]
0x4fbd:   4c 39 fb                              	cmp rbx, r15
0x4fc0:   73 14                                 	jae 0x4fd6 <.Llzma_index_hash_init.part.0+0x116>
0x4fc2:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x4fc7:   4c 89 fa                              	mov rdx, r15
0x4fca:   48 8b f3                              	mov rsi, rbx
0x4fcd:   e8 2e b0 ff ff                        	call 0 <.Lx86_code.part.0>
0x4fd2:   85 c0                                 	test eax, eax
0x4fd4:   75 d5                                 	jne 0x4fab <.Llzma_index_hash_init.part.0+0xeb>
0x4fd6:   31 c0                                 	xor eax, eax
0x4fd8:   e9 c8 01 00 00                        	jmp 0x51a5 <.Llzma_index_hash_init.part.0+0x2e5>
0x4fdd:   8b 4c 24 78                           	mov ecx, dword ptr [rsp + 0x78]
0x4fe1:   8b c1                                 	mov eax, ecx
0x4fe3:   66 25 40 01                           	and ax, 0x140
0x4fe7:   66 3d 40 01                           	cmp ax, 0x140
0x4feb:   75 cb                                 	jne 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x4fed:   8a 84 24 85 00 00 00                  	mov al, byte ptr [rsp + 0x85]
0x4ff4:   ff c8                                 	dec eax
0x4ff6:   3c 01                                 	cmp al, 1
0x4ff8:   77 be                                 	ja 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x4ffa:   8a 44 24 78                           	mov al, byte ptr [rsp + 0x78]
0x4ffe:   40 8a 74 24 79                        	mov sil, byte ptr [rsp + 0x79]
0x5003:   66 81 e1 40 10                        	and cx, 0x1040
0x5008:   41 89 c1                              	mov r9d, eax
0x500b:   41 80 e1 40                           	and r9b, 0x40
0x500f:   75 09                                 	jne 0x501a <.Llzma_index_hash_init.part.0+0x15a>
0x5011:   31 d2                                 	xor edx, edx
0x5013:   66 85 c9                              	test cx, cx
0x5016:   75 4a                                 	jne 0x5062 <.Llzma_index_hash_init.part.0+0x1a2>
0x5018:   eb 6a                                 	jmp 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x501a:   24 20                                 	and al, 0x20
0x501c:   44 8a 8c 24 87 00 00 00               	mov r9b, byte ptr [rsp + 0x87]
0x5024:   89 c2                                 	mov edx, eax
0x5026:   75 0e                                 	jne 0x5036 <.Llzma_index_hash_init.part.0+0x176>
0x5028:   66 85 c9                              	test cx, cx
0x502b:   74 57                                 	je 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x502d:   8a 94 24 86 00 00 00                  	mov dl, byte ptr [rsp + 0x86]
0x5034:   eb 4e                                 	jmp 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x5036:   0f b6 84 24 83 00 00 00               	movzx eax, byte ptr [rsp + 0x83]
0x503e:   8d 14 c5 00 00 00 00                  	lea edx, [rax*8]
0x5045:   83 e2 08                              	and edx, 8
0x5048:   41 09 d1                              	or r9d, edx
0x504b:   31 d2                                 	xor edx, edx
0x504d:   66 85 c9                              	test cx, cx
0x5050:   74 32                                 	je 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x5052:   03 c0                                 	add eax, eax
0x5054:   83 e0 08                              	and eax, 8
0x5057:   0a 84 24 86 00 00 00                  	or al, byte ptr [rsp + 0x86]
0x505e:   89 c2                                 	mov edx, eax
0x5060:   eb 22                                 	jmp 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x5062:   8b d6                                 	mov edx, esi
0x5064:   80 e2 10                              	and dl, 0x10
0x5067:   74 1b                                 	je 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x5069:   8a 94 24 88 00 00 00                  	mov dl, byte ptr [rsp + 0x88]
0x5070:   a8 20                                 	test al, 0x20
0x5072:   74 10                                 	je 0x5084 <.Llzma_index_hash_init.part.0+0x1c4>
0x5074:   0f b6 84 24 83 00 00 00               	movzx eax, byte ptr [rsp + 0x83]
0x507c:   c1 e0 03                              	shl eax, 3
0x507f:   83 e0 08                              	and eax, 8
0x5082:   09 c2                                 	or edx, eax
0x5084:   40 80 e6 01                           	and sil, 1
0x5088:   4c 8b 44 24 70                        	mov r8, qword ptr [rsp + 0x70]
0x508d:   0f 84 25 ff ff ff                     	je 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x5093:   8b 84 24 84 00 00 00                  	mov eax, dword ptr [rsp + 0x84]
0x509a:   48 8b b4 24 98 00 00 00               	mov rsi, qword ptr [rsp + 0x98]
0x50a2:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x50a7:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x50ac:   75 08                                 	jne 0x50b6 <.Llzma_index_hash_init.part.0+0x1f6>
0x50ae:   48 03 74 24 68                        	add rsi, qword ptr [rsp + 0x68]
0x50b3:   4c 01 c6                              	add rsi, r8
0x50b6:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x50bb:   48 39 c6                              	cmp rsi, rax
0x50be:   0f 83 f4 fe ff ff                     	jae 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x50c4:   48 85 f6                              	test rsi, rsi
0x50c7:   0f 84 eb fe ff ff                     	je 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x50cd:   33 c0                                 	xor eax, eax
0x50cf:   48 8d 7c 24 28                        	lea rdi, [rsp + 0x28]
0x50d4:   b9 10 00 00 00                        	mov ecx, 0x10
0x50d9:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x50db:   0f b7 7c 24 20                        	movzx edi, word ptr [rsp + 0x20]
0x50e0:   44 89 c9                              	mov ecx, r9d
0x50e3:   4c 8d 54 24 28                        	lea r10, [rsp + 0x28]
0x50e8:   d3 ff                                 	sar edi, cl
0x50ea:   89 f9                                 	mov ecx, edi
0x50ec:   83 e1 01                              	and ecx, 1
0x50ef:   41 89 cb                              	mov r11d, ecx
0x50f2:   74 35                                 	je 0x5129 <.Llzma_index_hash_init.part.0+0x269>
0x50f4:   88 54 24 22                           	mov byte ptr [rsp + 0x22], dl
0x50f8:   48 8d 54 24 3c                        	lea rdx, [rsp + 0x3c]
0x50fd:   b9 07 00 00 00                        	mov ecx, 7
0x5102:   49 01 d8                              	add r8, rbx
0x5105:   48 8b fa                              	mov rdi, rdx
0x5108:   4c 89 44 24 28                        	mov qword ptr [rsp + 0x28], r8
0x510d:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x510f:   48 8d 44 24 20                        	lea rax, [rsp + 0x20]
0x5114:   4c 89 7c 24 30                        	mov qword ptr [rsp + 0x30], r15
0x5119:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x511e:   48 8d 44 24 24                        	lea rax, [rsp + 0x24]
0x5123:   89 74 24 38                           	mov dword ptr [rsp + 0x38], esi
0x5127:   eb 48                                 	jmp 0x5171 <.Llzma_index_hash_init.part.0+0x2b1>
0x5129:   0f b7 44 24 24                        	movzx eax, word ptr [rsp + 0x24]
0x512e:   44 89 c9                              	mov ecx, r9d
0x5131:   d3 f8                                 	sar eax, cl
0x5133:   a8 01                                 	test al, 1
0x5135:   0f 84 7d fe ff ff                     	je 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x513b:   88 54 24 26                           	mov byte ptr [rsp + 0x26], dl
0x513f:   49 01 d8                              	add r8, rbx
0x5142:   48 8d 54 24 3c                        	lea rdx, [rsp + 0x3c]
0x5147:   44 89 d8                              	mov eax, r11d
0x514a:   b9 07 00 00 00                        	mov ecx, 7
0x514f:   48 8b fa                              	mov rdi, rdx
0x5152:   4c 89 44 24 28                        	mov qword ptr [rsp + 0x28], r8
0x5157:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5159:   4c 89 7c 24 30                        	mov qword ptr [rsp + 0x30], r15
0x515e:   48 8d 44 24 24                        	lea rax, [rsp + 0x24]
0x5163:   89 74 24 38                           	mov dword ptr [rsp + 0x38], esi
0x5167:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x516c:   48 8d 44 24 20                        	lea rax, [rsp + 0x20]
0x5171:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x5175:   4c 89 d6                              	mov rsi, r10
0x5178:   48 89 44 24 48                        	mov qword ptr [rsp + 0x48], rax
0x517d:   4c 89 64 24 58                        	mov qword ptr [rsp + 0x58], r12
0x5182:   4c 89 74 24 60                        	mov qword ptr [rsp + 0x60], r14
0x5187:   e8 34 f9 ff ff                        	call 0x4ac0 <.Llzma_index_iter_locate.1>
0x518c:   85 c0                                 	test eax, eax
0x518e:   75 10                                 	jne 0x51a0 <.Llzma_index_hash_init.part.0+0x2e0>
0x5190:   83 7c 24 50 00                        	cmp dword ptr [rsp + 0x50], 0
0x5195:   0f 84 1d fe ff ff                     	je 0x4fb8 <.Llzma_index_hash_init.part.0+0xf8>
0x519b:   e9 36 fe ff ff                        	jmp 0x4fd6 <.Llzma_index_hash_init.part.0+0x116>
0x51a0:   b8 01 00 00 00                        	mov eax, 1
0x51a5:   48 81 c4 c0 00 00 00                  	add rsp, 0xc0
0x51ac:   5b                                    	pop rbx
0x51ad:   41 5c                                 	pop r12
0x51af:   41 5d                                 	pop r13
0x51b1:   41 5e                                 	pop r14
0x51b3:   41 5f                                 	pop r15
0x51b5:   c3                                    	ret 
; section: .text.lzma_lz_decoder_inia
; function: .Llzma_lz_decoder_init.0 at 0x51c0 -- 0x53ee
0x51c0:   f3 0f 1e fa                           	endbr64 
0x51c4:   41 57                                 	push r15
0x51c6:   49 89 f7                              	mov r15, rsi
0x51c9:   be 0a 00 00 00                        	mov esi, 0xa
0x51ce:   41 56                                 	push r14
0x51d0:   41 55                                 	push r13
0x51d2:   49 89 fd                              	mov r13, rdi
0x51d5:   31 ff                                 	xor edi, edi
0x51d7:   41 54                                 	push r12
0x51d9:   49 89 d4                              	mov r12, rdx
0x51dc:   31 d2                                 	xor edx, edx
0x51de:   53                                    	push rbx
0x51df:   48 89 cb                              	mov rbx, rcx
0x51e2:   31 c9                                 	xor ecx, ecx
0x51e4:   48 83 ec 10                           	sub rsp, 0x10
0x51e8:   e8 f3 59 00 00                        	call 0xabe0 <.Llzma_index_iter_rewind.cold>
0x51ed:   85 c0                                 	test eax, eax
0x51ef:   0f 84 e9 01 00 00                     	je 0x53de <.Llzma_lz_decoder_init.0+0x21e>
0x51f5:   bf 01 00 00 00                        	mov edi, 1
0x51fa:   e8 41 ee ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x51ff:   33 d2                                 	xor edx, edx
0x5201:   be e0 06 00 00                        	mov esi, 0x6e0
0x5206:   49 89 c6                              	mov r14, rax
0x5209:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x520d:   48 8b 78 20                           	mov rdi, qword ptr [rax + 0x20]
0x5211:   49 89 7e 10                           	mov qword ptr [r14 + 0x10], rdi
0x5215:   e8 46 c6 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x521a:   49 8b 55 08                           	mov rdx, qword ptr [r13 + 8]
0x521e:   48 8b 4a 18                           	mov rcx, qword ptr [rdx + 0x18]
0x5222:   83 79 4c 00                           	cmp dword ptr [rcx + 0x4c], 0
0x5226:   0f 84 88 01 00 00                     	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x522c:   48 85 c0                              	test rax, rax
0x522f:   74 15                                 	je 0x5246 <.Llzma_lz_decoder_init.0+0x86>
0x5231:   48 8b 52 20                           	mov rdx, qword ptr [rdx + 0x20]
0x5235:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x5239:   48 03 02                              	add rax, qword ptr [rdx]
0x523c:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x5242:   48 89 43 40                           	mov qword ptr [rbx + 0x40], rax
0x5246:   4c 89 f6                              	mov rsi, r14
0x5249:   bf f8 06 00 00                        	mov edi, 0x6f8
0x524e:   e8 0d 79 00 00                        	call 0xcb60 <lzma_alloc>
0x5253:   48 89 83 98 00 00 00                  	mov qword ptr [rbx + 0x98], rax
0x525a:   48 85 c0                              	test rax, rax
0x525d:   74 06                                 	je 0x5265 <.Llzma_lz_decoder_init.0+0xa5>
0x525f:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x5265:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x5269:   31 d2                                 	xor edx, edx
0x526b:   be 68 02 00 00                        	mov esi, 0x268
0x5270:   48 8b 78 20                           	mov rdi, qword ptr [rax + 0x20]
0x5274:   e8 e7 c5 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5279:   4c 89 f6                              	mov rsi, r14
0x527c:   bf e8 07 00 00                        	mov edi, 0x7e8
0x5281:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x5286:   e8 d5 78 00 00                        	call 0xcb60 <lzma_alloc>
0x528b:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x5290:   48 85 c0                              	test rax, rax
0x5293:   48 89 43 50                           	mov qword ptr [rbx + 0x50], rax
0x5297:   74 06                                 	je 0x529f <.Llzma_lz_decoder_init.0+0xdf>
0x5299:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x529f:   49 8b 4d 08                           	mov rcx, qword ptr [r13 + 8]
0x52a3:   48 85 d2                              	test rdx, rdx
0x52a6:   74 15                                 	je 0x52bd <.Llzma_lz_decoder_init.0+0xfd>
0x52a8:   48 8b 71 20                           	mov rsi, qword ptr [rcx + 0x20]
0x52ac:   48 8b 42 08                           	mov rax, qword ptr [rdx + 8]
0x52b0:   48 03 06                              	add rax, qword ptr [rsi]
0x52b3:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x52b9:   48 89 43 48                           	mov qword ptr [rbx + 0x48], rax
0x52bd:   48 8b 79 08                           	mov rdi, qword ptr [rcx + 8]
0x52c1:   33 d2                                 	xor edx, edx
0x52c3:   be c8 09 00 00                        	mov esi, 0x9c8
0x52c8:   e8 93 c5 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x52cd:   48 85 c0                              	test rax, rax
0x52d0:   0f 84 de 00 00 00                     	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x52d6:   49 8b 55 08                           	mov rdx, qword ptr [r13 + 8]
0x52da:   48 8b 70 08                           	mov rsi, qword ptr [rax + 8]
0x52de:   b9 04 00 00 00                        	mov ecx, 4
0x52e3:   48 8b 7a 08                           	mov rdi, qword ptr [rdx + 8]
0x52e7:   48 8b 50 10                           	mov rdx, qword ptr [rax + 0x10]
0x52eb:   48 03 37                              	add rsi, qword ptr [rdi]
0x52ee:   49 89 94 24 08 01 00 00               	mov qword ptr [r12 + 0x108], rdx
0x52f6:   49 89 b4 24 00 01 00 00               	mov qword ptr [r12 + 0x100], rsi
0x52fe:   e8 7d c0 ff ff                        	call 0x1380 <.Lparse_bcj.0>
0x5303:   85 c0                                 	test eax, eax
0x5305:   0f 84 a9 00 00 00                     	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x530b:   48 8b cb                              	mov rcx, rbx
0x530e:   4c 89 e2                              	mov rdx, r12
0x5311:   4c 89 fe                              	mov rsi, r15
0x5314:   4c 89 ef                              	mov rdi, r13
0x5317:   e8 44 ed ff ff                        	call 0x4060 <.Llzma_delta_props_encode.part.0>
0x531c:   85 c0                                 	test eax, eax
0x531e:   0f 84 90 00 00 00                     	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x5324:   4c 89 f6                              	mov rsi, r14
0x5327:   bf 28 0b 00 00                        	mov edi, 0xb28
0x532c:   e8 2f 78 00 00                        	call 0xcb60 <lzma_alloc>
0x5331:   48 89 83 c0 00 00 00                  	mov qword ptr [rbx + 0xc0], rax
0x5338:   48 85 c0                              	test rax, rax
0x533b:   74 06                                 	je 0x5343 <.Llzma_lz_decoder_init.0+0x183>
0x533d:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x5343:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x5347:   48 89 d9                              	mov rcx, rbx
0x534a:   4c 89 e2                              	mov rdx, r12
0x534d:   48 8b 70 20                           	mov rsi, qword ptr [rax + 0x20]
0x5351:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x5355:   e8 f6 ef ff ff                        	call 0x4350 <.Llzma_filter_flags_decode.0>
0x535a:   85 c0                                 	test eax, eax
0x535c:   74 56                                 	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x535e:   49 8b 37                              	mov rsi, qword ptr [r15]
0x5361:   48 89 d9                              	mov rcx, rbx
0x5364:   4c 89 e2                              	mov rdx, r12
0x5367:   4c 89 ef                              	mov rdi, r13
0x536a:   e8 51 fb ff ff                        	call 0x4ec0 <.Llzma_index_hash_init.part.0>
0x536f:   85 c0                                 	test eax, eax
0x5371:   74 41                                 	je 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x5373:   31 c0                                 	xor eax, eax
0x5375:   b9 10 00 00 00                        	mov ecx, 0x10
0x537a:   4c 89 e7                              	mov rdi, r12
0x537d:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x537f:   49 8b 94 24 f8 00 00 00               	mov rdx, qword ptr [r12 + 0xf8]
0x5387:   8b 42 08                              	mov eax, dword ptr [rdx + 8]
0x538a:   83 f8 08                              	cmp eax, 8
0x538d:   77 25                                 	ja 0x53b4 <.Llzma_lz_decoder_init.0+0x1f4>
0x538f:   85 c0                                 	test eax, eax
0x5391:   75 07                                 	jne 0x539a <.Llzma_lz_decoder_init.0+0x1da>
0x5393:   b8 01 00 00 00                        	mov eax, 1
0x5398:   eb 46                                 	jmp 0x53e0 <.Llzma_lz_decoder_init.0+0x220>
0x539a:   48 8b 32                              	mov rsi, qword ptr [rdx]
0x539d:   48 c1 e0 03                           	shl rax, 3
0x53a1:   31 d2                                 	xor edx, edx
0x53a3:   8a 0c 16                              	mov cl, byte ptr [rsi + rdx]
0x53a6:   41 88 0c 14                           	mov byte ptr [r12 + rdx], cl
0x53aa:   48 ff c2                              	inc rdx
0x53ad:   48 39 d0                              	cmp rax, rdx
0x53b0:   75 f1                                 	jne 0x53a3 <.Llzma_lz_decoder_init.0+0x1e3>
0x53b2:   eb df                                 	jmp 0x5393 <.Llzma_lz_decoder_init.0+0x1d3>
0x53b4:   48 8b bb 98 00 00 00                  	mov rdi, qword ptr [rbx + 0x98]
0x53bb:   4c 89 f6                              	mov rsi, r14
0x53be:   e8 95 77 00 00                        	call 0xcb58 <lzma_free>
0x53c3:   48 8b 7b 50                           	mov rdi, qword ptr [rbx + 0x50]
0x53c7:   4c 89 f6                              	mov rsi, r14
0x53ca:   e8 89 77 00 00                        	call 0xcb58 <lzma_free>
0x53cf:   48 8b bb c0 00 00 00                  	mov rdi, qword ptr [rbx + 0xc0]
0x53d6:   4c 89 f6                              	mov rsi, r14
0x53d9:   e8 7a 77 00 00                        	call 0xcb58 <lzma_free>
0x53de:   33 c0                                 	xor eax, eax
0x53e0:   48 83 c4 10                           	add rsp, 0x10
0x53e4:   5b                                    	pop rbx
0x53e5:   41 5c                                 	pop r12
0x53e7:   41 5d                                 	pop r13
0x53e9:   41 5e                                 	pop r14
0x53eb:   41 5f                                 	pop r15
0x53ed:   c3                                    	ret 
; section: .text.lzma_lzma_optimum_fasa
; function: .Llzma_lzma_optimum_fast.0 at 0x53f0 -- 0x5801
0x53f0:   f3 0f 1e fa                           	endbr64 
0x53f4:   41 57                                 	push r15
0x53f6:   41 56                                 	push r14
0x53f8:   41 55                                 	push r13
0x53fa:   49 89 f5                              	mov r13, rsi
0x53fd:   be c8 01 00 00                        	mov esi, 0x1c8
0x5402:   41 54                                 	push r12
0x5404:   4d 89 c4                              	mov r12, r8
0x5407:   53                                    	push rbx
0x5408:   48 89 cb                              	mov rbx, rcx
0x540b:   b9 1d 00 00 00                        	mov ecx, 0x1d
0x5410:   48 81 ec c0 00 00 00                  	sub rsp, 0xc0
0x5417:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x541b:   31 ff                                 	xor edi, edi
0x541d:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x5422:   31 d2                                 	xor edx, edx
0x5424:   e8 87 57 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x5429:   85 c0                                 	test eax, eax
0x542b:   0f 84 ac 03 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x5431:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x5438:   4c 8d 74 24 60                        	lea r14, [rsp + 0x60]
0x543d:   be 04 00 00 00                        	mov esi, 4
0x5442:   48 8b 15 00 00 00 00                  	mov rdx, qword ptr [rip]
0x5449:   48 b9 c8 01 00 00 1b 00 00 00         	movabs rcx, 0x1b000001c8
0x5453:   4c 89 f7                              	mov rdi, r14
0x5456:   48 89 44 24 60                        	mov qword ptr [rsp + 0x60], rax
0x545b:   48 b8 c8 01 00 00 1c 00 00 00         	movabs rax, 0x1c000001c8
0x5465:   48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x546a:   b8 01 00 00 00                        	mov eax, 1
0x546f:   48 c1 e0 20                           	shl rax, 0x20
0x5473:   48 89 54 24 78                        	mov qword ptr [rsp + 0x78], rdx
0x5478:   48 8b 15 00 00 00 00                  	mov rdx, qword ptr [rip]
0x547f:   48 89 44 24 70                        	mov qword ptr [rsp + 0x70], rax
0x5484:   48 89 84 24 88 00 00 00               	mov qword ptr [rsp + 0x88], rax
0x548c:   48 89 84 24 a0 00 00 00               	mov qword ptr [rsp + 0xa0], rax
0x5494:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x549b:   48 89 94 24 90 00 00 00               	mov qword ptr [rsp + 0x90], rdx
0x54a3:   48 8b 15 00 00 00 00                  	mov rdx, qword ptr [rip]
0x54aa:   48 89 84 24 a8 00 00 00               	mov qword ptr [rsp + 0xa8], rax
0x54b2:   48 b8 c4 01 00 00 19 00 00 00         	movabs rax, 0x19000001c4
0x54bc:   48 89 84 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rax
0x54c4:   b8 01 00 00 40                        	mov eax, 0x40000001
0x54c9:   48 c1 e0 02                           	shl rax, 2
0x54cd:   48 89 8c 24 80 00 00 00               	mov qword ptr [rsp + 0x80], rcx
0x54d5:   48 b9 c8 01 00 00 1a 00 00 00         	movabs rcx, 0x1a000001c8
0x54df:   48 89 8c 24 98 00 00 00               	mov qword ptr [rsp + 0x98], rcx
0x54e7:   48 89 84 24 b8 00 00 00               	mov qword ptr [rsp + 0xb8], rax
0x54ef:   e8 0c 57 00 00                        	call 0xac00 <.Llzma_index_memusage.0>
0x54f4:   85 c0                                 	test eax, eax
0x54f6:   0f 84 e1 02 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x54fc:   31 c0                                 	xor eax, eax
0x54fe:   b9 18 00 00 00                        	mov ecx, 0x18
0x5503:   4c 89 f7                              	mov rdi, r14
0x5506:   31 f6                                 	xor esi, esi
0x5508:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x550a:   bf 01 00 00 00                        	mov edi, 1
0x550f:   48 89 74 24 30                        	mov qword ptr [rsp + 0x30], rsi
0x5514:   48 89 74 24 38                        	mov qword ptr [rsp + 0x38], rsi
0x5519:   48 89 74 24 40                        	mov qword ptr [rsp + 0x40], rsi
0x551e:   48 89 74 24 48                        	mov qword ptr [rsp + 0x48], rsi
0x5523:   48 89 74 24 50                        	mov qword ptr [rsp + 0x50], rsi
0x5528:   48 89 74 24 58                        	mov qword ptr [rsp + 0x58], rsi
0x552d:   e8 0e eb ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x5532:   bf 18 01 00 00                        	mov edi, 0x118
0x5537:   4c 89 68 10                           	mov qword ptr [rax + 0x10], r13
0x553b:   48 89 c6                              	mov rsi, rax
0x553e:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x5543:   e8 18 76 00 00                        	call 0xcb60 <lzma_alloc>
0x5548:   48 89 83 80 00 00 00                  	mov qword ptr [rbx + 0x80], rax
0x554f:   48 85 c0                              	test rax, rax
0x5552:   74 06                                 	je 0x555a <.Llzma_lzma_optimum_fast.0+0x16a>
0x5554:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x555a:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x555e:   48 8d 74 24 30                        	lea rsi, [rsp + 0x30]
0x5563:   e8 38 c9 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x5568:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x556d:   48 85 c0                              	test rax, rax
0x5570:   0f 84 67 02 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x5576:   48 8b 44 24 30                        	mov rax, qword ptr [rsp + 0x30]
0x557b:   31 d2                                 	xor edx, edx
0x557d:   be 08 04 00 00                        	mov esi, 0x408
0x5582:   4c 89 ef                              	mov rdi, r13
0x5585:   48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x558a:   e8 d1 c2 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x558f:   31 d2                                 	xor edx, edx
0x5591:   be 88 01 00 00                        	mov esi, 0x188
0x5596:   4c 89 ef                              	mov rdi, r13
0x5599:   49 89 c7                              	mov r15, rax
0x559c:   e8 bf c2 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x55a1:   48 85 c0                              	test rax, rax
0x55a4:   0f 84 33 02 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x55aa:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x55ae:   48 8d 74 24 38                        	lea rsi, [rsp + 0x38]
0x55b3:   31 d2                                 	xor edx, edx
0x55b5:   e8 76 cb ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x55ba:   49 89 c6                              	mov r14, rax
0x55bd:   48 85 c0                              	test rax, rax
0x55c0:   0f 84 17 02 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x55c6:   48 8b 44 24 38                        	mov rax, qword ptr [rsp + 0x38]
0x55cb:   48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x55d0:   4d 85 ff                              	test r15, r15
0x55d3:   74 15                                 	je 0x55ea <.Llzma_lzma_optimum_fast.0+0x1fa>
0x55d5:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x55d9:   49 03 45 00                           	add rax, qword ptr [r13]
0x55dd:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x55e3:   48 89 83 88 00 00 00                  	mov qword ptr [rbx + 0x88], rax
0x55ea:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x55ef:   bf 38 08 00 00                        	mov edi, 0x838
0x55f4:   e8 67 75 00 00                        	call 0xcb60 <lzma_alloc>
0x55f9:   48 89 83 a0 00 00 00                  	mov qword ptr [rbx + 0xa0], rax
0x5600:   48 85 c0                              	test rax, rax
0x5603:   74 06                                 	je 0x560b <.Llzma_lzma_optimum_fast.0+0x21b>
0x5605:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x560b:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x560f:   48 8d 7c 24 40                        	lea rdi, [rsp + 0x40]
0x5614:   48 89 d9                              	mov rcx, rbx
0x5617:   4c 89 ea                              	mov rdx, r13
0x561a:   e8 11 cf ff ff                        	call 0x2530 <function_2530>
0x561f:   85 c0                                 	test eax, eax
0x5621:   0f 84 b6 01 00 00                     	je 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x5627:   4c 8b 6c 24 40                        	mov r13, qword ptr [rsp + 0x40]
0x562c:   4c 8b 44 24 18                        	mov r8, qword ptr [rsp + 0x18]
0x5631:   ba 30 e2 00 00                        	mov edx, 0xe230
0x5636:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x563b:   4d 89 6c 24 78                        	mov qword ptr [r12 + 0x78], r13
0x5640:   49 8d 75 04                           	lea rsi, [r13 + 4]
0x5644:   4c 89 ef                              	mov rdi, r13
0x5647:   49 01 c0                              	add r8, rax
0x564a:   4c 89 44 24 18                        	mov qword ptr [rsp + 0x18], r8
0x564f:   e8 4c b4 ff ff                        	call 0xaa0 <.Llzma_block_buffer_encode.0>
0x5654:   4c 8b 44 24 18                        	mov r8, qword ptr [rsp + 0x18]
0x5659:   85 c0                                 	test eax, eax
0x565b:   0f 95 c0                              	setne al
0x565e:   0f b6 c0                              	movzx eax, al
0x5661:   41 89 04 24                           	mov dword ptr [r12], eax
0x5665:   74 21                                 	je 0x5688 <.Llzma_lzma_optimum_fast.0+0x298>
0x5667:   31 f6                                 	xor esi, esi
0x5669:   48 8d 54 24 48                        	lea rdx, [rsp + 0x48]
0x566e:   41 b9 01 00 00 00                     	mov r9d, 1
0x5674:   4c 89 e9                              	mov rcx, r13
0x5677:   4c 89 ef                              	mov rdi, r13
0x567a:   e8 01 b5 ff ff                        	call 0xb80 <.Llzma2_encoder_init.1>
0x567f:   85 c0                                 	test eax, eax
0x5681:   75 0a                                 	jne 0x568d <.Llzma_lzma_optimum_fast.0+0x29d>
0x5683:   e9 55 01 00 00                        	jmp 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x5688:   4c 89 44 24 48                        	mov qword ptr [rsp + 0x48], r8
0x568d:   48 8b 74 24 28                        	mov rsi, qword ptr [rsp + 0x28]
0x5692:   41 54                                 	push r12
0x5694:   4c 89 f7                              	mov rdi, r14
0x5697:   4c 89 ea                              	mov rdx, r13
0x569a:   ff 74 24 08                           	push qword ptr [rsp + 8]
0x569e:   4c 8b 44 24 20                        	mov r8, qword ptr [rsp + 0x20]
0x56a3:   48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x56a8:   4c 01 f6                              	add rsi, r14
0x56ab:   4c 8d 4c 24 68                        	lea r9, [rsp + 0x68]
0x56b0:   48 89 74 24 28                        	mov qword ptr [rsp + 0x28], rsi
0x56b5:   e8 a6 df ff ff                        	call 0x3660 <.Llzma_buf_cpy.0>
0x56ba:   4c 8b 4c 24 10                        	mov r9, qword ptr [rsp + 0x10]
0x56bf:   4c 89 ea                              	mov rdx, r13
0x56c2:   4c 89 f7                              	mov rdi, r14
0x56c5:   48 8b 4c 24 58                        	mov rcx, qword ptr [rsp + 0x58]
0x56ca:   48 8b 74 24 28                        	mov rsi, qword ptr [rsp + 0x28]
0x56cf:   4c 8d 44 24 60                        	lea r8, [rsp + 0x60]
0x56d4:   41 89 c7                              	mov r15d, eax
0x56d7:   e8 44 dc ff ff                        	call 0x3320 <function_3320>
0x56dc:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x56e1:   bf 28 0c 00 00                        	mov edi, 0xc28
0x56e6:   41 89 c6                              	mov r14d, eax
0x56e9:   e8 72 74 00 00                        	call 0xcb60 <lzma_alloc>
0x56ee:   48 89 83 c8 00 00 00                  	mov qword ptr [rbx + 0xc8], rax
0x56f5:   5a                                    	pop rdx
0x56f6:   59                                    	pop rcx
0x56f7:   48 85 c0                              	test rax, rax
0x56fa:   74 06                                 	je 0x5702 <.Llzma_lzma_optimum_fast.0+0x312>
0x56fc:   ff 83 20 01 00 00                     	inc dword ptr [rbx + 0x120]
0x5702:   45 85 ff                              	test r15d, r15d
0x5705:   74 42                                 	je 0x5749 <.Llzma_lzma_optimum_fast.0+0x359>
0x5707:   45 85 f6                              	test r14d, r14d
0x570a:   74 38                                 	je 0x5744 <.Llzma_lzma_optimum_fast.0+0x354>
0x570c:   4c 8b 6c 24 58                        	mov r13, qword ptr [rsp + 0x58]
0x5711:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x5716:   4c 89 e1                              	mov rcx, r12
0x5719:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x571d:   4c 89 ef                              	mov rdi, r13
0x5720:   4c 3b 6c 24 50                        	cmp r13, qword ptr [rsp + 0x50]
0x5725:   75 2c                                 	jne 0x5753 <.Llzma_lzma_optimum_fast.0+0x363>
0x5727:   e8 04 e6 ff ff                        	call 0x3d30 <.Llzma_lzma2_encoder_memusage.0>
0x572c:   83 f8 07                              	cmp eax, 7
0x572f:   0f 86 a8 00 00 00                     	jbe 0x57dd <.Llzma_lzma_optimum_fast.0+0x3ed>
0x5735:   4d 89 6c 24 28                        	mov qword ptr [r12 + 0x28], r13
0x573a:   b8 01 00 00 00                        	mov eax, 1
0x573f:   e9 ac 00 00 00                        	jmp 0x57f0 <.Llzma_lzma_optimum_fast.0+0x400>
0x5744:   45 85 ff                              	test r15d, r15d
0x5747:   75 14                                 	jne 0x575d <.Llzma_lzma_optimum_fast.0+0x36d>
0x5749:   45 85 f6                              	test r14d, r14d
0x574c:   74 5c                                 	je 0x57aa <.Llzma_lzma_optimum_fast.0+0x3ba>
0x574e:   45 31 ed                              	xor r13d, r13d
0x5751:   eb 2a                                 	jmp 0x577d <.Llzma_lzma_optimum_fast.0+0x38d>
0x5753:   e8 d8 e5 ff ff                        	call 0x3d30 <.Llzma_lzma2_encoder_memusage.0>
0x5758:   41 89 c5                              	mov r13d, eax
0x575b:   eb 20                                 	jmp 0x577d <.Llzma_lzma_optimum_fast.0+0x38d>
0x575d:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x5762:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x5766:   4c 89 e1                              	mov rcx, r12
0x5769:   48 8b 7c 24 58                        	mov rdi, qword ptr [rsp + 0x58]
0x576e:   e8 bd e5 ff ff                        	call 0x3d30 <.Llzma_lzma2_encoder_memusage.0>
0x5773:   41 89 c5                              	mov r13d, eax
0x5776:   31 c0                                 	xor eax, eax
0x5778:   45 85 f6                              	test r14d, r14d
0x577b:   74 16                                 	je 0x5793 <.Llzma_lzma_optimum_fast.0+0x3a3>
0x577d:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x5782:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x5786:   4c 89 e1                              	mov rcx, r12
0x5789:   48 8b 7c 24 50                        	mov rdi, qword ptr [rsp + 0x50]
0x578e:   e8 9d e5 ff ff                        	call 0x3d30 <.Llzma_lzma2_encoder_memusage.0>
0x5793:   41 39 c5                              	cmp r13d, eax
0x5796:   72 0d                                 	jb 0x57a5 <.Llzma_lzma_optimum_fast.0+0x3b5>
0x5798:   41 83 fd 07                           	cmp r13d, 7
0x579c:   76 07                                 	jbe 0x57a5 <.Llzma_lzma_optimum_fast.0+0x3b5>
0x579e:   4c 8b 6c 24 58                        	mov r13, qword ptr [rsp + 0x58]
0x57a3:   eb 90                                 	jmp 0x5735 <.Llzma_lzma_optimum_fast.0+0x345>
0x57a5:   44 39 e8                              	cmp eax, r13d
0x57a8:   73 37                                 	jae 0x57e1 <.Llzma_lzma_optimum_fast.0+0x3f1>
0x57aa:   48 8b bb 80 00 00 00                  	mov rdi, qword ptr [rbx + 0x80]
0x57b1:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x57b6:   e8 9d 73 00 00                        	call 0xcb58 <lzma_free>
0x57bb:   48 8b bb a0 00 00 00                  	mov rdi, qword ptr [rbx + 0xa0]
0x57c2:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x57c7:   e8 8c 73 00 00                        	call 0xcb58 <lzma_free>
0x57cc:   48 8b bb c8 00 00 00                  	mov rdi, qword ptr [rbx + 0xc8]
0x57d3:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0x57d8:   e8 7b 73 00 00                        	call 0xcb58 <lzma_free>
0x57dd:   31 c0                                 	xor eax, eax
0x57df:   eb 0f                                 	jmp 0x57f0 <.Llzma_lzma_optimum_fast.0+0x400>
0x57e1:   83 f8 07                              	cmp eax, 7
0x57e4:   76 c4                                 	jbe 0x57aa <.Llzma_lzma_optimum_fast.0+0x3ba>
0x57e6:   4c 8b 6c 24 50                        	mov r13, qword ptr [rsp + 0x50]
0x57eb:   e9 45 ff ff ff                        	jmp 0x5735 <.Llzma_lzma_optimum_fast.0+0x345>
0x57f0:   48 81 c4 c0 00 00 00                  	add rsp, 0xc0
0x57f7:   5b                                    	pop rbx
0x57f8:   41 5c                                 	pop r12
0x57fa:   41 5d                                 	pop r13
0x57fc:   41 5e                                 	pop r14
0x57fe:   41 5f                                 	pop r15
0x5800:   c3                                    	ret 
; section: .text.microlzma_encoder_inia
; function: .Lmicrolzma_encoder_init.1 at 0x5810 -- 0x6f44
0x5810:   f3 0f 1e fa                           	endbr64 
0x5814:   41 57                                 	push r15
0x5816:   31 c0                                 	xor eax, eax
0x5818:   49 89 ff                              	mov r15, rdi
0x581b:   b9 56 02 00 00                        	mov ecx, 0x256
0x5820:   41 56                                 	push r14
0x5822:   31 f6                                 	xor esi, esi
0x5824:   41 55                                 	push r13
0x5826:   41 54                                 	push r12
0x5828:   53                                    	push rbx
0x5829:   48 81 ec 30 0b 00 00                  	sub rsp, 0xb30
0x5830:   48 8d bc 24 d8 01 00 00               	lea rdi, [rsp + 0x1d8]
0x5838:   4c 8d b4 24 d8 01 00 00               	lea r14, [rsp + 0x1d8]
0x5840:   89 b4 24 8c 00 00 00                  	mov dword ptr [rsp + 0x8c], esi
0x5847:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5849:   48 8d 84 24 40 02 00 00               	lea rax, [rsp + 0x240]
0x5851:   33 ff                                 	xor edi, edi
0x5853:   49 8b 8f 80 00 00 00                  	mov rcx, qword ptr [r15 + 0x80]
0x585a:   48 89 04 24                           	mov qword ptr [rsp], rax
0x585e:   4c 8d ac 24 08 02 00 00               	lea r13, [rsp + 0x208]
0x5866:   48 89 84 24 08 02 00 00               	mov qword ptr [rsp + 0x208], rax
0x586e:   48 8d 84 24 40 03 00 00               	lea rax, [rsp + 0x340]
0x5876:   48 89 84 24 10 02 00 00               	mov qword ptr [rsp + 0x210], rax
0x587e:   48 8d 84 24 40 04 00 00               	lea rax, [rsp + 0x440]
0x5886:   48 89 84 24 18 02 00 00               	mov qword ptr [rsp + 0x218], rax
0x588e:   48 8d 84 24 40 05 00 00               	lea rax, [rsp + 0x540]
0x5896:   48 89 bc 24 90 00 00 00               	mov qword ptr [rsp + 0x90], rdi
0x589e:   48 89 bc 24 98 00 00 00               	mov qword ptr [rsp + 0x98], rdi
0x58a6:   48 89 bc 24 a0 00 00 00               	mov qword ptr [rsp + 0xa0], rdi
0x58ae:   48 89 bc 24 a8 00 00 00               	mov qword ptr [rsp + 0xa8], rdi
0x58b6:   48 89 bc 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rdi
0x58be:   48 8b f9                              	mov rdi, rcx
0x58c1:   48 89 84 24 20 02 00 00               	mov qword ptr [rsp + 0x220], rax
0x58c9:   48 8d 84 24 40 06 00 00               	lea rax, [rsp + 0x640]
0x58d1:   48 89 84 24 28 02 00 00               	mov qword ptr [rsp + 0x228], rax
0x58d9:   4c 89 b4 24 30 02 00 00               	mov qword ptr [rsp + 0x230], r14
0x58e1:   4c 89 ac 24 38 02 00 00               	mov qword ptr [rsp + 0x238], r13
0x58e9:   e8 92 e6 ff ff                        	call 0x3f80 <.Llzma_stream_header_encode.part.0>
0x58ee:   0f b6 41 10                           	movzx eax, byte ptr [rcx + 0x10]
0x58f2:   48 8b 51 08                           	mov rdx, qword ptr [rcx + 8]
0x58f6:   48 89 41 18                           	mov qword ptr [rcx + 0x18], rax
0x58fa:   48 8b 5c c2 18                        	mov rbx, qword ptr [rdx + rax*8 + 0x18]
0x58ff:   48 8b 41 28                           	mov rax, qword ptr [rcx + 0x28]
0x5903:   48 8b d0                              	mov rdx, rax
0x5906:   48 2b d3                              	sub rdx, rbx
0x5909:   48 3b d8                              	cmp rbx, rax
0x590c:   72 06                                 	jb 0x5914 <.Lmicrolzma_encoder_init.1+0x104>
0x590e:   48 8b d3                              	mov rdx, rbx
0x5911:   48 29 c2                              	sub rdx, rax
0x5914:   48 81 fa 00 00 05 00                  	cmp rdx, 0x50000
0x591b:   0f 8f 1a 01 00 00                     	jg 0x5a3b <.Lmicrolzma_encoder_init.1+0x22b>
0x5921:   48 81 e3 00 f0 ff ff                  	and rbx, 0xfffffffffffff000
0x5928:   4c 8d a3 00 00 fe ff                  	lea r12, [rbx - 0x20000]
0x592f:   31 f6                                 	xor esi, esi
0x5931:   48 8b fb                              	mov rdi, rbx
0x5934:   e8 67 4f 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x5939:   3d 00 03 00 00                        	cmp eax, 0x300
0x593e:   74 11                                 	je 0x5951 <.Lmicrolzma_encoder_init.1+0x141>
0x5940:   48 81 eb 00 10 00 00                  	sub rbx, 0x1000
0x5947:   4c 39 e3                              	cmp rbx, r12
0x594a:   75 e3                                 	jne 0x592f <.Lmicrolzma_encoder_init.1+0x11f>
0x594c:   e9 ea 00 00 00                        	jmp 0x5a3b <.Lmicrolzma_encoder_init.1+0x22b>
0x5951:   48 8d 84 24 b0 00 00 00               	lea rax, [rsp + 0xb0]
0x5959:   48 8d bc 24 d0 00 00 00               	lea rdi, [rsp + 0xd0]
0x5961:   4c 89 ac 24 d0 00 00 00               	mov qword ptr [rsp + 0xd0], r13
0x5969:   48 89 84 24 e0 00 00 00               	mov qword ptr [rsp + 0xe0], rax
0x5971:   49 8b 87 80 00 00 00                  	mov rax, qword ptr [r15 + 0x80]
0x5978:   48 89 9c 24 d8 00 00 00               	mov qword ptr [rsp + 0xd8], rbx
0x5980:   48 8b 40 28                           	mov rax, qword ptr [rax + 0x28]
0x5984:   48 89 84 24 e8 00 00 00               	mov qword ptr [rsp + 0xe8], rax
0x598c:   e8 2f e3 ff ff                        	call 0x3cc0 <.Llzma_filter_decoder_is_supported.part.0>
0x5991:   85 c0                                 	test eax, eax
0x5993:   0f 84 a2 00 00 00                     	je 0x5a3b <.Lmicrolzma_encoder_init.1+0x22b>
0x5999:   bf 01 00 00 00                        	mov edi, 1
0x599e:   e8 9d e6 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x59a3:   33 d2                                 	xor edx, edx
0x59a5:   48 8d 8c 24 10 0b 00 00               	lea rcx, [rsp + 0xb10]
0x59ad:   48 89 84 24 28 0b 00 00               	mov qword ptr [rsp + 0xb28], rax
0x59b5:   40 8a 34 10                           	mov sil, byte ptr [rax + rdx]
0x59b9:   40 88 34 11                           	mov byte ptr [rcx + rdx], sil
0x59bd:   48 ff c2                              	inc rdx
0x59c0:   48 83 fa 18                           	cmp rdx, 0x18
0x59c4:   75 ef                                 	jne 0x59b5 <.Lmicrolzma_encoder_init.1+0x1a5>
0x59c6:   48 8d 84 24 98 00 00 00               	lea rax, [rsp + 0x98]
0x59ce:   4c 8d a4 24 40 07 00 00               	lea r12, [rsp + 0x740]
0x59d6:   4c 89 b4 24 f0 00 00 00               	mov qword ptr [rsp + 0xf0], r14
0x59de:   48 89 84 24 00 01 00 00               	mov qword ptr [rsp + 0x100], rax
0x59e6:   48 8d 84 24 a0 00 00 00               	lea rax, [rsp + 0xa0]
0x59ee:   48 8d bc 24 f0 00 00 00               	lea rdi, [rsp + 0xf0]
0x59f6:   48 89 84 24 08 01 00 00               	mov qword ptr [rsp + 0x108], rax
0x59fe:   48 8d 84 24 a8 00 00 00               	lea rax, [rsp + 0xa8]
0x5a06:   48 89 84 24 10 01 00 00               	mov qword ptr [rsp + 0x110], rax
0x5a0e:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5a12:   4c 89 ac 24 f8 00 00 00               	mov qword ptr [rsp + 0xf8], r13
0x5a1a:   48 8b 40 38                           	mov rax, qword ptr [rax + 0x38]
0x5a1e:   4c 89 a4 24 20 01 00 00               	mov qword ptr [rsp + 0x120], r12
0x5a26:   48 89 84 24 18 01 00 00               	mov qword ptr [rsp + 0x118], rax
0x5a2e:   e8 ed ef ff ff                        	call 0x4a20 <.Llzma_index_stream_flags.0>
0x5a33:   85 c0                                 	test eax, eax
0x5a35:   0f 85 96 00 00 00                     	jne 0x5ad1 <.Lmicrolzma_encoder_init.1+0x2c1>
0x5a3b:   31 d2                                 	xor edx, edx
0x5a3d:   48 89 54 24 48                        	mov qword ptr [rsp + 0x48], rdx
0x5a42:   48 8b 7c 24 48                        	mov rdi, qword ptr [rsp + 0x48]
0x5a47:   48 8d b4 24 10 0b 00 00               	lea rsi, [rsp + 0xb10]
0x5a4f:   e8 fc cc ff ff                        	call 0x2750 <function_2750>
0x5a54:   48 8b 94 24 28 0b 00 00               	mov rdx, qword ptr [rsp + 0xb28]
0x5a5c:   31 c0                                 	xor eax, eax
0x5a5e:   48 85 d2                              	test rdx, rdx
0x5a61:   75 5f                                 	jne 0x5ac2 <.Lmicrolzma_encoder_init.1+0x2b2>
0x5a63:   48 8d 94 24 d8 01 00 00               	lea rdx, [rsp + 0x1d8]
0x5a6b:   31 c0                                 	xor eax, eax
0x5a6d:   b9 56 02 00 00                        	mov ecx, 0x256
0x5a72:   33 f6                                 	xor esi, esi
0x5a74:   48 8b fa                              	mov rdi, rdx
0x5a77:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5a79:   49 8b bf 80 00 00 00                  	mov rdi, qword ptr [r15 + 0x80]
0x5a80:   e8 3b e5 ff ff                        	call 0x3fc0 <.Llzma_block_param_decoder.0>
0x5a85:   31 c0                                 	xor eax, eax
0x5a87:   48 c7 07 01 00 00 00                  	mov qword ptr [rdi], 1
0x5a8e:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
0x5a92:   48 89 47 10                           	mov qword ptr [rdi + 0x10], rax
0x5a96:   48 89 47 18                           	mov qword ptr [rdi + 0x18], rax
0x5a9a:   48 89 47 20                           	mov qword ptr [rdi + 0x20], rax
0x5a9e:   33 c0                                 	xor eax, eax
0x5aa0:   0f a2                                 	cpuid 
0x5aa2:   85 c0                                 	test eax, eax
0x5aa4:   0f 84 87 14 00 00                     	je 0x6f31 <.Lmicrolzma_encoder_init.1+0x1721>
0x5aaa:   b8 01 00 00 00                        	mov eax, 1
0x5aaf:   0f a2                                 	cpuid 
0x5ab1:   89 47 08                              	mov dword ptr [rdi + 8], eax
0x5ab4:   89 5f 10                              	mov dword ptr [rdi + 0x10], ebx
0x5ab7:   89 4f 18                              	mov dword ptr [rdi + 0x18], ecx
0x5aba:   89 57 20                              	mov dword ptr [rdi + 0x20], edx
0x5abd:   e9 6f 14 00 00                        	jmp 0x6f31 <.Lmicrolzma_encoder_init.1+0x1721>
0x5ac2:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0x5ac5:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0x5ac8:   48 ff c0                              	inc rax
0x5acb:   48 83 f8 18                           	cmp rax, 0x18
0x5acf:   eb 90                                 	jmp 0x5a61 <.Lmicrolzma_encoder_init.1+0x251>
0x5ad1:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5ad5:   b9 5a 00 00 00                        	mov ecx, 0x5a
0x5ada:   48 8d b4 24 b0 07 00 00               	lea rsi, [rsp + 0x7b0]
0x5ae2:   48 8b 40 38                           	mov rax, qword ptr [rax + 0x38]
0x5ae6:   4c 8b 28                              	mov r13, qword ptr [rax]
0x5ae9:   49 8d 85 38 01 00 00                  	lea rax, [r13 + 0x138]
0x5af0:   49 8d 95 18 05 00 00                  	lea rdx, [r13 + 0x518]
0x5af7:   4c 89 6c 24 48                        	mov qword ptr [rsp + 0x48], r13
0x5afc:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x5b01:   49 8d 85 a0 02 00 00                  	lea rax, [r13 + 0x2a0]
0x5b08:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x5b0d:   49 8d 9d a8 04 00 00                  	lea rbx, [r13 + 0x4a8]
0x5b14:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x5b19:   33 c0                                 	xor eax, eax
0x5b1b:   4d 8d b5 c8 03 00 00                  	lea r14, [r13 + 0x3c8]
0x5b22:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5b24:   48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x5b29:   49 89 95 68 01 00 00                  	mov qword ptr [r13 + 0x168], rdx
0x5b30:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x5b35:   33 d2                                 	xor edx, edx
0x5b37:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x5b3b:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5b3f:   49 89 8d 40 01 00 00                  	mov qword ptr [r13 + 0x140], rcx
0x5b46:   4d 89 b5 58 01 00 00                  	mov qword ptr [r13 + 0x158], r14
0x5b4d:   48 8b 40 38                           	mov rax, qword ptr [rax + 0x38]
0x5b51:   49 89 9d 48 01 00 00                  	mov qword ptr [r13 + 0x148], rbx
0x5b58:   48 8b 00                              	mov rax, qword ptr [rax]
0x5b5b:   48 8b 88 80 05 00 00                  	mov rcx, qword ptr [rax + 0x580]
0x5b62:   48 05 88 05 00 00                     	add rax, 0x588
0x5b68:   49 89 95 20 02 00 00                  	mov qword ptr [r13 + 0x220], rdx
0x5b6f:   49 89 85 28 02 00 00                  	mov qword ptr [r13 + 0x228], rax
0x5b76:   49 89 8d 18 02 00 00                  	mov qword ptr [r13 + 0x218], rcx
0x5b7d:   e8 8e d1 ff ff                        	call 0x2d10 <function_2d10>
0x5b82:   48 8b bc 24 20 02 00 00               	mov rdi, qword ptr [rsp + 0x220]
0x5b8a:   33 c9                                 	xor ecx, ecx
0x5b8c:   48 8d b4 24 b8 00 00 00               	lea rsi, [rsp + 0xb8]
0x5b94:   48 89 8c 24 b8 00 00 00               	mov qword ptr [rsp + 0xb8], rcx
0x5b9c:   e8 ff c2 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x5ba1:   48 85 c0                              	test rax, rax
0x5ba4:   0f 84 98 fe ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5baa:   49 89 85 b8 01 00 00                  	mov qword ptr [r13 + 0x1b8], rax
0x5bb1:   48 03 84 24 b8 00 00 00               	add rax, qword ptr [rsp + 0xb8]
0x5bb9:   b9 4e 00 00 00                        	mov ecx, 0x4e
0x5bbe:   4c 89 ef                              	mov rdi, r13
0x5bc1:   49 89 85 c0 01 00 00                  	mov qword ptr [r13 + 0x1c0], rax
0x5bc8:   33 c0                                 	xor eax, eax
0x5bca:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x5bcf:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5bd1:   4c 89 f7                              	mov rdi, r14
0x5bd4:   49 89 b5 28 01 00 00                  	mov qword ptr [r13 + 0x128], rsi
0x5bdb:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5bdf:   48 8b 48 48                           	mov rcx, qword ptr [rax + 0x48]
0x5be3:   48 8b 40 50                           	mov rax, qword ptr [rax + 0x50]
0x5be7:   49 89 8d 10 01 00 00                  	mov qword ptr [r13 + 0x110], rcx
0x5bee:   49 8b 4f 08                           	mov rcx, qword ptr [r15 + 8]
0x5bf2:   48 8b 49 08                           	mov rcx, qword ptr [rcx + 8]
0x5bf6:   49 89 85 20 01 00 00                  	mov qword ptr [r13 + 0x120], rax
0x5bfd:   31 c0                                 	xor eax, eax
0x5bff:   49 89 8d 18 01 00 00                  	mov qword ptr [r13 + 0x118], rcx
0x5c06:   b9 38 00 00 00                        	mov ecx, 0x38
0x5c0b:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5c0d:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x5c12:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x5c16:   48 8b 00                              	mov rax, qword ptr [rax]
0x5c19:   49 89 85 d8 03 00 00                  	mov qword ptr [r13 + 0x3d8], rax
0x5c20:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5c24:   48 8b 48 70                           	mov rcx, qword ptr [rax + 0x70]
0x5c28:   48 8b 40 78                           	mov rax, qword ptr [rax + 0x78]
0x5c2c:   49 89 8d e0 03 00 00                  	mov qword ptr [r13 + 0x3e0], rcx
0x5c33:   b9 1a 00 00 00                        	mov ecx, 0x1a
0x5c38:   49 89 85 e8 03 00 00                  	mov qword ptr [r13 + 0x3e8], rax
0x5c3f:   33 c0                                 	xor eax, eax
0x5c41:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5c43:   48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0x5c48:   48 8b fe                              	mov rdi, rsi
0x5c4b:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x5c4f:   48 8b 40 58                           	mov rax, qword ptr [rax + 0x58]
0x5c53:   49 89 85 78 05 00 00                  	mov qword ptr [r13 + 0x578], rax
0x5c5a:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x5c5e:   48 8b 40 10                           	mov rax, qword ptr [rax + 0x10]
0x5c62:   48 89 08                              	mov qword ptr [rax], rcx
0x5c65:   33 c0                                 	xor eax, eax
0x5c67:   b9 4a 00 00 00                        	mov ecx, 0x4a
0x5c6c:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x5c6e:   48 8b 84 24 98 00 00 00               	mov rax, qword ptr [rsp + 0x98]
0x5c76:   49 89 85 b8 02 00 00                  	mov qword ptr [r13 + 0x2b8], rax
0x5c7d:   48 8b 84 24 a0 00 00 00               	mov rax, qword ptr [rsp + 0xa0]
0x5c85:   49 89 85 c0 02 00 00                  	mov qword ptr [r13 + 0x2c0], rax
0x5c8c:   48 8b 84 24 a8 00 00 00               	mov rax, qword ptr [rsp + 0xa8]
0x5c94:   49 89 85 c8 02 00 00                  	mov qword ptr [r13 + 0x2c8], rax
0x5c9b:   33 c0                                 	xor eax, eax
0x5c9d:   41 8a 0c 04                           	mov cl, byte ptr [r12 + rax]
0x5ca1:   41 88 8c 05 a8 04 00 00               	mov byte ptr [r13 + rax + 0x4a8], cl
0x5ca9:   48 ff c0                              	inc rax
0x5cac:   48 83 f8 70                           	cmp rax, 0x70
0x5cb0:   75 eb                                 	jne 0x5c9d <.Lmicrolzma_encoder_init.1+0x48d>
0x5cb2:   48 8b 84 24 b0 00 00 00               	mov rax, qword ptr [rsp + 0xb0]
0x5cba:   49 89 9d b8 03 00 00                  	mov qword ptr [r13 + 0x3b8], rbx
0x5cc1:   bf 01 00 00 00                        	mov edi, 1
0x5cc6:   49 89 85 10 05 00 00                  	mov qword ptr [r13 + 0x510], rax
0x5ccd:   e8 6e e3 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x5cd2:   bf 40 04 00 00                        	mov edi, 0x440
0x5cd7:   48 89 44 24 38                        	mov qword ptr [rsp + 0x38], rax
0x5cdc:   48 8b 84 24 18 02 00 00               	mov rax, qword ptr [rsp + 0x218]
0x5ce4:   48 8b 5c 24 38                        	mov rbx, qword ptr [rsp + 0x38]
0x5ce9:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x5ced:   48 8b f3                              	mov rsi, rbx
0x5cf0:   e8 6b 6e 00 00                        	call 0xcb60 <lzma_alloc>
0x5cf5:   49 89 85 b0 04 00 00                  	mov qword ptr [r13 + 0x4b0], rax
0x5cfc:   48 85 c0                              	test rax, rax
0x5cff:   74 07                                 	je 0x5d08 <.Lmicrolzma_encoder_init.1+0x4f8>
0x5d01:   41 ff 85 a8 04 00 00                  	inc dword ptr [r13 + 0x4a8]
0x5d08:   48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x5d0d:   48 8d b4 24 90 00 00 00               	lea rsi, [rsp + 0x90]
0x5d15:   48 8d bc 24 30 02 00 00               	lea rdi, [rsp + 0x230]
0x5d1d:   4c 89 ea                              	mov rdx, r13
0x5d20:   e8 9b f4 ff ff                        	call 0x51c0 <.Llzma_lz_decoder_init.0>
0x5d25:   85 c0                                 	test eax, eax
0x5d27:   0f 84 15 fd ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5d2d:   bf 01 00 00 00                        	mov edi, 1
0x5d32:   e8 09 e3 ff ff                        	call 0x4040 <.Lstream_decoder_memconfig.part.1>
0x5d37:   48 8b 9c 24 28 02 00 00               	mov rbx, qword ptr [rsp + 0x228]
0x5d3f:   48 89 44 24 20                        	mov qword ptr [rsp + 0x20], rax
0x5d44:   48 89 58 10                           	mov qword ptr [rax + 0x10], rbx
0x5d48:   48 85 db                              	test rbx, rbx
0x5d4b:   74 34                                 	je 0x5d81 <.Lmicrolzma_encoder_init.1+0x571>
0x5d4d:   48 8b fb                              	mov rdi, rbx
0x5d50:   31 d2                                 	xor edx, edx
0x5d52:   be 98 07 00 00                        	mov esi, 0x798
0x5d57:   e8 04 bb ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5d5c:   48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0x5d61:   bf f8 0a 00 00                        	mov edi, 0xaf8
0x5d66:   48 89 c3                              	mov rbx, rax
0x5d69:   e8 f2 6d 00 00                        	call 0xcb60 <lzma_alloc>
0x5d6e:   49 89 85 18 03 00 00                  	mov qword ptr [r13 + 0x318], rax
0x5d75:   48 85 c0                              	test rax, rax
0x5d78:   74 07                                 	je 0x5d81 <.Lmicrolzma_encoder_init.1+0x571>
0x5d7a:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5d81:   48 8b bc 24 08 02 00 00               	mov rdi, qword ptr [rsp + 0x208]
0x5d89:   45 31 f6                              	xor r14d, r14d
0x5d8c:   48 8d b4 24 28 01 00 00               	lea rsi, [rsp + 0x128]
0x5d94:   4c 89 b4 24 28 01 00 00               	mov qword ptr [rsp + 0x128], r14
0x5d9c:   4c 89 b4 24 80 01 00 00               	mov qword ptr [rsp + 0x180], r14
0x5da4:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0x5da8:   e8 f3 c0 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x5dad:   4c 8b a4 24 28 01 00 00               	mov r12, qword ptr [rsp + 0x128]
0x5db5:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x5db9:   31 d2                                 	xor edx, edx
0x5dbb:   48 8d b4 24 80 01 00 00               	lea rsi, [rsp + 0x180]
0x5dc3:   49 89 c6                              	mov r14, rax
0x5dc6:   49 01 c4                              	add r12, rax
0x5dc9:   e8 62 c3 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x5dce:   48 8b 94 24 80 01 00 00               	mov rdx, qword ptr [rsp + 0x180]
0x5dd6:   bf 03 00 00 00                        	mov edi, 3
0x5ddb:   4d 89 b5 90 01 00 00                  	mov qword ptr [r13 + 0x190], r14
0x5de2:   4d 89 a5 98 01 00 00                  	mov qword ptr [r13 + 0x198], r12
0x5de9:   48 03 d0                              	add rdx, rax
0x5dec:   49 89 85 a0 01 00 00                  	mov qword ptr [r13 + 0x1a0], rax
0x5df3:   49 89 95 a8 01 00 00                  	mov qword ptr [r13 + 0x1a8], rdx
0x5dfa:   e8 d1 c6 ff ff                        	call 0x24d0 <.Llzma_lz_encoder_memusage.1>
0x5dff:   48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x5e04:   48 85 c0                              	test rax, rax
0x5e07:   0f 84 35 fc ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5e0d:   48 8b 40 20                           	mov rax, qword ptr [rax + 0x20]
0x5e11:   48 89 04 24                           	mov qword ptr [rsp], rax
0x5e15:   48 85 c0                              	test rax, rax
0x5e18:   0f 84 24 fc ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5e1e:   48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x5e23:   48 83 78 30 00                        	cmp qword ptr [rax + 0x30], 0
0x5e28:   0f 84 14 fc ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5e2e:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5e36:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x5e3a:   be 18 04 00 00                        	mov esi, 0x418
0x5e3f:   45 31 f6                              	xor r14d, r14d
0x5e42:   ff d0                                 	call rax
0x5e44:   49 89 85 b0 03 00 00                  	mov qword ptr [r13 + 0x3b0], rax
0x5e4b:   48 85 c0                              	test rax, rax
0x5e4e:   74 17                                 	je 0x5e67 <.Lmicrolzma_encoder_init.1+0x657>
0x5e50:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5e58:   33 d2                                 	xor edx, edx
0x5e5a:   be 40 0c 00 00                        	mov esi, 0xc40
0x5e5f:   e8 fc b9 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5e64:   49 89 c6                              	mov r14, rax
0x5e67:   48 8b bc 24 08 02 00 00               	mov rdi, qword ptr [rsp + 0x208]
0x5e6f:   31 d2                                 	xor edx, edx
0x5e71:   4c 8d a4 24 8c 00 00 00               	lea r12, [rsp + 0x8c]
0x5e79:   c7 84 24 8c 00 00 00 c8 02 00 00      	mov dword ptr [rsp + 0x8c], 0x2c8
0x5e84:   4c 89 e6                              	mov rsi, r12
0x5e87:   e8 f4 c1 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x5e8c:   49 89 85 70 01 00 00                  	mov qword ptr [r13 + 0x170], rax
0x5e93:   48 85 c0                              	test rax, rax
0x5e96:   0f 84 a6 fb ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5e9c:   48 8b bc 24 08 02 00 00               	mov rdi, qword ptr [rsp + 0x208]
0x5ea4:   33 d2                                 	xor edx, edx
0x5ea6:   4c 89 e6                              	mov rsi, r12
0x5ea9:   c7 84 24 8c 00 00 00 10 07 00 00      	mov dword ptr [rsp + 0x8c], 0x710
0x5eb4:   e8 c7 c1 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x5eb9:   49 89 85 78 01 00 00                  	mov qword ptr [r13 + 0x178], rax
0x5ec0:   48 85 c0                              	test rax, rax
0x5ec3:   0f 84 79 fb ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5ec9:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5ed1:   be d0 06 00 00                        	mov esi, 0x6d0
0x5ed6:   45 31 e4                              	xor r12d, r12d
0x5ed9:   e8 02 bc ff ff                        	call 0x1ae0 <.Lcrc64_generic.0>
0x5ede:   49 89 85 a0 03 00 00                  	mov qword ptr [r13 + 0x3a0], rax
0x5ee5:   48 85 c0                              	test rax, rax
0x5ee8:   74 56                                 	je 0x5f40 <.Lmicrolzma_encoder_init.1+0x730>
0x5eea:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5ef2:   33 d2                                 	xor edx, edx
0x5ef4:   be 58 09 00 00                        	mov esi, 0x958
0x5ef9:   e8 62 b9 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5efe:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5f06:   48 85 c0                              	test rax, rax
0x5f09:   74 15                                 	je 0x5f20 <.Lmicrolzma_encoder_init.1+0x710>
0x5f0b:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x5f0f:   48 03 07                              	add rax, qword ptr [rdi]
0x5f12:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5f19:   49 89 85 78 03 00 00                  	mov qword ptr [r13 + 0x378], rax
0x5f20:   31 d2                                 	xor edx, edx
0x5f22:   be 18 09 00 00                        	mov esi, 0x918
0x5f27:   e8 34 b9 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5f2c:   49 83 bd b0 03 00 00 00               	cmp qword ptr [r13 + 0x3b0], 0
0x5f34:   49 89 c4                              	mov r12, rax
0x5f37:   74 07                                 	je 0x5f40 <.Lmicrolzma_encoder_init.1+0x730>
0x5f39:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5f40:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5f48:   33 d2                                 	xor edx, edx
0x5f4a:   be c0 0a 00 00                        	mov esi, 0xac0
0x5f4f:   e8 0c b9 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5f54:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5f5c:   be 40 05 00 00                        	mov esi, 0x540
0x5f61:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x5f66:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x5f6a:   ff d0                                 	call rax
0x5f6c:   45 31 c9                              	xor r9d, r9d
0x5f6f:   49 89 85 88 03 00 00                  	mov qword ptr [r13 + 0x388], rax
0x5f76:   48 85 c0                              	test rax, rax
0x5f79:   74 40                                 	je 0x5fbb <.Lmicrolzma_encoder_init.1+0x7ab>
0x5f7b:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5f82:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x5f8a:   33 d2                                 	xor edx, edx
0x5f8c:   be f8 08 00 00                        	mov esi, 0x8f8
0x5f91:   e8 ca b8 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x5f96:   49 89 c1                              	mov r9, rax
0x5f99:   48 85 db                              	test rbx, rbx
0x5f9c:   74 1d                                 	je 0x5fbb <.Lmicrolzma_encoder_init.1+0x7ab>
0x5f9e:   48 8b 94 24 28 02 00 00               	mov rdx, qword ptr [rsp + 0x228]
0x5fa6:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x5faa:   48 03 02                              	add rax, qword ptr [rdx]
0x5fad:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5fb4:   49 89 85 00 03 00 00                  	mov qword ptr [r13 + 0x300], rax
0x5fbb:   49 83 bd a0 03 00 00 00               	cmp qword ptr [r13 + 0x3a0], 0
0x5fc3:   74 07                                 	je 0x5fcc <.Lmicrolzma_encoder_init.1+0x7bc>
0x5fc5:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x5fcc:   4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0x5fd1:   48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x5fd6:   48 8d 94 24 b0 07 00 00               	lea rdx, [rsp + 0x7b0]
0x5fde:   4c 89 0c 24                           	mov qword ptr [rsp], r9
0x5fe2:   48 8b b4 24 28 02 00 00               	mov rsi, qword ptr [rsp + 0x228]
0x5fea:   48 8b bc 24 08 02 00 00               	mov rdi, qword ptr [rsp + 0x208]
0x5ff2:   e8 f9 f3 ff ff                        	call 0x53f0 <.Llzma_lzma_optimum_fast.0>
0x5ff7:   85 c0                                 	test eax, eax
0x5ff9:   0f 84 43 fa ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x5fff:   4d 85 f6                              	test r14, r14
0x6002:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x600a:   4c 8b 0c 24                           	mov r9, qword ptr [rsp]
0x600e:   74 15                                 	je 0x6025 <.Lmicrolzma_encoder_init.1+0x815>
0x6010:   49 8b 46 08                           	mov rax, qword ptr [r14 + 8]
0x6014:   48 03 07                              	add rax, qword ptr [rdi]
0x6017:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x601e:   49 89 85 80 03 00 00                  	mov qword ptr [r13 + 0x380], rax
0x6025:   4d 85 e4                              	test r12, r12
0x6028:   74 16                                 	je 0x6040 <.Lmicrolzma_encoder_init.1+0x830>
0x602a:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x602f:   48 03 07                              	add rax, qword ptr [rdi]
0x6032:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x6039:   49 89 85 70 03 00 00                  	mov qword ptr [r13 + 0x370], rax
0x6040:   48 83 7c 24 10 00                     	cmp qword ptr [rsp + 0x10], 0
0x6046:   74 1a                                 	je 0x6062 <.Lmicrolzma_encoder_init.1+0x852>
0x6048:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x604d:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x6051:   48 03 07                              	add rax, qword ptr [rdi]
0x6054:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x605b:   49 89 85 a8 03 00 00                  	mov qword ptr [r13 + 0x3a8], rax
0x6062:   4d 85 c9                              	test r9, r9
0x6065:   74 15                                 	je 0x607c <.Lmicrolzma_encoder_init.1+0x86c>
0x6067:   49 8b 41 08                           	mov rax, qword ptr [r9 + 8]
0x606b:   48 03 07                              	add rax, qword ptr [rdi]
0x606e:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x6075:   49 89 85 98 03 00 00                  	mov qword ptr [r13 + 0x398], rax
0x607c:   33 d2                                 	xor edx, edx
0x607e:   be f0 03 00 00                        	mov esi, 0x3f0
0x6083:   33 db                                 	xor ebx, ebx
0x6085:   45 31 e4                              	xor r12d, r12d
0x6088:   e8 d3 b7 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x608d:   45 31 d2                              	xor r10d, r10d
0x6090:   45 31 db                              	xor r11d, r11d
0x6093:   31 d2                                 	xor edx, edx
0x6095:   4d 8b b5 58 01 00 00                  	mov r14, qword ptr [r13 + 0x158]
0x609c:   48 89 44 24 50                        	mov qword ptr [rsp + 0x50], rax
0x60a1:   48 8d b4 24 28 01 00 00               	lea rsi, [rsp + 0x128]
0x60a9:   48 8b 84 24 08 02 00 00               	mov rax, qword ptr [rsp + 0x208]
0x60b1:   4c 89 94 24 28 01 00 00               	mov qword ptr [rsp + 0x128], r10
0x60b9:   44 89 9c 24 c0 00 00 00               	mov dword ptr [rsp + 0xc0], r11d
0x60c1:   49 89 1e                              	mov qword ptr [r14], rbx
0x60c4:   48 8b f8                              	mov rdi, rax
0x60c7:   45 89 66 08                           	mov dword ptr [r14 + 8], r12d
0x60cb:   48 89 04 24                           	mov qword ptr [rsp], rax
0x60cf:   e8 5c c0 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x60d4:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x60d9:   48 85 c0                              	test rax, rax
0x60dc:   0f 84 c8 04 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x60e2:   48 8b 84 24 28 01 00 00               	mov rax, qword ptr [rsp + 0x128]
0x60ea:   48 89 44 24 60                        	mov qword ptr [rsp + 0x60], rax
0x60ef:   48 8b 84 24 f8 09 00 00               	mov rax, qword ptr [rsp + 0x9f8]
0x60f7:   48 85 c0                              	test rax, rax
0x60fa:   0f 84 aa 04 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x6100:   49 89 86 a8 00 00 00                  	mov qword ptr [r14 + 0xa8], rax
0x6107:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x610b:   48 8d b4 24 c0 00 00 00               	lea rsi, [rsp + 0xc0]
0x6113:   31 d2                                 	xor edx, edx
0x6115:   48 8b 84 24 00 0a 00 00               	mov rax, qword ptr [rsp + 0xa00]
0x611d:   49 89 86 b0 00 00 00                  	mov qword ptr [r14 + 0xb0], rax
0x6124:   c7 84 24 c0 00 00 00 00 04 00 00      	mov dword ptr [rsp + 0xc0], 0x400
0x612f:   e8 4c bf ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6134:   49 89 86 d0 00 00 00                  	mov qword ptr [r14 + 0xd0], rax
0x613b:   48 85 c0                              	test rax, rax
0x613e:   74 3e                                 	je 0x617e <.Lmicrolzma_encoder_init.1+0x96e>
0x6140:   57                                    	push rdi
0x6141:   49 8d 4e 38                           	lea rcx, [r14 + 0x38]
0x6145:   49 8d 56 30                           	lea rdx, [r14 + 0x30]
0x6149:   bf 16 00 00 00                        	mov edi, 0x16
0x614e:   ff 74 24 10                           	push qword ptr [rsp + 0x10]
0x6152:   4c 8b 44 24 10                        	mov r8, qword ptr [rsp + 0x10]
0x6157:   49 8d 76 28                           	lea rsi, [r14 + 0x28]
0x615b:   4c 8d 8c 24 c0 07 00 00               	lea r9, [rsp + 0x7c0]
0x6163:   e8 c8 c8 ff ff                        	call 0x2a30 <function_2a30>
0x6168:   41 58                                 	pop r8
0x616a:   41 59                                 	pop r9
0x616c:   85 c0                                 	test eax, eax
0x616e:   75 0e                                 	jne 0x617e <.Lmicrolzma_encoder_init.1+0x96e>
0x6170:   31 f6                                 	xor esi, esi
0x6172:   49 89 76 28                           	mov qword ptr [r14 + 0x28], rsi
0x6176:   49 89 76 30                           	mov qword ptr [r14 + 0x30], rsi
0x617a:   49 89 76 38                           	mov qword ptr [r14 + 0x38], rsi
0x617e:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x6182:   31 d2                                 	xor edx, edx
0x6184:   48 8d b4 24 c0 00 00 00               	lea rsi, [rsp + 0xc0]
0x618c:   c7 84 24 c0 00 00 00 b8 07 00 00      	mov dword ptr [rsp + 0xc0], 0x7b8
0x6197:   e8 e4 be ff ff                        	call 0x2080 <.Llzip_decode.0>
0x619c:   49 89 86 d8 00 00 00                  	mov qword ptr [r14 + 0xd8], rax
0x61a3:   48 85 c0                              	test rax, rax
0x61a6:   0f 84 80 00 00 00                     	je 0x622c <.Lmicrolzma_encoder_init.1+0xa1c>
0x61ac:   49 8d 4e 58                           	lea rcx, [r14 + 0x58]
0x61b0:   49 8d 56 50                           	lea rdx, [r14 + 0x50]
0x61b4:   bf 17 00 00 00                        	mov edi, 0x17
0x61b9:   4c 8d 8c 24 b0 07 00 00               	lea r9, [rsp + 0x7b0]
0x61c1:   50                                    	push rax
0x61c2:   49 8d 76 48                           	lea rsi, [r14 + 0x48]
0x61c6:   ff 74 24 10                           	push qword ptr [rsp + 0x10]
0x61ca:   4c 8b 44 24 10                        	mov r8, qword ptr [rsp + 0x10]
0x61cf:   4c 89 4c 24 20                        	mov qword ptr [rsp + 0x20], r9
0x61d4:   e8 57 c8 ff ff                        	call 0x2a30 <function_2a30>
0x61d9:   5a                                    	pop rdx
0x61da:   59                                    	pop rcx
0x61db:   85 c0                                 	test eax, eax
0x61dd:   4c 8b 4c 24 10                        	mov r9, qword ptr [rsp + 0x10]
0x61e2:   75 11                                 	jne 0x61f5 <.Lmicrolzma_encoder_init.1+0x9e5>
0x61e4:   45 31 e4                              	xor r12d, r12d
0x61e7:   4d 89 66 48                           	mov qword ptr [r14 + 0x48], r12
0x61eb:   4d 89 66 50                           	mov qword ptr [r14 + 0x50], r12
0x61ef:   4d 89 66 58                           	mov qword ptr [r14 + 0x58], r12
0x61f3:   eb 37                                 	jmp 0x622c <.Lmicrolzma_encoder_init.1+0xa1c>
0x61f5:   41 52                                 	push r10
0x61f7:   49 8d 4e 78                           	lea rcx, [r14 + 0x78]
0x61fb:   49 8d 56 70                           	lea rdx, [r14 + 0x70]
0x61ff:   bf 18 00 00 00                        	mov edi, 0x18
0x6204:   ff 74 24 10                           	push qword ptr [rsp + 0x10]
0x6208:   4c 8b 44 24 10                        	mov r8, qword ptr [rsp + 0x10]
0x620d:   49 8d 76 68                           	lea rsi, [r14 + 0x68]
0x6211:   e8 1a c8 ff ff                        	call 0x2a30 <function_2a30>
0x6216:   41 5b                                 	pop r11
0x6218:   5b                                    	pop rbx
0x6219:   85 c0                                 	test eax, eax
0x621b:   75 0f                                 	jne 0x622c <.Lmicrolzma_encoder_init.1+0xa1c>
0x621d:   45 31 c9                              	xor r9d, r9d
0x6220:   4d 89 4e 68                           	mov qword ptr [r14 + 0x68], r9
0x6224:   4d 89 4e 70                           	mov qword ptr [r14 + 0x70], r9
0x6228:   4d 89 4e 78                           	mov qword ptr [r14 + 0x78], r9
0x622c:   49 83 7e 28 00                        	cmp qword ptr [r14 + 0x28], 0
0x6231:   75 0b                                 	jne 0x623e <.Lmicrolzma_encoder_init.1+0xa2e>
0x6233:   49 83 7e 48 00                        	cmp qword ptr [r14 + 0x48], 0
0x6238:   0f 84 6c 03 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x623e:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x6245:   45 31 c0                              	xor r8d, r8d
0x6248:   4c 89 84 24 80 01 00 00               	mov qword ptr [rsp + 0x180], r8
0x6250:   4c 8b 60 28                           	mov r12, qword ptr [rax + 0x28]
0x6254:   4d 85 e4                              	test r12, r12
0x6257:   74 06                                 	je 0x625f <.Lmicrolzma_encoder_init.1+0xa4f>
0x6259:   48 8b 40 30                           	mov rax, qword ptr [rax + 0x30]
0x625d:   eb 11                                 	jmp 0x6270 <.Lmicrolzma_encoder_init.1+0xa60>
0x625f:   4c 8b 60 48                           	mov r12, qword ptr [rax + 0x48]
0x6263:   4d 85 e4                              	test r12, r12
0x6266:   0f 84 3e 03 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x626c:   48 8b 40 50                           	mov rax, qword ptr [rax + 0x50]
0x6270:   48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0x6275:   48 8d 84 24 c8 00 00 00               	lea rax, [rsp + 0xc8]
0x627d:   33 db                                 	xor ebx, ebx
0x627f:   33 d2                                 	xor edx, edx
0x6281:   c7 84 24 c8 00 00 00 98 01 00 00      	mov dword ptr [rsp + 0xc8], 0x198
0x628c:   48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x6291:   48 8b 74 24 68                        	mov rsi, qword ptr [rsp + 0x68]
0x6296:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x629a:   e8 e1 bd ff ff                        	call 0x2080 <.Llzip_decode.0>
0x629f:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x62a4:   48 85 c0                              	test rax, rax
0x62a7:   0f 84 fd 02 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x62ad:   33 ff                                 	xor edi, edi
0x62af:   48 8d 84 24 80 01 00 00               	lea rax, [rsp + 0x180]
0x62b7:   31 c9                                 	xor ecx, ecx
0x62b9:   31 d2                                 	xor edx, edx
0x62bb:   48 89 bc 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rdi
0x62c3:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x62c8:   49 89 c0                              	mov r8, rax
0x62cb:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x62cf:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x62d4:   e8 97 b8 ff ff                        	call 0x1b70 <.Lstream_encoder_update.0>
0x62d9:   49 89 c0                              	mov r8, rax
0x62dc:   48 85 c0                              	test rax, rax
0x62df:   75 29                                 	jne 0x630a <.Lmicrolzma_encoder_init.1+0xafa>
0x62e1:   33 f6                                 	xor esi, esi
0x62e3:   4c 8b 44 24 40                        	mov r8, qword ptr [rsp + 0x40]
0x62e8:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x62ec:   31 c9                                 	xor ecx, ecx
0x62ee:   48 89 b4 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rsi
0x62f6:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x62fb:   33 d2                                 	xor edx, edx
0x62fd:   bb 01 00 00 00                        	mov ebx, 1
0x6302:   e8 09 b9 ff ff                        	call 0x1c10 <.Lstream_encoder_update.1>
0x6307:   49 89 c0                              	mov r8, rax
0x630a:   48 8d 84 24 80 01 00 00               	lea rax, [rsp + 0x180]
0x6312:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x6317:   4d 85 c0                              	test r8, r8
0x631a:   0f 84 b5 00 00 00                     	je 0x63d5 <.Lmicrolzma_encoder_init.1+0xbc5>
0x6320:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x6324:   4c 89 c6                              	mov rsi, r8
0x6327:   b9 01 00 00 00                        	mov ecx, 1
0x632c:   ba 08 00 00 00                        	mov edx, 8
0x6331:   4c 89 44 24 70                        	mov qword ptr [rsp + 0x70], r8
0x6336:   e8 75 bf ff ff                        	call 0x22b0 <.Lauto_decode.1>
0x633b:   4c 8b 44 24 70                        	mov r8, qword ptr [rsp + 0x70]
0x6340:   85 c0                                 	test eax, eax
0x6342:   74 3c                                 	je 0x6380 <.Lmicrolzma_encoder_init.1+0xb70>
0x6344:   48 8b 74 24 58                        	mov rsi, qword ptr [rsp + 0x58]
0x6349:   33 d2                                 	xor edx, edx
0x634b:   b9 09 01 00 00                        	mov ecx, 0x109
0x6350:   4c 89 e7                              	mov rdi, r12
0x6353:   e8 e8 ac ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x6358:   4c 8b 44 24 70                        	mov r8, qword ptr [rsp + 0x70]
0x635d:   85 c0                                 	test eax, eax
0x635f:   74 1f                                 	je 0x6380 <.Lmicrolzma_encoder_init.1+0xb70>
0x6361:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x6368:   49 83 7e 28 00                        	cmp qword ptr [r14 + 0x28], 0
0x636d:   4c 89 80 a0 00 00 00                  	mov qword ptr [rax + 0xa0], r8
0x6374:   74 6d                                 	je 0x63e3 <.Lmicrolzma_encoder_init.1+0xbd3>
0x6376:   41 c7 46 04 01 00 00 00               	mov dword ptr [r14 + 4], 1
0x637e:   eb 63                                 	jmp 0x63e3 <.Lmicrolzma_encoder_init.1+0xbd3>
0x6380:   4c 8b 44 24 40                        	mov r8, qword ptr [rsp + 0x40]
0x6385:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x638a:   31 c9                                 	xor ecx, ecx
0x638c:   31 d2                                 	xor edx, edx
0x638e:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x6392:   85 db                                 	test ebx, ebx
0x6394:   75 2d                                 	jne 0x63c3 <.Lmicrolzma_encoder_init.1+0xbb3>
0x6396:   e8 d5 b7 ff ff                        	call 0x1b70 <.Lstream_encoder_update.0>
0x639b:   49 89 c0                              	mov r8, rax
0x639e:   48 85 c0                              	test rax, rax
0x63a1:   0f 85 79 ff ff ff                     	jne 0x6320 <.Lmicrolzma_encoder_init.1+0xb10>
0x63a7:   33 c9                                 	xor ecx, ecx
0x63a9:   4c 8b 44 24 40                        	mov r8, qword ptr [rsp + 0x40]
0x63ae:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x63b3:   31 d2                                 	xor edx, edx
0x63b5:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x63b9:   48 89 8c 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rcx
0x63c1:   31 c9                                 	xor ecx, ecx
0x63c3:   e8 48 b8 ff ff                        	call 0x1c10 <.Lstream_encoder_update.1>
0x63c8:   bb 01 00 00 00                        	mov ebx, 1
0x63cd:   49 89 c0                              	mov r8, rax
0x63d0:   e9 42 ff ff ff                        	jmp 0x6317 <.Lmicrolzma_encoder_init.1+0xb07>
0x63d5:   48 8b 54 24 10                        	mov rdx, qword ptr [rsp + 0x10]
0x63da:   48 83 c2 08                           	add rdx, 8
0x63de:   e9 ae fe ff ff                        	jmp 0x6291 <.Lmicrolzma_encoder_init.1+0xa81>
0x63e3:   49 83 7e 48 00                        	cmp qword ptr [r14 + 0x48], 0
0x63e8:   74 16                                 	je 0x6400 <.Lmicrolzma_encoder_init.1+0xbf0>
0x63ea:   49 83 7e 68 00                        	cmp qword ptr [r14 + 0x68], 0
0x63ef:   41 c7 06 01 00 00 00                  	mov dword ptr [r14], 1
0x63f6:   74 08                                 	je 0x6400 <.Lmicrolzma_encoder_init.1+0xbf0>
0x63f8:   41 c7 46 08 01 00 00 00               	mov dword ptr [r14 + 8], 1
0x6400:   48 8b 5c 24 30                        	mov rbx, qword ptr [rsp + 0x30]
0x6405:   48 8b 44 24 60                        	mov rax, qword ptr [rsp + 0x60]
0x640a:   bf 11 00 00 00                        	mov edi, 0x11
0x640f:   48 8d b4 24 b0 07 00 00               	lea rsi, [rsp + 0x7b0]
0x6417:   48 03 c3                              	add rax, rbx
0x641a:   48 8b d3                              	mov rdx, rbx
0x641d:   48 8b c8                              	mov rcx, rax
0x6420:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x6425:   e8 16 c8 ff ff                        	call 0x2c40 <function_2c40>
0x642a:   48 85 c0                              	test rax, rax
0x642d:   74 0e                                 	je 0x643d <.Lmicrolzma_encoder_init.1+0xc2d>
0x642f:   49 8b 95 58 01 00 00                  	mov rdx, qword ptr [r13 + 0x158]
0x6436:   48 89 82 c0 00 00 00                  	mov qword ptr [rdx + 0xc0], rax
0x643d:   48 b8 48 09 00 00 58 0c 00 00         	movabs rax, 0xc5800000948
0x6447:   4c 8d a4 24 80 01 00 00               	lea r12, [rsp + 0x180]
0x644f:   31 db                                 	xor ebx, ebx
0x6451:   c7 84 24 88 01 00 00 70 00 00 00      	mov dword ptr [rsp + 0x188], 0x70
0x645c:   48 89 84 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rax
0x6464:   4c 8d b4 24 8c 01 00 00               	lea r14, [rsp + 0x18c]
0x646c:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0x6470:   31 d2                                 	xor edx, edx
0x6472:   4c 89 e6                              	mov rsi, r12
0x6475:   e8 06 bc ff ff                        	call 0x2080 <.Llzip_decode.0>
0x647a:   48 85 c0                              	test rax, rax
0x647d:   74 1c                                 	je 0x649b <.Lmicrolzma_encoder_init.1+0xc8b>
0x647f:   ff cb                                 	dec ebx
0x6481:   75 13                                 	jne 0x6496 <.Lmicrolzma_encoder_init.1+0xc86>
0x6483:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x648a:   c7 80 b8 00 00 00 01 00 00 00         	mov dword ptr [rax + 0xb8], 1
0x6494:   eb 1d                                 	jmp 0x64b3 <.Lmicrolzma_encoder_init.1+0xca3>
0x6496:   bb 01 00 00 00                        	mov ebx, 1
0x649b:   49 83 c4 04                           	add r12, 4
0x649f:   4d 39 f4                              	cmp r12, r14
0x64a2:   75 c8                                 	jne 0x646c <.Lmicrolzma_encoder_init.1+0xc5c>
0x64a4:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x64ab:   31 d2                                 	xor edx, edx
0x64ad:   89 90 b8 00 00 00                     	mov dword ptr [rax + 0xb8], edx
0x64b3:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x64b8:   48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x64bd:   bf 15 00 00 00                        	mov edi, 0x15
0x64c2:   48 8d 84 24 b0 07 00 00               	lea rax, [rsp + 0x7b0]
0x64ca:   48 8b f0                              	mov rsi, rax
0x64cd:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x64d2:   e8 69 c7 ff ff                        	call 0x2c40 <function_2c40>
0x64d7:   48 8b d8                              	mov rbx, rax
0x64da:   48 85 c0                              	test rax, rax
0x64dd:   0f 84 c7 00 00 00                     	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x64e3:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x64ea:   83 b8 b8 00 00 00 00                  	cmp dword ptr [rax + 0xb8], 0
0x64f1:   0f 84 a5 00 00 00                     	je 0x659c <.Lmicrolzma_encoder_init.1+0xd8c>
0x64f7:   41 83 bd 38 01 00 00 00               	cmp dword ptr [r13 + 0x138], 0
0x64ff:   0f 84 97 00 00 00                     	je 0x659c <.Lmicrolzma_encoder_init.1+0xd8c>
0x6505:   48 b8 0e 00 00 00 0f 00 00 00         	movabs rax, 0xf0000000e
0x650f:   45 31 f6                              	xor r14d, r14d
0x6512:   45 31 e4                              	xor r12d, r12d
0x6515:   c7 84 24 88 01 00 00 10 00 00 00      	mov dword ptr [rsp + 0x188], 0x10
0x6520:   48 89 84 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rax
0x6528:   44 89 34 24                           	mov dword ptr [rsp], r14d
0x652c:   45 31 f6                              	xor r14d, r14d
0x652f:   42 8b 84 a4 80 01 00 00               	mov eax, dword ptr [rsp + r12*4 + 0x180]
0x6537:   48 8b 74 24 40                        	mov rsi, qword ptr [rsp + 0x40]
0x653c:   48 c1 e0 05                           	shl rax, 5
0x6540:   48 03 c6                              	add rax, rsi
0x6543:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x6547:   48 85 ff                              	test rdi, rdi
0x654a:   74 3c                                 	je 0x6588 <.Lmicrolzma_encoder_init.1+0xd78>
0x654c:   48 8b 70 10                           	mov rsi, qword ptr [rax + 0x10]
0x6550:   33 d2                                 	xor edx, edx
0x6552:   48 8b cb                              	mov rcx, rbx
0x6555:   48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0x655a:   41 ff c6                              	inc r14d
0x655d:   48 89 74 24 30                        	mov qword ptr [rsp + 0x30], rsi
0x6562:   e8 99 ab ff ff                        	call 0x1100 <.Lstream_encoder_mt_init.1>
0x6567:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x656c:   48 8b 74 24 30                        	mov rsi, qword ptr [rsp + 0x30]
0x6571:   85 c0                                 	test eax, eax
0x6573:   74 05                                 	je 0x657a <.Lmicrolzma_encoder_init.1+0xd6a>
0x6575:   ff 04 24                              	inc dword ptr [rsp]
0x6578:   eb 0e                                 	jmp 0x6588 <.Lmicrolzma_encoder_init.1+0xd78>
0x657a:   33 d2                                 	xor edx, edx
0x657c:   48 8b cb                              	mov rcx, rbx
0x657f:   e8 cc ab ff ff                        	call 0x1150 <.Llzma_simple_x86_decoder_init.1>
0x6584:   85 c0                                 	test eax, eax
0x6586:   75 ed                                 	jne 0x6575 <.Lmicrolzma_encoder_init.1+0xd65>
0x6588:   49 ff c4                              	inc r12
0x658b:   49 83 fc 03                           	cmp r12, 3
0x658f:   75 9e                                 	jne 0x652f <.Lmicrolzma_encoder_init.1+0xd1f>
0x6591:   45 85 f6                              	test r14d, r14d
0x6594:   74 06                                 	je 0x659c <.Lmicrolzma_encoder_init.1+0xd8c>
0x6596:   83 3c 24 00                           	cmp dword ptr [rsp], 0
0x659a:   74 0e                                 	je 0x65aa <.Lmicrolzma_encoder_init.1+0xd9a>
0x659c:   49 8b 85 58 01 00 00                  	mov rax, qword ptr [r13 + 0x158]
0x65a3:   48 89 98 c8 00 00 00                  	mov qword ptr [rax + 0xc8], rbx
0x65aa:   48 8b bc 24 28 02 00 00               	mov rdi, qword ptr [rsp + 0x228]
0x65b2:   31 d2                                 	xor edx, edx
0x65b4:   be a8 02 00 00                        	mov esi, 0x2a8
0x65b9:   e8 a2 b2 ff ff                        	call 0x1860 <.Lcrc_init.0>
0x65be:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x65c3:   48 8b bc 24 08 02 00 00               	mov rdi, qword ptr [rsp + 0x208]
0x65cb:   48 8d b4 24 b0 07 00 00               	lea rsi, [rsp + 0x7b0]
0x65d3:   48 89 44 24 58                        	mov qword ptr [rsp + 0x58], rax
0x65d8:   e8 b3 d7 ff ff                        	call 0x3d90 <.Llzma_mf_bt4_find.0>
0x65dd:   85 c0                                 	test eax, eax
0x65df:   75 11                                 	jne 0x65f2 <.Lmicrolzma_encoder_init.1+0xde2>
0x65e1:   45 31 db                              	xor r11d, r11d
0x65e4:   45 89 9d c8 03 00 00                  	mov dword ptr [r13 + 0x3c8], r11d
0x65eb:   45 89 9d d0 03 00 00                  	mov dword ptr [r13 + 0x3d0], r11d
0x65f2:   48 8b 84 24 18 02 00 00               	mov rax, qword ptr [rsp + 0x218]
0x65fa:   4d 8b a5 68 01 00 00                  	mov r12, qword ptr [r13 + 0x168]
0x6601:   45 31 d2                              	xor r10d, r10d
0x6604:   48 8d b4 24 c0 00 00 00               	lea rsi, [rsp + 0xc0]
0x660c:   48 8b 5c 24 38                        	mov rbx, qword ptr [rsp + 0x38]
0x6611:   48 8d bc 24 40 02 00 00               	lea rdi, [rsp + 0x240]
0x6619:   48 89 43 10                           	mov qword ptr [rbx + 0x10], rax
0x661d:   4c 89 94 24 c0 00 00 00               	mov qword ptr [rsp + 0xc0], r10
0x6625:   4d 89 14 24                           	mov qword ptr [r12], r10
0x6629:   e8 72 b8 ff ff                        	call 0x1ea0 <.Llzma_check_update.0>
0x662e:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x6633:   48 85 c0                              	test rax, rax
0x6636:   0f 84 af 05 00 00                     	je 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x663c:   4c 8b b4 24 c0 00 00 00               	mov r14, qword ptr [rsp + 0xc0]
0x6644:   49 83 fe 10                           	cmp r14, 0x10
0x6648:   0f 86 9d 05 00 00                     	jbe 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x664e:   48 8b 9c 24 d8 0a 00 00               	mov rbx, qword ptr [rsp + 0xad8]
0x6656:   48 85 db                              	test rbx, rbx
0x6659:   0f 84 8c 05 00 00                     	je 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x665f:   41 83 bd 38 01 00 00 00               	cmp dword ptr [r13 + 0x138], 0
0x6667:   75 5f                                 	jne 0x66c8 <.Lmicrolzma_encoder_init.1+0xeb8>
0x6669:   33 c0                                 	xor eax, eax
0x666b:   b9 16 00 00 00                        	mov ecx, 0x16
0x6670:   49 89 5c 24 58                        	mov qword ptr [r12 + 0x58], rbx
0x6675:   48 8d bc 24 28 01 00 00               	lea rdi, [rsp + 0x128]
0x667d:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x667f:   48 8b 84 24 f8 0a 00 00               	mov rax, qword ptr [rsp + 0xaf8]
0x6687:   48 85 c0                              	test rax, rax
0x668a:   0f 84 5b 05 00 00                     	je 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x6690:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x6695:   48 8b 5c 24 30                        	mov rbx, qword ptr [rsp + 0x30]
0x669a:   45 31 c9                              	xor r9d, r9d
0x669d:   48 8b 84 24 00 0b 00 00               	mov rax, qword ptr [rsp + 0xb00]
0x66a5:   4c 89 4c 24 38                        	mov qword ptr [rsp + 0x38], r9
0x66aa:   4c 01 f3                              	add rbx, r14
0x66ad:   45 31 f6                              	xor r14d, r14d
0x66b0:   48 89 04 24                           	mov qword ptr [rsp], rax
0x66b4:   48 8d 84 24 28 01 00 00               	lea rax, [rsp + 0x128]
0x66bc:   48 89 5c 24 60                        	mov qword ptr [rsp + 0x60], rbx
0x66c1:   48 89 44 24 68                        	mov qword ptr [rsp + 0x68], rax
0x66c6:   eb 7a                                 	jmp 0x6742 <.Lmicrolzma_encoder_init.1+0xf32>
0x66c8:   48 8d 73 04                           	lea rsi, [rbx + 4]
0x66cc:   ba 30 e2 00 00                        	mov edx, 0xe230
0x66d1:   48 8b fb                              	mov rdi, rbx
0x66d4:   e8 c7 a3 ff ff                        	call 0xaa0 <.Llzma_block_buffer_encode.0>
0x66d9:   85 c0                                 	test eax, eax
0x66db:   75 8c                                 	jne 0x6669 <.Lmicrolzma_encoder_init.1+0xe59>
0x66dd:   e9 09 05 00 00                        	jmp 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x66e2:   48 83 7c 24 38 00                     	cmp qword ptr [rsp + 0x38], 0
0x66e8:   0f 85 7f 04 00 00                     	jne 0x6b6d <.Lmicrolzma_encoder_init.1+0x135d>
0x66ee:   48 8b 14 24                           	mov rdx, qword ptr [rsp]
0x66f2:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x66f7:   48 8b 7c 24 68                        	mov rdi, qword ptr [rsp + 0x68]
0x66fc:   e8 ff 98 ff ff                        	call 0 <.Lx86_code.part.0>
0x6701:   85 c0                                 	test eax, eax
0x6703:   0f 84 5a 04 00 00                     	je 0x6b63 <.Lmicrolzma_encoder_init.1+0x1353>
0x6709:   8b 84 24 50 01 00 00                  	mov eax, dword ptr [rsp + 0x150]
0x6710:   89 c2                                 	mov edx, eax
0x6712:   83 e2 fd                              	and edx, 0xfffffffd
0x6715:   81 fa b1 00 00 00                     	cmp edx, 0xb1
0x671b:   0f 85 90 02 00 00                     	jne 0x69b1 <.Lmicrolzma_encoder_init.1+0x11a1>
0x6721:   80 bc 24 45 01 00 00 03               	cmp byte ptr [rsp + 0x145], 3
0x6729:   74 27                                 	je 0x6752 <.Lmicrolzma_encoder_init.1+0xf42>
0x672b:   48 8b 5c 24 38                        	mov rbx, qword ptr [rsp + 0x38]
0x6730:   48 8b 8c 24 30 01 00 00               	mov rcx, qword ptr [rsp + 0x130]
0x6738:   48 01 4c 24 10                        	add qword ptr [rsp + 0x10], rcx
0x673d:   48 89 5c 24 38                        	mov qword ptr [rsp + 0x38], rbx
0x6742:   48 8b 1c 24                           	mov rbx, qword ptr [rsp]
0x6746:   48 39 5c 24 10                        	cmp qword ptr [rsp + 0x10], rbx
0x674b:   72 95                                 	jb 0x66e2 <.Lmicrolzma_encoder_init.1+0xed2>
0x674d:   e9 99 04 00 00                        	jmp 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x6752:   8a 8c 24 38 01 00 00                  	mov cl, byte ptr [rsp + 0x138]
0x6759:   8b c1                                 	mov eax, ecx
0x675b:   83 e0 40                              	and eax, 0x40
0x675e:   66 f7 84 24 38 01 00 00 40 10         	test word ptr [rsp + 0x138], 0x1040
0x6768:   75 0c                                 	jne 0x6776 <.Lmicrolzma_encoder_init.1+0xf66>
0x676a:   84 c0                                 	test al, al
0x676c:   0f 84 81 00 00 00                     	je 0x67f3 <.Lmicrolzma_encoder_init.1+0xfe3>
0x6772:   31 c0                                 	xor eax, eax
0x6774:   eb 54                                 	jmp 0x67ca <.Lmicrolzma_encoder_init.1+0xfba>
0x6776:   84 c0                                 	test al, al
0x6778:   74 1d                                 	je 0x6797 <.Lmicrolzma_encoder_init.1+0xf87>
0x677a:   8a 84 24 46 01 00 00                  	mov al, byte ptr [rsp + 0x146]
0x6781:   f6 c1 20                              	test cl, 0x20
0x6784:   74 44                                 	je 0x67ca <.Lmicrolzma_encoder_init.1+0xfba>
0x6786:   0f b6 94 24 43 01 00 00               	movzx edx, byte ptr [rsp + 0x143]
0x678e:   01 d2                                 	add edx, edx
0x6790:   83 e2 08                              	and edx, 8
0x6793:   0b c2                                 	or eax, edx
0x6795:   eb 33                                 	jmp 0x67ca <.Lmicrolzma_encoder_init.1+0xfba>
0x6797:   44 8a 94 24 39 01 00 00               	mov r10b, byte ptr [rsp + 0x139]
0x679f:   41 80 e2 10                           	and r10b, 0x10
0x67a3:   74 51                                 	je 0x67f6 <.Lmicrolzma_encoder_init.1+0xfe6>
0x67a5:   80 e1 20                              	and cl, 0x20
0x67a8:   8a 84 24 48 01 00 00                  	mov al, byte ptr [rsp + 0x148]
0x67af:   0f 84 74 07 00 00                     	je 0x6f29 <.Lmicrolzma_encoder_init.1+0x1719>
0x67b5:   0f b6 94 24 43 01 00 00               	movzx edx, byte ptr [rsp + 0x143]
0x67bd:   c1 e2 03                              	shl edx, 3
0x67c0:   83 e2 08                              	and edx, 8
0x67c3:   0b c2                                 	or eax, edx
0x67c5:   e9 5f 07 00 00                        	jmp 0x6f29 <.Lmicrolzma_encoder_init.1+0x1719>
0x67ca:   80 e1 20                              	and cl, 0x20
0x67cd:   44 8a 94 24 47 01 00 00               	mov r10b, byte ptr [rsp + 0x147]
0x67d5:   74 11                                 	je 0x67e8 <.Lmicrolzma_encoder_init.1+0xfd8>
0x67d7:   0f b6 94 24 43 01 00 00               	movzx edx, byte ptr [rsp + 0x143]
0x67df:   c1 e2 03                              	shl edx, 3
0x67e2:   83 e2 08                              	and edx, 8
0x67e5:   41 09 d2                              	or r10d, edx
0x67e8:   44 38 d0                              	cmp al, r10b
0x67eb:   0f 85 3a ff ff ff                     	jne 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x67f1:   eb 03                                 	jmp 0x67f6 <.Lmicrolzma_encoder_init.1+0xfe6>
0x67f3:   45 31 d2                              	xor r10d, r10d
0x67f6:   31 c0                                 	xor eax, eax
0x67f8:   48 8d bc 24 80 01 00 00               	lea rdi, [rsp + 0x180]
0x6800:   45 31 c0                              	xor r8d, r8d
0x6803:   45 31 c9                              	xor r9d, r9d
0x6806:   b9 16 00 00 00                        	mov ecx, 0x16
0x680b:   44 89 44 24 38                        	mov dword ptr [rsp + 0x38], r8d
0x6810:   45 31 f6                              	xor r14d, r14d
0x6813:   33 db                                 	xor ebx, ebx
0x6815:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6817:   48 8d 84 24 80 01 00 00               	lea rax, [rsp + 0x180]
0x681f:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x6824:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x6829:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x682d:   48 3b f8                              	cmp rdi, rax
0x6830:   73 07                                 	jae 0x6839 <.Lmicrolzma_encoder_init.1+0x1029>
0x6832:   83 7c 24 38 04                        	cmp dword ptr [rsp + 0x38], 4
0x6837:   76 17                                 	jbe 0x6850 <.Lmicrolzma_encoder_init.1+0x1040>
0x6839:   48 85 db                              	test rbx, rbx
0x683c:   0f 84 6a 02 00 00                     	je 0x6aac <.Lmicrolzma_encoder_init.1+0x129c>
0x6842:   4d 85 f6                              	test r14, r14
0x6845:   0f 84 61 02 00 00                     	je 0x6aac <.Lmicrolzma_encoder_init.1+0x129c>
0x684b:   e9 e7 02 00 00                        	jmp 0x6b37 <.Lmicrolzma_encoder_init.1+0x1327>
0x6850:   48 85 db                              	test rbx, rbx
0x6853:   74 09                                 	je 0x685e <.Lmicrolzma_encoder_init.1+0x104e>
0x6855:   4d 85 f6                              	test r14, r14
0x6858:   0f 85 d9 02 00 00                     	jne 0x6b37 <.Lmicrolzma_encoder_init.1+0x1327>
0x685e:   4c 8b 44 24 40                        	mov r8, qword ptr [rsp + 0x40]
0x6863:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x6867:   33 c9                                 	xor ecx, ecx
0x6869:   ba 01 00 00 00                        	mov edx, 1
0x686e:   44 88 4c 24 7e                        	mov byte ptr [rsp + 0x7e], r9b
0x6873:   44 88 54 24 70                        	mov byte ptr [rsp + 0x70], r10b
0x6878:   e8 63 a5 ff ff                        	call 0xde0 <.Llzma_filters_update.1>
0x687d:   44 8a 54 24 70                        	mov r10b, byte ptr [rsp + 0x70]
0x6882:   44 8a 4c 24 7e                        	mov r9b, byte ptr [rsp + 0x7e]
0x6887:   85 c0                                 	test eax, eax
0x6889:   74 ae                                 	je 0x6839 <.Lmicrolzma_encoder_init.1+0x1029>
0x688b:   66 f7 84 24 90 01 00 00 40 10         	test word ptr [rsp + 0x190], 0x1040
0x6895:   74 4e                                 	je 0x68e5 <.Lmicrolzma_encoder_init.1+0x10d5>
0x6897:   8a 84 24 90 01 00 00                  	mov al, byte ptr [rsp + 0x190]
0x689e:   a8 40                                 	test al, 0x40
0x68a0:   74 18                                 	je 0x68ba <.Lmicrolzma_encoder_init.1+0x10aa>
0x68a2:   44 8a 8c 24 9e 01 00 00               	mov r9b, byte ptr [rsp + 0x19e]
0x68aa:   a8 20                                 	test al, 0x20
0x68ac:   74 37                                 	je 0x68e5 <.Lmicrolzma_encoder_init.1+0x10d5>
0x68ae:   0f b6 84 24 9b 01 00 00               	movzx eax, byte ptr [rsp + 0x19b]
0x68b6:   03 c0                                 	add eax, eax
0x68b8:   eb 25                                 	jmp 0x68df <.Lmicrolzma_encoder_init.1+0x10cf>
0x68ba:   44 8a 8c 24 91 01 00 00               	mov r9b, byte ptr [rsp + 0x191]
0x68c2:   41 80 e1 10                           	and r9b, 0x10
0x68c6:   74 1d                                 	je 0x68e5 <.Lmicrolzma_encoder_init.1+0x10d5>
0x68c8:   44 8a 8c 24 a0 01 00 00               	mov r9b, byte ptr [rsp + 0x1a0]
0x68d0:   a8 20                                 	test al, 0x20
0x68d2:   74 11                                 	je 0x68e5 <.Lmicrolzma_encoder_init.1+0x10d5>
0x68d4:   0f b6 84 24 9b 01 00 00               	movzx eax, byte ptr [rsp + 0x19b]
0x68dc:   c1 e0 03                              	shl eax, 3
0x68df:   83 e0 08                              	and eax, 8
0x68e2:   41 09 c1                              	or r9d, eax
0x68e5:   45 38 ca                              	cmp r10b, r9b
0x68e8:   0f 85 a4 00 00 00                     	jne 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x68ee:   f6 84 24 91 01 00 00 01               	test byte ptr [rsp + 0x191], 1
0x68f6:   0f 84 96 00 00 00                     	je 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x68fc:   8b 84 24 9c 01 00 00                  	mov eax, dword ptr [rsp + 0x19c]
0x6903:   48 8b 8c 24 b0 01 00 00               	mov rcx, qword ptr [rsp + 0x1b0]
0x690b:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x6910:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x6915:   75 10                                 	jne 0x6927 <.Lmicrolzma_encoder_init.1+0x1117>
0x6917:   48 03 8c 24 80 01 00 00               	add rcx, qword ptr [rsp + 0x180]
0x691f:   48 03 8c 24 88 01 00 00               	add rcx, qword ptr [rsp + 0x188]
0x6927:   31 ff                                 	xor edi, edi
0x6929:   31 d2                                 	xor edx, edx
0x692b:   44 88 4c 24 7f                        	mov byte ptr [rsp + 0x7f], r9b
0x6930:   48 8d b4 24 c8 00 00 00               	lea rsi, [rsp + 0xc8]
0x6938:   48 89 bc 24 c8 00 00 00               	mov qword ptr [rsp + 0xc8], rdi
0x6940:   48 8d bc 24 40 02 00 00               	lea rdi, [rsp + 0x240]
0x6948:   44 88 54 24 7e                        	mov byte ptr [rsp + 0x7e], r10b
0x694d:   48 89 4c 24 70                        	mov qword ptr [rsp + 0x70], rcx
0x6952:   e8 d9 b7 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x6957:   44 8a 54 24 7e                        	mov r10b, byte ptr [rsp + 0x7e]
0x695c:   44 8a 4c 24 7f                        	mov r9b, byte ptr [rsp + 0x7f]
0x6961:   48 85 c0                              	test rax, rax
0x6964:   74 2c                                 	je 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x6966:   48 8b 94 24 c8 00 00 00               	mov rdx, qword ptr [rsp + 0xc8]
0x696e:   48 8b 4c 24 70                        	mov rcx, qword ptr [rsp + 0x70]
0x6973:   48 03 d0                              	add rdx, rax
0x6976:   48 39 d1                              	cmp rcx, rdx
0x6979:   73 17                                 	jae 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x697b:   48 39 c8                              	cmp rax, rcx
0x697e:   77 12                                 	ja 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x6980:   4c 39 f1                              	cmp rcx, r14
0x6983:   75 05                                 	jne 0x698a <.Lmicrolzma_encoder_init.1+0x117a>
0x6985:   48 3b cb                              	cmp rcx, rbx
0x6988:   74 08                                 	je 0x6992 <.Lmicrolzma_encoder_init.1+0x1182>
0x698a:   48 85 db                              	test rbx, rbx
0x698d:   74 06                                 	je 0x6995 <.Lmicrolzma_encoder_init.1+0x1185>
0x698f:   49 89 ce                              	mov r14, rcx
0x6992:   48 8b cb                              	mov rcx, rbx
0x6995:   48 8b bc 24 88 01 00 00               	mov rdi, qword ptr [rsp + 0x188]
0x699d:   ff 44 24 38                           	inc dword ptr [rsp + 0x38]
0x69a1:   48 89 cb                              	mov rbx, rcx
0x69a4:   48 03 bc 24 80 01 00 00               	add rdi, qword ptr [rsp + 0x180]
0x69ac:   e9 78 fe ff ff                        	jmp 0x6829 <.Lmicrolzma_encoder_init.1+0x1019>
0x69b1:   3d 47 01 00 00                        	cmp eax, 0x147
0x69b6:   0f 85 6f fd ff ff                     	jne 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x69bc:   8b 84 24 44 01 00 00                  	mov eax, dword ptr [rsp + 0x144]
0x69c3:   30 c0                                 	xor al, al
0x69c5:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x69ca:   0f 85 5b fd ff ff                     	jne 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x69d0:   8a 84 24 39 01 00 00                  	mov al, byte ptr [rsp + 0x139]
0x69d7:   a8 08                                 	test al, 8
0x69d9:   0f 84 4c fd ff ff                     	je 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x69df:   48 8b 9c 24 68 01 00 00               	mov rbx, qword ptr [rsp + 0x168]
0x69e7:   48 85 db                              	test rbx, rbx
0x69ea:   0f 85 3b fd ff ff                     	jne 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x69f0:   a8 01                                 	test al, 1
0x69f2:   74 18                                 	je 0x6a0c <.Lmicrolzma_encoder_init.1+0x11fc>
0x69f4:   48 8b 9c 24 58 01 00 00               	mov rbx, qword ptr [rsp + 0x158]
0x69fc:   48 03 9c 24 28 01 00 00               	add rbx, qword ptr [rsp + 0x128]
0x6a04:   48 03 9c 24 30 01 00 00               	add rbx, qword ptr [rsp + 0x130]
0x6a0c:   33 f6                                 	xor esi, esi
0x6a0e:   48 8d 84 24 80 01 00 00               	lea rax, [rsp + 0x180]
0x6a16:   31 d2                                 	xor edx, edx
0x6a18:   48 89 b4 24 80 01 00 00               	mov qword ptr [rsp + 0x180], rsi
0x6a20:   48 8d bc 24 40 02 00 00               	lea rdi, [rsp + 0x240]
0x6a28:   48 8b f0                              	mov rsi, rax
0x6a2b:   48 89 44 24 40                        	mov qword ptr [rsp + 0x40], rax
0x6a30:   e8 fb b6 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x6a35:   48 85 c0                              	test rax, rax
0x6a38:   0f 84 ed fc ff ff                     	je 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x6a3e:   48 8b 94 24 80 01 00 00               	mov rdx, qword ptr [rsp + 0x180]
0x6a46:   48 03 d0                              	add rdx, rax
0x6a49:   48 3b da                              	cmp rbx, rdx
0x6a4c:   0f 83 d9 fc ff ff                     	jae 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x6a52:   48 3b c3                              	cmp rax, rbx
0x6a55:   0f 87 d0 fc ff ff                     	ja 0x672b <.Lmicrolzma_encoder_init.1+0xf1b>
0x6a5b:   48 8b 7c 24 40                        	mov rdi, qword ptr [rsp + 0x40]
0x6a60:   b9 16 00 00 00                        	mov ecx, 0x16
0x6a65:   31 c0                                 	xor eax, eax
0x6a67:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6a69:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0x6a6e:   48 8b 54 24 40                        	mov rdx, qword ptr [rsp + 0x40]
0x6a73:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x6a77:   45 31 c0                              	xor r8d, r8d
0x6a7a:   b9 47 01 00 00                        	mov ecx, 0x147
0x6a7f:   e8 bc a5 ff ff                        	call 0x1040 <.Llzma_properties_size.0>
0x6a84:   85 c0                                 	test eax, eax
0x6a86:   74 24                                 	je 0x6aac <.Lmicrolzma_encoder_init.1+0x129c>
0x6a88:   48 83 bc 24 c0 01 00 00 00            	cmp qword ptr [rsp + 0x1c0], 0
0x6a91:   74 23                                 	je 0x6ab6 <.Lmicrolzma_encoder_init.1+0x12a6>
0x6a93:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x6a97:   48 8b bc 24 88 01 00 00               	mov rdi, qword ptr [rsp + 0x188]
0x6a9f:   48 03 bc 24 80 01 00 00               	add rdi, qword ptr [rsp + 0x180]
0x6aa7:   48 39 c7                              	cmp rdi, rax
0x6aaa:   72 c2                                 	jb 0x6a6e <.Lmicrolzma_encoder_init.1+0x125e>
0x6aac:   45 31 f6                              	xor r14d, r14d
0x6aaf:   33 db                                 	xor ebx, ebx
0x6ab1:   e9 7a fc ff ff                        	jmp 0x6730 <.Lmicrolzma_encoder_init.1+0xf20>
0x6ab6:   f6 84 24 91 01 00 00 01               	test byte ptr [rsp + 0x191], 1
0x6abe:   74 d3                                 	je 0x6a93 <.Lmicrolzma_encoder_init.1+0x1283>
0x6ac0:   8b 84 24 9c 01 00 00                  	mov eax, dword ptr [rsp + 0x19c]
0x6ac7:   4c 8b b4 24 b0 01 00 00               	mov r14, qword ptr [rsp + 0x1b0]
0x6acf:   25 00 ff 00 ff                        	and eax, 0xff00ff00
0x6ad4:   3d 00 00 00 05                        	cmp eax, 0x5000000
0x6ad9:   75 10                                 	jne 0x6aeb <.Lmicrolzma_encoder_init.1+0x12db>
0x6adb:   4c 03 b4 24 80 01 00 00               	add r14, qword ptr [rsp + 0x180]
0x6ae3:   4c 03 b4 24 88 01 00 00               	add r14, qword ptr [rsp + 0x188]
0x6aeb:   31 c9                                 	xor ecx, ecx
0x6aed:   33 d2                                 	xor edx, edx
0x6aef:   48 8d b4 24 c8 00 00 00               	lea rsi, [rsp + 0xc8]
0x6af7:   48 8d bc 24 40 02 00 00               	lea rdi, [rsp + 0x240]
0x6aff:   48 89 8c 24 c8 00 00 00               	mov qword ptr [rsp + 0xc8], rcx
0x6b07:   e8 24 b6 ff ff                        	call 0x2130 <.Lmicrolzma_decode.0>
0x6b0c:   48 85 c0                              	test rax, rax
0x6b0f:   74 82                                 	je 0x6a93 <.Lmicrolzma_encoder_init.1+0x1283>
0x6b11:   48 8b 94 24 c8 00 00 00               	mov rdx, qword ptr [rsp + 0xc8]
0x6b19:   48 01 c2                              	add rdx, rax
0x6b1c:   49 39 d6                              	cmp r14, rdx
0x6b1f:   0f 83 6e ff ff ff                     	jae 0x6a93 <.Lmicrolzma_encoder_init.1+0x1283>
0x6b25:   4c 39 f0                              	cmp rax, r14
0x6b28:   0f 87 65 ff ff ff                     	ja 0x6a93 <.Lmicrolzma_encoder_init.1+0x1283>
0x6b2e:   4c 39 f3                              	cmp rbx, r14
0x6b31:   0f 84 5c ff ff ff                     	je 0x6a93 <.Lmicrolzma_encoder_init.1+0x1283>
0x6b37:   4c 8b 4c 24 08                        	mov r9, qword ptr [rsp + 8]
0x6b3c:   48 8b 4c 24 60                        	mov rcx, qword ptr [rsp + 0x60]
0x6b41:   4c 89 f6                              	mov rsi, r14
0x6b44:   48 89 df                              	mov rdi, rbx
0x6b47:   48 8b 54 24 30                        	mov rdx, qword ptr [rsp + 0x30]
0x6b4c:   4c 8d 84 24 b0 07 00 00               	lea r8, [rsp + 0x7b0]
0x6b54:   e8 97 bf ff ff                        	call 0x2af0 <function_2af0>
0x6b59:   85 c0                                 	test eax, eax
0x6b5b:   0f 84 cf fb ff ff                     	je 0x6730 <.Lmicrolzma_encoder_init.1+0xf20>
0x6b61:   eb 15                                 	jmp 0x6b78 <.Lmicrolzma_encoder_init.1+0x1368>
0x6b63:   48 ff 44 24 10                        	inc qword ptr [rsp + 0x10]
0x6b68:   e9 d5 fb ff ff                        	jmp 0x6742 <.Lmicrolzma_encoder_init.1+0xf32>
0x6b6d:   4d 85 f6                              	test r14, r14
0x6b70:   0f 84 78 fb ff ff                     	je 0x66ee <.Lmicrolzma_encoder_init.1+0xede>
0x6b76:   eb 73                                 	jmp 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x6b78:   49 89 5c 24 38                        	mov qword ptr [r12 + 0x38], rbx
0x6b7d:   48 8d 9c 24 40 02 00 00               	lea rbx, [rsp + 0x240]
0x6b85:   31 d2                                 	xor edx, edx
0x6b87:   4d 89 74 24 40                        	mov qword ptr [r12 + 0x40], r14
0x6b8c:   4c 8d b4 24 80 01 00 00               	lea r14, [rsp + 0x180]
0x6b94:   48 89 df                              	mov rdi, rbx
0x6b97:   41 c7 44 24 04 01 00 00 00            	mov dword ptr [r12 + 4], 1
0x6ba0:   4c 89 f6                              	mov rsi, r14
0x6ba3:   c7 84 24 80 01 00 00 08 07 00 00      	mov dword ptr [rsp + 0x180], 0x708
0x6bae:   e8 cd b4 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6bb3:   49 89 44 24 10                        	mov qword ptr [r12 + 0x10], rax
0x6bb8:   48 85 c0                              	test rax, rax
0x6bbb:   74 26                                 	je 0x6be3 <.Lmicrolzma_encoder_init.1+0x13d3>
0x6bbd:   33 d2                                 	xor edx, edx
0x6bbf:   4c 89 f6                              	mov rsi, r14
0x6bc2:   48 89 df                              	mov rdi, rbx
0x6bc5:   c7 84 24 80 01 00 00 90 07 00 00      	mov dword ptr [rsp + 0x180], 0x790
0x6bd0:   e8 ab b4 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6bd5:   49 89 44 24 18                        	mov qword ptr [r12 + 0x18], rax
0x6bda:   48 85 c0                              	test rax, rax
0x6bdd:   0f 85 cf 02 00 00                     	jne 0x6eb2 <.Lmicrolzma_encoder_init.1+0x16a2>
0x6be3:   41 c7 04 24 01 00 00 00               	mov dword ptr [r12], 1
0x6beb:   48 8b 94 24 28 02 00 00               	mov rdx, qword ptr [rsp + 0x228]
0x6bf3:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0x6bf8:   48 83 7c 24 50 00                     	cmp qword ptr [rsp + 0x50], 0
0x6bfe:   48 89 50 10                           	mov qword ptr [rax + 0x10], rdx
0x6c02:   74 1a                                 	je 0x6c1e <.Lmicrolzma_encoder_init.1+0x140e>
0x6c04:   48 8b 44 24 50                        	mov rax, qword ptr [rsp + 0x50]
0x6c09:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x6c0d:   48 03 02                              	add rax, qword ptr [rdx]
0x6c10:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x6c17:   49 89 85 50 03 00 00                  	mov qword ptr [r13 + 0x350], rax
0x6c1e:   48 83 7c 24 58 00                     	cmp qword ptr [rsp + 0x58], 0
0x6c24:   74 1a                                 	je 0x6c40 <.Lmicrolzma_encoder_init.1+0x1430>
0x6c26:   48 8b 44 24 58                        	mov rax, qword ptr [rsp + 0x58]
0x6c2b:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x6c2f:   48 03 02                              	add rax, qword ptr [rdx]
0x6c32:   41 ff 85 c0 03 00 00                  	inc dword ptr [r13 + 0x3c0]
0x6c39:   49 89 85 58 03 00 00                  	mov qword ptr [r13 + 0x358], rax
0x6c40:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x6c45:   e8 26 bc ff ff                        	call 0x2870 <function_2870>
0x6c4a:   85 c0                                 	test eax, eax
0x6c4c:   0f 84 f0 ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6c52:   49 8b bd 18 03 00 00                  	mov rdi, qword ptr [r13 + 0x318]
0x6c59:   48 8b 74 24 20                        	mov rsi, qword ptr [rsp + 0x20]
0x6c5e:   e8 f5 5e 00 00                        	call 0xcb58 <lzma_free>
0x6c63:   41 83 bd a8 04 00 00 0c               	cmp dword ptr [r13 + 0x4a8], 0xc
0x6c6b:   0f 85 d1 ed ff ff                     	jne 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6c71:   b9 18 00 00 00                        	mov ecx, 0x18
0x6c76:   ba 7f 00 00 00                        	mov edx, 0x7f
0x6c7b:   be 45 01 00 00                        	mov esi, 0x145
0x6c80:   bf 01 00 00 00                        	mov edi, 1
0x6c85:   e8 26 3f 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x6c8a:   85 c0                                 	test eax, eax
0x6c8c:   0f 84 b0 ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6c92:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6c96:   b9 12 00 00 00                        	mov ecx, 0x12
0x6c9b:   ba 04 00 00 00                        	mov edx, 4
0x6ca0:   be 2a 01 00 00                        	mov esi, 0x12a
0x6ca5:   48 8b 78 40                           	mov rdi, qword ptr [rax + 0x40]
0x6ca9:   e8 02 3f 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x6cae:   85 c0                                 	test eax, eax
0x6cb0:   0f 84 8c ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6cb6:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6cba:   b9 20 00 00 00                        	mov ecx, 0x20
0x6cbf:   ba 04 00 00 00                        	mov edx, 4
0x6cc4:   be 13 00 00 00                        	mov esi, 0x13
0x6cc9:   bf 2e 01 00 00                        	mov edi, 0x12e
0x6cce:   4c 8b 40 48                           	mov r8, qword ptr [rax + 0x48]
0x6cd2:   e8 b9 3e 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6cd7:   85 c0                                 	test eax, eax
0x6cd9:   0f 84 63 ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6cdf:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x6ce3:   b9 14 00 00 00                        	mov ecx, 0x14
0x6ce8:   ba 06 00 00 00                        	mov edx, 6
0x6ced:   be 32 01 00 00                        	mov esi, 0x132
0x6cf2:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x6cf6:   e8 b5 3e 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0x6cfb:   85 c0                                 	test eax, eax
0x6cfd:   0f 84 3f ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6d03:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6d07:   b9 10 00 00 00                        	mov ecx, 0x10
0x6d0c:   ba 02 00 00 00                        	mov edx, 2
0x6d11:   be 15 00 00 00                        	mov esi, 0x15
0x6d16:   bf 38 01 00 00                        	mov edi, 0x138
0x6d1b:   4c 8b 40 50                           	mov r8, qword ptr [rax + 0x50]
0x6d1f:   e8 6c 3e 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6d24:   85 c0                                 	test eax, eax
0x6d26:   0f 84 16 ed ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6d2c:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6d30:   b9 20 00 00 00                        	mov ecx, 0x20
0x6d35:   ba 26 00 00 00                        	mov edx, 0x26
0x6d3a:   be 10 00 00 00                        	mov esi, 0x10
0x6d3f:   bf ee 00 00 00                        	mov edi, 0xee
0x6d44:   4c 8b 40 70                           	mov r8, qword ptr [rax + 0x70]
0x6d48:   e8 43 3e 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6d4d:   85 c0                                 	test eax, eax
0x6d4f:   0f 84 ed ec ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6d55:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6d59:   b9 20 00 00 00                        	mov ecx, 0x20
0x6d5e:   ba 05 00 00 00                        	mov edx, 5
0x6d63:   be 17 00 00 00                        	mov esi, 0x17
0x6d68:   bf 40 01 00 00                        	mov edi, 0x140
0x6d6d:   4c 8b 40 78                           	mov r8, qword ptr [rax + 0x78]
0x6d71:   e8 1a 3e 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6d76:   85 c0                                 	test eax, eax
0x6d78:   0f 84 c4 ec ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6d7e:   49 8b 47 08                           	mov rax, qword ptr [r15 + 8]
0x6d82:   b9 20 00 00 00                        	mov ecx, 0x20
0x6d87:   ba 06 00 00 00                        	mov edx, 6
0x6d8c:   be 16 00 00 00                        	mov esi, 0x16
0x6d91:   bf 3a 01 00 00                        	mov edi, 0x13a
0x6d96:   4c 8b 00                              	mov r8, qword ptr [rax]
0x6d99:   e8 f2 3d 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6d9e:   85 c0                                 	test eax, eax
0x6da0:   0f 84 9c ec ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6da6:   48 8b 44 24 28                        	mov rax, qword ptr [rsp + 0x28]
0x6dab:   b9 10 00 00 00                        	mov ecx, 0x10
0x6db0:   ba 16 00 00 00                        	mov edx, 0x16
0x6db5:   be 11 00 00 00                        	mov esi, 0x11
0x6dba:   bf 14 01 00 00                        	mov edi, 0x114
0x6dbf:   4c 8b 40 30                           	mov r8, qword ptr [rax + 0x30]
0x6dc3:   e8 c8 3d 00 00                        	call 0xab90 <.Llzma_check_init.part.0>
0x6dc8:   85 c0                                 	test eax, eax
0x6dca:   0f 84 72 ec ff ff                     	je 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6dd0:   41 81 bd 98 02 00 00 c8 01 00 00      	cmp dword ptr [r13 + 0x298], 0x1c8
0x6ddb:   0f 85 61 ec ff ff                     	jne 0x5a42 <.Lmicrolzma_encoder_init.1+0x232>
0x6de1:   49 8b 85 f8 00 00 00                  	mov rax, qword ptr [r13 + 0xf8]
0x6de8:   48 8b 94 24 d8 01 00 00               	mov rdx, qword ptr [rsp + 0x1d8]
0x6df0:   48 8d b4 24 10 0b 00 00               	lea rsi, [rsp + 0xb10]
0x6df8:   4c 89 28                              	mov qword ptr [rax], r13
0x6dfb:   48 8b 84 24 90 00 00 00               	mov rax, qword ptr [rsp + 0x90]
0x6e03:   48 83 c0 08                           	add rax, 8
0x6e07:   48 01 c2                              	add rdx, rax
0x6e0a:   8b 0a                                 	mov ecx, dword ptr [rdx]
0x6e0c:   49 89 55 50                           	mov qword ptr [r13 + 0x50], rdx
0x6e10:   41 89 4d 58                           	mov dword ptr [r13 + 0x58], ecx
0x6e14:   c7 02 02 00 00 00                     	mov dword ptr [rdx], 2
0x6e1a:   49 8b 55 60                           	mov rdx, qword ptr [r13 + 0x60]
0x6e1e:   41 8a 4d 68                           	mov cl, byte ptr [r13 + 0x68]
0x6e22:   08 0a                                 	or byte ptr [rdx], cl
0x6e24:   48 03 84 24 f0 01 00 00               	add rax, qword ptr [rsp + 0x1f0]
0x6e2c:   b9 1e 00 00 00                        	mov ecx, 0x1e
0x6e31:   8b 10                                 	mov edx, dword ptr [rax]
0x6e33:   49 89 45 40                           	mov qword ptr [r13 + 0x40], rax
0x6e37:   41 89 55 48                           	mov dword ptr [r13 + 0x48], edx
0x6e3b:   49 8d 95 80 00 00 00                  	lea rdx, [r13 + 0x80]
0x6e42:   c7 00 01 00 00 00                     	mov dword ptr [rax], 1
0x6e48:   48 8b fa                              	mov rdi, rdx
0x6e4b:   31 c0                                 	xor eax, eax
0x6e4d:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6e4f:   49 8b 47 10                           	mov rax, qword ptr [r15 + 0x10]
0x6e53:   48 8b 40 40                           	mov rax, qword ptr [rax + 0x40]
0x6e57:   49 89 85 a0 00 00 00                  	mov qword ptr [r13 + 0xa0], rax
0x6e5e:   49 8b 45 70                           	mov rax, qword ptr [r13 + 0x70]
0x6e62:   48 89 10                              	mov qword ptr [rax], rdx
0x6e65:   49 8b 45 78                           	mov rax, qword ptr [r13 + 0x78]
0x6e69:   48 8b 94 24 28 0b 00 00               	mov rdx, qword ptr [rsp + 0xb28]
0x6e71:   c7 00 01 00 00 00                     	mov dword ptr [rax], 1
0x6e77:   31 c0                                 	xor eax, eax
0x6e79:   48 85 d2                              	test rdx, rdx
0x6e7c:   75 25                                 	jne 0x6ea3 <.Lmicrolzma_encoder_init.1+0x1693>
0x6e7e:   48 8d 94 24 d8 01 00 00               	lea rdx, [rsp + 0x1d8]
0x6e86:   31 c0                                 	xor eax, eax
0x6e88:   b9 56 02 00 00                        	mov ecx, 0x256
0x6e8d:   be 01 00 00 00                        	mov esi, 1
0x6e92:   48 89 d7                              	mov rdi, rdx
0x6e95:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6e97:   49 8b bf 80 00 00 00                  	mov rdi, qword ptr [r15 + 0x80]
0x6e9e:   e9 dd eb ff ff                        	jmp 0x5a80 <.Lmicrolzma_encoder_init.1+0x270>
0x6ea3:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0x6ea6:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0x6ea9:   48 ff c0                              	inc rax
0x6eac:   48 83 f8 18                           	cmp rax, 0x18
0x6eb0:   eb ca                                 	jmp 0x6e7c <.Lmicrolzma_encoder_init.1+0x166c>
0x6eb2:   33 d2                                 	xor edx, edx
0x6eb4:   4c 89 f6                              	mov rsi, r14
0x6eb7:   48 8b fb                              	mov rdi, rbx
0x6eba:   c7 84 24 80 01 00 00 f0 04 00 00      	mov dword ptr [rsp + 0x180], 0x4f0
0x6ec5:   e8 b6 b1 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6eca:   49 89 44 24 20                        	mov qword ptr [r12 + 0x20], rax
0x6ecf:   48 85 c0                              	test rax, rax
0x6ed2:   0f 84 0b fd ff ff                     	je 0x6be3 <.Lmicrolzma_encoder_init.1+0x13d3>
0x6ed8:   31 d2                                 	xor edx, edx
0x6eda:   4c 89 f6                              	mov rsi, r14
0x6edd:   48 89 df                              	mov rdi, rbx
0x6ee0:   c7 84 24 80 01 00 00 d8 01 00 00      	mov dword ptr [rsp + 0x180], 0x1d8
0x6eeb:   e8 90 b1 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6ef0:   49 89 44 24 28                        	mov qword ptr [r12 + 0x28], rax
0x6ef5:   48 85 c0                              	test rax, rax
0x6ef8:   0f 84 e5 fc ff ff                     	je 0x6be3 <.Lmicrolzma_encoder_init.1+0x13d3>
0x6efe:   33 d2                                 	xor edx, edx
0x6f00:   4c 89 f6                              	mov rsi, r14
0x6f03:   48 89 df                              	mov rdi, rbx
0x6f06:   c7 84 24 80 01 00 00 10 0b 00 00      	mov dword ptr [rsp + 0x180], 0xb10
0x6f11:   e8 6a b1 ff ff                        	call 0x2080 <.Llzip_decode.0>
0x6f16:   49 89 44 24 30                        	mov qword ptr [r12 + 0x30], rax
0x6f1b:   48 85 c0                              	test rax, rax
0x6f1e:   0f 85 c7 fc ff ff                     	jne 0x6beb <.Lmicrolzma_encoder_init.1+0x13db>
0x6f24:   e9 ba fc ff ff                        	jmp 0x6be3 <.Lmicrolzma_encoder_init.1+0x13d3>
0x6f29:   45 31 d2                              	xor r10d, r10d
0x6f2c:   e9 b7 f8 ff ff                        	jmp 0x67e8 <.Lmicrolzma_encoder_init.1+0xfd8>
0x6f31:   48 81 c4 30 0b 00 00                  	add rsp, 0xb30
0x6f38:   33 c0                                 	xor eax, eax
0x6f3a:   5b                                    	pop rbx
0x6f3b:   41 5c                                 	pop r12
0x6f3d:   41 5d                                 	pop r13
0x6f3f:   41 5e                                 	pop r14
0x6f41:   41 5f                                 	pop r15
0x6f43:   c3                                    	ret 
; section: .text.lzma_validate_chaia
; function: .Llzma_delta_props_encoder at 0x6f50 -- 0x704e
0x6f50:   f3 0f 1e fa                           	endbr64 
0x6f54:   41 54                                 	push r12
0x6f56:   31 c0                                 	xor eax, eax
0x6f58:   49 89 fc                              	mov r12, rdi
0x6f5b:   b9 22 00 00 00                        	mov ecx, 0x22
0x6f60:   53                                    	push rbx
0x6f61:   31 f6                                 	xor esi, esi
0x6f63:   48 81 ec 38 01 00 00                  	sub rsp, 0x138
0x6f6a:   48 8d 7c 24 20                        	lea rdi, [rsp + 0x20]
0x6f6f:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6f71:   48 8d bc 24 a8 00 00 00               	lea rdi, [rsp + 0xa8]
0x6f79:   b9 22 00 00 00                        	mov ecx, 0x22
0x6f7e:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x6f80:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x6f87:   48 8d bc 24 c0 00 00 00               	lea rdi, [rsp + 0xc0]
0x6f8f:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0x6f94:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x6f9b:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x6fa0:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0x6fa7:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x6fac:   e8 97 5b 00 00                        	call 0xcb48 <lzma_check_init>
0x6fb1:   48 8d 54 24 20                        	lea rdx, [rsp + 0x20]
0x6fb6:   48 8d 4c 24 08                        	lea rcx, [rsp + 8]
0x6fbb:   48 89 d7                              	mov rdi, rdx
0x6fbe:   e8 ed b7 ff ff                        	call 0x27b0 <.Llzma_delta_decoder_init.part.0>
0x6fc3:   85 c0                                 	test eax, eax
0x6fc5:   74 57                                 	je 0x701e <.Llzma_delta_props_encoder+0xce>
0x6fc7:   48 89 d7                              	mov rdi, rdx
0x6fca:   48 89 4c 24 50                        	mov qword ptr [rsp + 0x50], rcx
0x6fcf:   e8 dc b7 ff ff                        	call 0x27b0 <.Llzma_delta_decoder_init.part.0>
0x6fd4:   83 f8 05                              	cmp eax, 5
0x6fd7:   75 ea                                 	jne 0x6fc3 <.Llzma_delta_props_encoder+0x73>
0x6fd9:   31 c0                                 	xor eax, eax
0x6fdb:   49 c7 04 24 01 00 00 00               	mov qword ptr [r12], 1
0x6fe3:   49 89 44 24 08                        	mov qword ptr [r12 + 8], rax
0x6fe8:   49 89 44 24 10                        	mov qword ptr [r12 + 0x10], rax
0x6fed:   49 89 44 24 18                        	mov qword ptr [r12 + 0x18], rax
0x6ff2:   49 89 44 24 20                        	mov qword ptr [r12 + 0x20], rax
0x6ff7:   31 c0                                 	xor eax, eax
0x6ff9:   0f a2                                 	cpuid 
0x6ffb:   85 c0                                 	test eax, eax
0x6ffd:   74 1b                                 	je 0x701a <.Llzma_delta_props_encoder+0xca>
0x6fff:   b8 01 00 00 00                        	mov eax, 1
0x7004:   0f a2                                 	cpuid 
0x7006:   41 89 44 24 08                        	mov dword ptr [r12 + 8], eax
0x700b:   41 89 5c 24 10                        	mov dword ptr [r12 + 0x10], ebx
0x7010:   41 89 4c 24 18                        	mov dword ptr [r12 + 0x18], ecx
0x7015:   41 89 54 24 20                        	mov dword ptr [r12 + 0x20], edx
0x701a:   31 c0                                 	xor eax, eax
0x701c:   eb 25                                 	jmp 0x7043 <.Llzma_delta_props_encoder+0xf3>
0x701e:   48 8d bc 24 a8 00 00 00               	lea rdi, [rsp + 0xa8]
0x7026:   48 89 94 24 b8 00 00 00               	mov qword ptr [rsp + 0xb8], rdx
0x702e:   48 89 8c 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rcx
0x7036:   4c 89 a4 24 28 01 00 00               	mov qword ptr [rsp + 0x128], r12
0x703e:   e8 cd e7 ff ff                        	call 0x5810 <.Lmicrolzma_encoder_init.1>
0x7043:   48 81 c4 38 01 00 00                  	add rsp, 0x138
0x704a:   5b                                    	pop rbx
0x704b:   41 5c                                 	pop r12
0x704d:   c3                                    	ret 
; section: .text.parse_optiona
; function: function_7050 at 0x7050 -- 0x706b
0x7050:   80 3f 00                              	cmp byte ptr [rdi], 0
0x7053:   74 10                                 	je 0x7065 <function_7050+0x15>
0x7055:   b8 00 00 00 00                        	mov eax, 0
0x705a:   48 83 c0 01                           	add rax, 1
0x705e:   80 3c 07 00                           	cmp byte ptr [rdi + rax], 0
0x7062:   75 f6                                 	jne 0x705a <function_7050+0xa>
0x7064:   c3                                    	ret 
0x7065:   b8 00 00 00 00                        	mov eax, 0
0x706a:   c3                                    	ret 
; data inside code section at 0x706b -- 0x7070
0x706b:   0f 1f 44 00 00                                     |..D..           |
; function: function_7070 at 0x7070 -- 0x7093
0x7070:   48 89 f0                              	mov rax, rsi
0x7073:   ba 00 00 00 00                        	mov edx, 0
0x7078:   48 85 f6                              	test rsi, rsi
0x707b:   75 0b                                 	jne 0x7088 <function_7070+0x18>
0x707d:   eb 13                                 	jmp 0x7092 <function_7070+0x22>
0x707f:   48 83 c2 01                           	add rdx, 1
0x7083:   48 39 d0                              	cmp rax, rdx
0x7086:   74 09                                 	je 0x7091 <function_7070+0x21>
0x7088:   80 3c 17 00                           	cmp byte ptr [rdi + rdx], 0
0x708c:   75 f1                                 	jne 0x707f <function_7070+0xf>
0x708e:   48 89 d0                              	mov rax, rdx
0x7091:   c3                                    	ret 
0x7092:   c3                                    	ret 
; section: .text.auto_decoder_inia
; function: function_70a0 at 0x70a0 -- 0x710d
0x70a0:   31 c0                                 	xor eax, eax
0x70a2:   48 85 d2                              	test rdx, rdx
0x70a5:   74 65                                 	je 0x710c <function_70a0+0x6c>
0x70a7:   41 56                                 	push r14
0x70a9:   41 55                                 	push r13
0x70ab:   41 89 fd                              	mov r13d, edi
0x70ae:   41 54                                 	push r12
0x70b0:   55                                    	push rbp
0x70b1:   53                                    	push rbx
0x70b2:   85 ff                                 	test edi, edi
0x70b4:   78 08                                 	js 0x70be <function_70a0+0x1e>
0x70b6:   48 89 cb                              	mov rbx, rcx
0x70b9:   48 85 c9                              	test rcx, rcx
0x70bc:   75 06                                 	jne 0x70c4 <function_70a0+0x24>
0x70be:   48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x70c2:   eb 3f                                 	jmp 0x7103 <function_70a0+0x63>
0x70c4:   48 83 79 48 00                        	cmp qword ptr [rcx + 0x48], 0
0x70c9:   74 f3                                 	je 0x70be <function_70a0+0x1e>
0x70cb:   48 83 79 50 00                        	cmp qword ptr [rcx + 0x50], 0
0x70d0:   74 ec                                 	je 0x70be <function_70a0+0x1e>
0x70d2:   49 89 f4                              	mov r12, rsi
0x70d5:   48 89 d5                              	mov rbp, rdx
0x70d8:   49 89 d6                              	mov r14, rdx
0x70db:   4c 89 f2                              	mov rdx, r14
0x70de:   4c 89 e6                              	mov rsi, r12
0x70e1:   44 89 ef                              	mov edi, r13d
0x70e4:   ff 53 48                              	call qword ptr [rbx + 0x48]
0x70e7:   48 85 c0                              	test rax, rax
0x70ea:   79 0a                                 	jns 0x70f6 <function_70a0+0x56>
0x70ec:   ff 53 50                              	call qword ptr [rbx + 0x50]
0x70ef:   83 38 04                              	cmp dword ptr [rax], 4
0x70f2:   74 e7                                 	je 0x70db <function_70a0+0x3b>
0x70f4:   eb c8                                 	jmp 0x70be <function_70a0+0x1e>
0x70f6:   74 c6                                 	je 0x70be <function_70a0+0x1e>
0x70f8:   49 01 c4                              	add r12, rax
0x70fb:   49 29 c6                              	sub r14, rax
0x70fe:   75 db                                 	jne 0x70db <function_70a0+0x3b>
0x7100:   48 89 e8                              	mov rax, rbp
0x7103:   5b                                    	pop rbx
0x7104:   5d                                    	pop rbp
0x7105:   41 5c                                 	pop r12
0x7107:   41 5d                                 	pop r13
0x7109:   41 5e                                 	pop r14
0x710b:   c3                                    	ret 
0x710c:   c3                                    	ret 
; section: .text.bt_find_funa
; function: function_7110 at 0x7110 -- 0x7188
0x7110:   31 c0                                 	xor eax, eax
0x7112:   48 85 d2                              	test rdx, rdx
0x7115:   74 70                                 	je 0x7187 <function_7110+0x77>
0x7117:   41 56                                 	push r14
0x7119:   41 89 fe                              	mov r14d, edi
0x711c:   41 55                                 	push r13
0x711e:   41 54                                 	push r12
0x7120:   49 89 d4                              	mov r12, rdx
0x7123:   89 fa                                 	mov edx, edi
0x7125:   c1 ea 1f                              	shr edx, 0x1f
0x7128:   48 85 c9                              	test rcx, rcx
0x712b:   55                                    	push rbp
0x712c:   0f 94 c0                              	sete al
0x712f:   53                                    	push rbx
0x7130:   48 89 cb                              	mov rbx, rcx
0x7133:   08 d0                                 	or al, dl
0x7135:   75 08                                 	jne 0x713f <function_7110+0x2f>
0x7137:   48 89 f5                              	mov rbp, rsi
0x713a:   48 85 f6                              	test rsi, rsi
0x713d:   75 06                                 	jne 0x7145 <function_7110+0x35>
0x713f:   48 83 c8 ff                           	or rax, 0xffffffffffffffff
0x7143:   eb 39                                 	jmp 0x717e <function_7110+0x6e>
0x7145:   48 83 79 38 00                        	cmp qword ptr [rcx + 0x38], 0
0x714a:   74 f3                                 	je 0x713f <function_7110+0x2f>
0x714c:   48 83 79 50 00                        	cmp qword ptr [rcx + 0x50], 0
0x7151:   74 ec                                 	je 0x713f <function_7110+0x2f>
0x7153:   4d 89 e5                              	mov r13, r12
0x7156:   4c 89 ea                              	mov rdx, r13
0x7159:   48 89 ee                              	mov rsi, rbp
0x715c:   44 89 f7                              	mov edi, r14d
0x715f:   ff 53 38                              	call qword ptr [rbx + 0x38]
0x7162:   48 85 c0                              	test rax, rax
0x7165:   79 0a                                 	jns 0x7171 <function_7110+0x61>
0x7167:   ff 53 50                              	call qword ptr [rbx + 0x50]
0x716a:   83 38 04                              	cmp dword ptr [rax], 4
0x716d:   74 e7                                 	je 0x7156 <function_7110+0x46>
0x716f:   eb ce                                 	jmp 0x713f <function_7110+0x2f>
0x7171:   74 cc                                 	je 0x713f <function_7110+0x2f>
0x7173:   48 01 c5                              	add rbp, rax
0x7176:   49 29 c5                              	sub r13, rax
0x7179:   75 db                                 	jne 0x7156 <function_7110+0x46>
0x717b:   4c 89 e0                              	mov rax, r12
0x717e:   5b                                    	pop rbx
0x717f:   5d                                    	pop rbp
0x7180:   41 5c                                 	pop r12
0x7182:   41 5d                                 	pop r13
0x7184:   41 5e                                 	pop r14
0x7186:   c3                                    	ret 
0x7187:   c3                                    	ret 
; data inside code section at 0x7188 -- 0x7190
0x7188:   0f 1f 84 00 00 00 00 00                            |........        |
; function: function_7190 at 0x7190 -- 0x71aa
0x7190:   31 c0                                 	xor eax, eax
0x7192:   39 f0                                 	cmp eax, esi
0x7194:   73 11                                 	jae 0x71a7 <function_7190+0x17>
0x7196:   48 ff c0                              	inc rax
0x7199:   48 83 7c c7 f8 00                     	cmp qword ptr [rdi + rax*8 - 8], 0
0x719f:   75 f1                                 	jne 0x7192 <function_7190+0x2>
0x71a1:   b8 01 00 00 00                        	mov eax, 1
0x71a6:   c3                                    	ret 
0x71a7:   31 c0                                 	xor eax, eax
0x71a9:   c3                                    	ret 
; section: .text.lzma_delta_encoder_inia
; function: function_71b0 at 0x71b0 -- 0x72cf
0x71b0:   41 57                                 	push r15
0x71b2:   31 c0                                 	xor eax, eax
0x71b4:   41 56                                 	push r14
0x71b6:   41 55                                 	push r13
0x71b8:   41 54                                 	push r12
0x71ba:   55                                    	push rbp
0x71bb:   53                                    	push rbx
0x71bc:   48 83 ec 28                           	sub rsp, 0x28
0x71c0:   48 89 14 24                           	mov qword ptr [rsp], rdx
0x71c4:   89 44 24 1c                           	mov dword ptr [rsp + 0x1c], eax
0x71c8:   48 85 ff                              	test rdi, rdi
0x71cb:   74 07                                 	je 0x71d4 <function_71b0+0x24>
0x71cd:   41 89 f4                              	mov r12d, esi
0x71d0:   85 f6                                 	test esi, esi
0x71d2:   75 07                                 	jne 0x71db <function_71b0+0x2b>
0x71d4:   31 ed                                 	xor ebp, ebp
0x71d6:   e9 e3 00 00 00                        	jmp 0x72be <function_71b0+0x10e>
0x71db:   49 89 ce                              	mov r14, rcx
0x71de:   48 85 c9                              	test rcx, rcx
0x71e1:   74 f1                                 	je 0x71d4 <function_71b0+0x24>
0x71e3:   4c 89 c5                              	mov rbp, r8
0x71e6:   4d 85 c0                              	test r8, r8
0x71e9:   74 e9                                 	je 0x71d4 <function_71b0+0x24>
0x71eb:   4d 89 cf                              	mov r15, r9
0x71ee:   4d 85 c9                              	test r9, r9
0x71f1:   74 e1                                 	je 0x71d4 <function_71b0+0x24>
0x71f3:   49 89 fd                              	mov r13, rdi
0x71f6:   be 06 00 00 00                        	mov esi, 6
0x71fb:   49 8d b9 a0 00 00 00                  	lea rdi, [r9 + 0xa0]
0x7202:   e8 89 ff ff ff                        	call 0x7190 <function_7190>
0x7207:   85 c0                                 	test eax, eax
0x7209:   75 c9                                 	jne 0x71d4 <function_71b0+0x24>
0x720b:   41 ff 91 a0 00 00 00                  	call qword ptr [r9 + 0xa0]
0x7212:   48 89 c3                              	mov rbx, rax
0x7215:   48 85 c0                              	test rax, rax
0x7218:   74 ba                                 	je 0x71d4 <function_71b0+0x24>
0x721a:   4d 8b 97 a8 00 00 00                  	mov r10, qword ptr [r15 + 0xa8]
0x7221:   4c 89 54 24 08                        	mov qword ptr [rsp + 8], r10
0x7226:   41 ff 97 c8 00 00 00                  	call qword ptr [r15 + 0xc8]
0x722d:   31 d2                                 	xor edx, edx
0x722f:   48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0x7233:   4d 89 f0                              	mov r8, r14
0x7236:   4c 8b 54 24 08                        	mov r10, qword ptr [rsp + 8]
0x723b:   48 89 c6                              	mov rsi, rax
0x723e:   48 89 df                              	mov rdi, rbx
0x7241:   41 ff d2                              	call r10
0x7244:   ff c8                                 	dec eax
0x7246:   75 5c                                 	jne 0x72a4 <function_71b0+0xf4>
0x7248:   4c 8d 74 24 1c                        	lea r14, [rsp + 0x1c]
0x724d:   45 89 e0                              	mov r8d, r12d
0x7250:   4c 89 e9                              	mov rcx, r13
0x7253:   48 89 ee                              	mov rsi, rbp
0x7256:   4c 89 f2                              	mov rdx, r14
0x7259:   48 89 df                              	mov rdi, rbx
0x725c:   41 ff 97 b0 00 00 00                  	call qword ptr [r15 + 0xb0]
0x7263:   ff c8                                 	dec eax
0x7265:   75 3d                                 	jne 0x72a4 <function_71b0+0xf4>
0x7267:   48 63 44 24 1c                        	movsxd rax, dword ptr [rsp + 0x1c]
0x726c:   85 c0                                 	test eax, eax
0x726e:   78 34                                 	js 0x72a4 <function_71b0+0xf4>
0x7270:   48 8d 74 05 00                        	lea rsi, [rbp + rax]
0x7275:   4c 89 f2                              	mov rdx, r14
0x7278:   48 89 df                              	mov rdi, rbx
0x727b:   41 ff 97 b8 00 00 00                  	call qword ptr [r15 + 0xb8]
0x7282:   89 c5                                 	mov ebp, eax
0x7284:   83 f8 01                              	cmp eax, 1
0x7287:   75 1b                                 	jne 0x72a4 <function_71b0+0xf4>
0x7289:   8b 44 24 1c                           	mov eax, dword ptr [rsp + 0x1c]
0x728d:   49 8b 97 c0 00 00 00                  	mov rdx, qword ptr [r15 + 0xc0]
0x7294:   85 c0                                 	test eax, eax
0x7296:   78 0c                                 	js 0x72a4 <function_71b0+0xf4>
0x7298:   41 39 c4                              	cmp r12d, eax
0x729b:   72 07                                 	jb 0x72a4 <function_71b0+0xf4>
0x729d:   48 89 df                              	mov rdi, rbx
0x72a0:   ff d2                                 	call rdx
0x72a2:   eb 1a                                 	jmp 0x72be <function_71b0+0x10e>
0x72a4:   49 8b 87 c0 00 00 00                  	mov rax, qword ptr [r15 + 0xc0]
0x72ab:   48 85 c0                              	test rax, rax
0x72ae:   0f 84 20 ff ff ff                     	je 0x71d4 <function_71b0+0x24>
0x72b4:   48 89 df                              	mov rdi, rbx
0x72b7:   ff d0                                 	call rax
0x72b9:   e9 16 ff ff ff                        	jmp 0x71d4 <function_71b0+0x24>
0x72be:   48 83 c4 28                           	add rsp, 0x28
0x72c2:   89 e8                                 	mov eax, ebp
0x72c4:   5b                                    	pop rbx
0x72c5:   5d                                    	pop rbp
0x72c6:   41 5c                                 	pop r12
0x72c8:   41 5d                                 	pop r13
0x72ca:   41 5e                                 	pop r14
0x72cc:   41 5f                                 	pop r15
0x72ce:   c3                                    	ret 
; section: .text.lzma_easy_encodea
; function: function_72d0 at 0x72d0 -- 0x733e
0x72d0:   41 55                                 	push r13
0x72d2:   41 54                                 	push r12
0x72d4:   48 83 ec 18                           	sub rsp, 0x18
0x72d8:   48 85 ff                              	test rdi, rdi
0x72db:   48 89 7c 24 08                        	mov qword ptr [rsp + 8], rdi
0x72e0:   74 51                                 	je 0x7333 <function_72d0+0x63>
0x72e2:   48 85 f6                              	test rsi, rsi
0x72e5:   48 89 34 24                           	mov qword ptr [rsp], rsi
0x72e9:   74 48                                 	je 0x7333 <function_72d0+0x63>
0x72eb:   48 83 f9 1f                           	cmp rcx, 0x1f
0x72ef:   76 42                                 	jbe 0x7333 <function_72d0+0x63>
0x72f1:   4d 85 c0                              	test r8, r8
0x72f4:   74 3d                                 	je 0x7333 <function_72d0+0x63>
0x72f6:   4d 8b a8 f0 00 00 00                  	mov r13, qword ptr [r8 + 0xf0]
0x72fd:   31 c0                                 	xor eax, eax
0x72ff:   4d 85 ed                              	test r13, r13
0x7302:   74 31                                 	je 0x7335 <function_72d0+0x65>
0x7304:   49 89 d4                              	mov r12, rdx
0x7307:   49 8b 50 58                           	mov rdx, qword ptr [r8 + 0x58]
0x730b:   48 85 d2                              	test rdx, rdx
0x730e:   74 25                                 	je 0x7335 <function_72d0+0x65>
0x7310:   ff d2                                 	call rdx
0x7312:   45 31 c9                              	xor r9d, r9d
0x7315:   31 c9                                 	xor ecx, ecx
0x7317:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x731b:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x7320:   49 89 c0                              	mov r8, rax
0x7323:   4c 89 e2                              	mov rdx, r12
0x7326:   41 ff d5                              	call r13
0x7329:   ff c8                                 	dec eax
0x732b:   0f 94 c0                              	sete al
0x732e:   0f b6 c0                              	movzx eax, al
0x7331:   eb 02                                 	jmp 0x7335 <function_72d0+0x65>
0x7333:   31 c0                                 	xor eax, eax
0x7335:   48 83 c4 18                           	add rsp, 0x18
0x7339:   41 5c                                 	pop r12
0x733b:   41 5d                                 	pop r13
0x733d:   c3                                    	ret 
; section: .text.lzma_block_decoder_inia
; function: function_7340 at 0x7340 -- 0x7414
0x7340:   41 57                                 	push r15
0x7342:   41 56                                 	push r14
0x7344:   41 55                                 	push r13
0x7346:   41 54                                 	push r12
0x7348:   49 89 d4                              	mov r12, rdx
0x734b:   55                                    	push rbp
0x734c:   53                                    	push rbx
0x734d:   48 83 ec 18                           	sub rsp, 0x18
0x7351:   4d 85 c0                              	test r8, r8
0x7354:   0f 94 c0                              	sete al
0x7357:   48 83 fe 05                           	cmp rsi, 5
0x735b:   0f 96 c2                              	setbe dl
0x735e:   08 d0                                 	or al, dl
0x7360:   75 0b                                 	jne 0x736d <function_7340+0x2d>
0x7362:   49 89 fd                              	mov r13, rdi
0x7365:   48 89 cf                              	mov rdi, rcx
0x7368:   48 85 c9                              	test rcx, rcx
0x736b:   75 07                                 	jne 0x7374 <function_7340+0x34>
0x736d:   31 c0                                 	xor eax, eax
0x736f:   e9 91 00 00 00                        	jmp 0x7405 <function_7340+0xc5>
0x7374:   49 83 b8 00 01 00 00 00               	cmp qword ptr [r8 + 0x100], 0
0x737c:   4d 89 c6                              	mov r14, r8
0x737f:   74 ec                                 	je 0x736d <function_7340+0x2d>
0x7381:   31 c0                                 	xor eax, eax
0x7383:   49 89 04 24                           	mov qword ptr [r12], rax
0x7387:   49 8b 40 68                           	mov rax, qword ptr [r8 + 0x68]
0x738b:   48 85 c0                              	test rax, rax
0x738e:   74 dd                                 	je 0x736d <function_7340+0x2d>
0x7390:   48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x7395:   49 89 f7                              	mov r15, rsi
0x7398:   ff d0                                 	call rax
0x739a:   89 c3                                 	mov ebx, eax
0x739c:   3d 00 40 00 00                        	cmp eax, 0x4000
0x73a1:   77 ca                                 	ja 0x736d <function_7340+0x2d>
0x73a3:   83 c3 07                              	add ebx, 7
0x73a6:   c1 eb 03                              	shr ebx, 3
0x73a9:   74 c2                                 	je 0x736d <function_7340+0x2d>
0x73ab:   89 dd                                 	mov ebp, ebx
0x73ad:   49 83 ef 06                           	sub r15, 6
0x73b1:   49 39 ef                              	cmp r15, rbp
0x73b4:   72 b7                                 	jb 0x736d <function_7340+0x2d>
0x73b6:   4d 8d 7d 05                           	lea r15, [r13 + 5]
0x73ba:   41 c6 45 04 00                        	mov byte ptr [r13 + 4], 0
0x73bf:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x73c4:   4c 89 fe                              	mov rsi, r15
0x73c7:   41 ff 96 00 01 00 00                  	call qword ptr [r14 + 0x100]
0x73ce:   48 98                                 	cdqe 
0x73d0:   48 39 e8                              	cmp rax, rbp
0x73d3:   75 98                                 	jne 0x736d <function_7340+0x2d>
0x73d5:   41 80 7d 05 00                        	cmp byte ptr [r13 + 5], 0
0x73da:   79 07                                 	jns 0x73e3 <function_7340+0xa3>
0x73dc:   48 ff c5                              	inc rbp
0x73df:   ff c3                                 	inc ebx
0x73e1:   eb 0f                                 	jmp 0x73f2 <function_7340+0xb2>
0x73e3:   49 8d 7d 04                           	lea rdi, [r13 + 4]
0x73e7:   48 89 ea                              	mov rdx, rbp
0x73ea:   4c 89 fe                              	mov rsi, r15
0x73ed:   e8 1e a7 ff ff                        	call 0x1b10 <function_1b10>
0x73f2:   48 83 c5 04                           	add rbp, 4
0x73f6:   0f cb                                 	bswap ebx
0x73f8:   41 89 5d 00                           	mov dword ptr [r13], ebx
0x73fc:   b8 01 00 00 00                        	mov eax, 1
0x7401:   49 89 2c 24                           	mov qword ptr [r12], rbp
0x7405:   48 83 c4 18                           	add rsp, 0x18
0x7409:   5b                                    	pop rbx
0x740a:   5d                                    	pop rbp
0x740b:   41 5c                                 	pop r12
0x740d:   41 5d                                 	pop r13
0x740f:   41 5e                                 	pop r14
0x7411:   41 5f                                 	pop r15
0x7413:   c3                                    	ret 
; section: .text.lzma_block_encoder_updatd
; function: function_7420 at 0x7420 -- 0x74c5
0x7420:   48 81 ec d8 00 00 00                  	sub rsp, 0xd8
0x7427:   49 89 fa                              	mov r10, rdi
0x742a:   48 89 4c 24 38                        	mov qword ptr [rsp + 0x38], rcx
0x742f:   4c 89 44 24 40                        	mov qword ptr [rsp + 0x40], r8
0x7434:   4c 89 4c 24 48                        	mov qword ptr [rsp + 0x48], r9
0x7439:   84 c0                                 	test al, al
0x743b:   74 37                                 	je 0x7474 <function_7420+0x54>
0x743d:   0f 29 44 24 50                        	movaps xmmword ptr [rsp + 0x50], xmm0
0x7442:   0f 29 4c 24 60                        	movaps xmmword ptr [rsp + 0x60], xmm1
0x7447:   0f 29 54 24 70                        	movaps xmmword ptr [rsp + 0x70], xmm2
0x744c:   0f 29 9c 24 80 00 00 00               	movaps xmmword ptr [rsp + 0x80], xmm3
0x7454:   0f 29 a4 24 90 00 00 00               	movaps xmmword ptr [rsp + 0x90], xmm4
0x745c:   0f 29 ac 24 a0 00 00 00               	movaps xmmword ptr [rsp + 0xa0], xmm5
0x7464:   0f 29 b4 24 b0 00 00 00               	movaps xmmword ptr [rsp + 0xb0], xmm6
0x746c:   0f 29 bc 24 c0 00 00 00               	movaps xmmword ptr [rsp + 0xc0], xmm7
0x7474:   48 8d 7c 24 07                        	lea rdi, [rsp + 7]
0x7479:   c6 44 24 07 00                        	mov byte ptr [rsp + 7], 0
0x747e:   41 89 f0                              	mov r8d, esi
0x7481:   45 31 c9                              	xor r9d, r9d
0x7484:   48 8d 84 24 e0 00 00 00               	lea rax, [rsp + 0xe0]
0x748c:   c7 44 24 08 18 00 00 00               	mov dword ptr [rsp + 8], 0x18
0x7494:   31 c9                                 	xor ecx, ecx
0x7496:   48 89 fe                              	mov rsi, rdi
0x7499:   48 89 44 24 10                        	mov qword ptr [rsp + 0x10], rax
0x749e:   48 8d 44 24 20                        	lea rax, [rsp + 0x20]
0x74a3:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x74a8:   48 8d 44 24 08                        	lea rax, [rsp + 8]
0x74ad:   c7 44 24 0c 30 00 00 00               	mov dword ptr [rsp + 0xc], 0x30
0x74b5:   50                                    	push rax
0x74b6:   52                                    	push rdx
0x74b7:   31 d2                                 	xor edx, edx
0x74b9:   41 ff 52 58                           	call qword ptr [r10 + 0x58]
0x74bd:   48 81 c4 e8 00 00 00                  	add rsp, 0xe8
0x74c4:   c3                                    	ret 
; section: .text.lzma_index_ena
; function: function_74d0 at 0x74d0 -- 0x7529
0x74d0:   48 85 ff                              	test rdi, rdi
0x74d3:   74 51                                 	je 0x7526 <function_74d0+0x56>
0x74d5:   48 85 d2                              	test rdx, rdx
0x74d8:   74 4c                                 	je 0x7526 <function_74d0+0x56>
0x74da:   48 8b 42 08                           	mov rax, qword ptr [rdx + 8]
0x74de:   48 85 c0                              	test rax, rax
0x74e1:   74 43                                 	je 0x7526 <function_74d0+0x56>
0x74e3:   55                                    	push rbp
0x74e4:   48 89 f5                              	mov rbp, rsi
0x74e7:   53                                    	push rbx
0x74e8:   48 89 fb                              	mov rbx, rdi
0x74eb:   51                                    	push rcx
0x74ec:   ff d0                                 	call rax
0x74ee:   48 8d 50 f8                           	lea rdx, [rax - 8]
0x74f2:   48 83 fa 7f                           	cmp rdx, 0x7f
0x74f6:   76 04                                 	jbe 0x74fc <function_74d0+0x2c>
0x74f8:   31 c0                                 	xor eax, eax
0x74fa:   eb 26                                 	jmp 0x7522 <function_74d0+0x52>
0x74fc:   48 c1 e8 03                           	shr rax, 3
0x7500:   31 c9                                 	xor ecx, ecx
0x7502:   31 d2                                 	xor edx, edx
0x7504:   48 83 3c d3 00                        	cmp qword ptr [rbx + rdx*8], 0
0x7509:   74 0e                                 	je 0x7519 <function_74d0+0x49>
0x750b:   8d 51 01                              	lea edx, [rcx + 1]
0x750e:   48 89 d1                              	mov rcx, rdx
0x7511:   48 39 c2                              	cmp rdx, rax
0x7514:   72 ee                                 	jb 0x7504 <function_74d0+0x34>
0x7516:   48 89 c2                              	mov rdx, rax
0x7519:   48 89 55 00                           	mov qword ptr [rbp], rdx
0x751d:   b8 01 00 00 00                        	mov eax, 1
0x7522:   5a                                    	pop rdx
0x7523:   5b                                    	pop rbx
0x7524:   5d                                    	pop rbp
0x7525:   c3                                    	ret 
0x7526:   31 c0                                 	xor eax, eax
0x7528:   c3                                    	ret 
; section: .text.lzma_filters_copa
; function: function_7530 at 0x7530 -- 0x7647
0x7530:   41 57                                 	push r15
0x7532:   41 56                                 	push r14
0x7534:   41 55                                 	push r13
0x7536:   41 54                                 	push r12
0x7538:   55                                    	push rbp
0x7539:   53                                    	push rbx
0x753a:   48 81 ec 00 10 00 00                  	sub rsp, 0x1000
0x7541:   48 83 0c 24 00                        	or qword ptr [rsp], 0
0x7546:   48 83 ec 38                           	sub rsp, 0x38
0x754a:   31 c0                                 	xor eax, eax
0x754c:   0f 57 c0                              	xorps xmm0, xmm0
0x754f:   49 89 f8                              	mov r8, rdi
0x7552:   48 89 cd                              	mov rbp, rcx
0x7555:   48 8d 7c 24 36                        	lea rdi, [rsp + 0x36]
0x755a:   b9 fa 0f 00 00                        	mov ecx, 0xffa
0x755f:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x7561:   31 c9                                 	xor ecx, ecx
0x7563:   0f 11 44 24 26                        	movups xmmword ptr [rsp + 0x26], xmm0
0x7568:   48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0x756d:   48 85 ed                              	test rbp, rbp
0x7570:   74 05                                 	je 0x7577 <function_7530+0x47>
0x7572:   4d 85 c0                              	test r8, r8
0x7575:   75 07                                 	jne 0x757e <function_7530+0x4e>
0x7577:   31 c0                                 	xor eax, eax
0x7579:   e9 b7 00 00 00                        	jmp 0x7635 <function_7530+0x105>
0x757e:   48 8b 45 60                           	mov rax, qword ptr [rbp + 0x60]
0x7582:   48 85 c0                              	test rax, rax
0x7585:   74 f0                                 	je 0x7577 <function_7530+0x47>
0x7587:   49 89 d5                              	mov r13, rdx
0x758a:   31 d2                                 	xor edx, edx
0x758c:   31 c9                                 	xor ecx, ecx
0x758e:   49 89 f4                              	mov r12, rsi
0x7591:   48 89 54 24 10                        	mov qword ptr [rsp + 0x10], rdx
0x7596:   48 8d 74 24 18                        	lea rsi, [rsp + 0x18]
0x759b:   4c 89 c7                              	mov rdi, r8
0x759e:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x75a3:   48 8d 54 24 10                        	lea rdx, [rsp + 0x10]
0x75a8:   ff d0                                 	call rax
0x75aa:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0x75af:   48 85 c9                              	test rcx, rcx
0x75b2:   74 c3                                 	je 0x7577 <function_7530+0x47>
0x75b4:   48 83 7c 24 18 00                     	cmp qword ptr [rsp + 0x18], 0
0x75ba:   74 bb                                 	je 0x7577 <function_7530+0x47>
0x75bc:   4c 8d 7c 24 08                        	lea r15, [rsp + 8]
0x75c1:   4c 8d 74 24 26                        	lea r14, [rsp + 0x26]
0x75c6:   49 89 e8                              	mov r8, rbp
0x75c9:   be 0a 10 00 00                        	mov esi, 0x100a
0x75ce:   4c 89 fa                              	mov rdx, r15
0x75d1:   4c 89 f7                              	mov rdi, r14
0x75d4:   e8 67 fd ff ff                        	call 0x7340 <function_7340>
0x75d9:   85 c0                                 	test eax, eax
0x75db:   74 9a                                 	je 0x7577 <function_7530+0x47>
0x75dd:   48 8b 5c 24 08                        	mov rbx, qword ptr [rsp + 8]
0x75e2:   48 81 fb 09 10 00 00                  	cmp rbx, 0x1009
0x75e9:   77 8c                                 	ja 0x7577 <function_7530+0x47>
0x75eb:   be 0a 10 00 00                        	mov esi, 0x100a
0x75f0:   48 8b 4c 24 18                        	mov rcx, qword ptr [rsp + 0x18]
0x75f5:   49 89 e8                              	mov r8, rbp
0x75f8:   4c 89 fa                              	mov rdx, r15
0x75fb:   48 29 de                              	sub rsi, rbx
0x75fe:   49 8d 3c 1e                           	lea rdi, [r14 + rbx]
0x7602:   e8 39 fd ff ff                        	call 0x7340 <function_7340>
0x7607:   85 c0                                 	test eax, eax
0x7609:   0f 84 68 ff ff ff                     	je 0x7577 <function_7530+0x47>
0x760f:   48 03 5c 24 08                        	add rbx, qword ptr [rsp + 8]
0x7614:   48 89 de                              	mov rsi, rbx
0x7617:   48 81 fb 0a 10 00 00                  	cmp rbx, 0x100a
0x761e:   0f 87 53 ff ff ff                     	ja 0x7577 <function_7530+0x47>
0x7624:   49 89 e8                              	mov r8, rbp
0x7627:   4c 89 e9                              	mov rcx, r13
0x762a:   4c 89 e2                              	mov rdx, r12
0x762d:   4c 89 f7                              	mov rdi, r14
0x7630:   e8 9b fc ff ff                        	call 0x72d0 <function_72d0>
0x7635:   48 81 c4 38 10 00 00                  	add rsp, 0x1038
0x763c:   5b                                    	pop rbx
0x763d:   5d                                    	pop rbp
0x763e:   41 5c                                 	pop r12
0x7640:   41 5d                                 	pop r13
0x7642:   41 5e                                 	pop r14
0x7644:   41 5f                                 	pop r15
0x7646:   c3                                    	ret 
; section: .text.lzma_index_dua
; function: function_7650 at 0x7650 -- 0x7937
0x7650:   41 57                                 	push r15
0x7652:   41 56                                 	push r14
0x7654:   41 55                                 	push r13
0x7656:   41 54                                 	push r12
0x7658:   55                                    	push rbp
0x7659:   53                                    	push rbx
0x765a:   48 81 ec c8 00 00 00                  	sub rsp, 0xc8
0x7661:   4c 89 44 24 10                        	mov qword ptr [rsp + 0x10], r8
0x7666:   4c 8b ac 24 00 01 00 00               	mov r13, qword ptr [rsp + 0x100]
0x766e:   4c 89 4c 24 08                        	mov qword ptr [rsp + 8], r9
0x7673:   48 85 ff                              	test rdi, rdi
0x7676:   0f 84 a7 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x767c:   48 89 f5                              	mov rbp, rsi
0x767f:   48 85 f6                              	test rsi, rsi
0x7682:   0f 84 9b 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7688:   49 89 ce                              	mov r14, rcx
0x768b:   48 85 c9                              	test rcx, rcx
0x768e:   0f 84 8f 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7694:   48 89 d3                              	mov rbx, rdx
0x7697:   48 83 fa de                           	cmp rdx, -0x22
0x769b:   0f 87 82 02 00 00                     	ja 0x7923 <function_7650+0x2d3>
0x76a1:   4c 8d 7a 20                           	lea r15, [rdx + 0x20]
0x76a5:   4d 85 ed                              	test r13, r13
0x76a8:   0f 84 75 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x76ae:   4c 39 f9                              	cmp rcx, r15
0x76b1:   0f 92 c0                              	setb al
0x76b4:   0f 82 69 02 00 00                     	jb 0x7923 <function_7650+0x2d3>
0x76ba:   4d 8b 65 08                           	mov r12, qword ptr [r13 + 8]
0x76be:   4d 85 e4                              	test r12, r12
0x76c1:   0f 84 5c 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x76c7:   8b 17                                 	mov edx, dword ptr [rdi]
0x76c9:   83 fa 02                              	cmp edx, 2
0x76cc:   74 64                                 	je 0x7732 <function_7650+0xe2>
0x76ce:   7f 24                                 	jg 0x76f4 <function_7650+0xa4>
0x76d0:   85 d2                                 	test edx, edx
0x76d2:   74 2e                                 	je 0x7702 <function_7650+0xb2>
0x76d4:   ff ca                                 	dec edx
0x76d6:   0f 85 47 02 00 00                     	jne 0x7923 <function_7650+0x2d3>
0x76dc:   48 89 ca                              	mov rdx, rcx
0x76df:   48 8b 7f 10                           	mov rdi, qword ptr [rdi + 0x10]
0x76e3:   48 8d 34 1e                           	lea rsi, [rsi + rbx]
0x76e7:   4c 89 e9                              	mov rcx, r13
0x76ea:   48 29 da                              	sub rdx, rbx
0x76ed:   e8 6e c4 ff ff                        	call 0x3b60 <function_3b60>
0x76f2:   eb 24                                 	jmp 0x7718 <function_7650+0xc8>
0x76f4:   83 fa 03                              	cmp edx, 3
0x76f7:   0f 84 18 01 00 00                     	je 0x7815 <function_7650+0x1c5>
0x76fd:   e9 21 02 00 00                        	jmp 0x7923 <function_7650+0x2d3>
0x7702:   48 89 ca                              	mov rdx, rcx
0x7705:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x7709:   48 8d 34 1e                           	lea rsi, [rsi + rbx]
0x770d:   4c 89 e1                              	mov rcx, r12
0x7710:   48 29 da                              	sub rdx, rbx
0x7713:   e8 18 fe ff ff                        	call 0x7530 <function_7530>
0x7718:   85 c0                                 	test eax, eax
0x771a:   0f 84 03 02 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7720:   49 8b 5d 08                           	mov rbx, qword ptr [r13 + 8]
0x7724:   48 85 db                              	test rbx, rbx
0x7727:   0f 85 4d 01 00 00                     	jne 0x787a <function_7650+0x22a>
0x772d:   e9 f1 01 00 00                        	jmp 0x7923 <function_7650+0x2d3>
0x7732:   48 8b 57 20                           	mov rdx, qword ptr [rdi + 0x20]
0x7736:   0f 57 c0                              	xorps xmm0, xmm0
0x7739:   48 8d 7c 24 47                        	lea rdi, [rsp + 0x47]
0x773e:   b9 79 00 00 00                        	mov ecx, 0x79
0x7743:   0f 11 44 24 37                        	movups xmmword ptr [rsp + 0x37], xmm0
0x7748:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x774a:   48 85 d2                              	test rdx, rdx
0x774d:   0f 84 d0 01 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7753:   49 8b 44 24 48                        	mov rax, qword ptr [r12 + 0x48]
0x7758:   48 85 c0                              	test rax, rax
0x775b:   0f 84 c2 01 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7761:   49 83 7c 24 50 00                     	cmp qword ptr [r12 + 0x50], 0
0x7767:   0f 84 b6 01 00 00                     	je 0x7923 <function_7650+0x2d3>
0x776d:   49 83 7c 24 40 00                     	cmp qword ptr [r12 + 0x40], 0
0x7773:   0f 84 aa 01 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7779:   48 89 d7                              	mov rdi, rdx
0x777c:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0x7781:   ff d0                                 	call rax
0x7783:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x7788:   48 89 04 24                           	mov qword ptr [rsp], rax
0x778c:   41 ff 54 24 50                        	call qword ptr [r12 + 0x50]
0x7791:   45 31 c0                              	xor r8d, r8d
0x7794:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x7798:   45 31 c9                              	xor r9d, r9d
0x779b:   48 89 44 24 28                        	mov qword ptr [rsp + 0x28], rax
0x77a0:   48 89 c7                              	mov rdi, rax
0x77a3:   31 c9                                 	xor ecx, ecx
0x77a5:   ba 04 00 00 00                        	mov edx, 4
0x77aa:   41 ff 54 24 40                        	call qword ptr [r12 + 0x40]
0x77af:   49 89 c0                              	mov r8, rax
0x77b2:   48 3d 85 00 00 00                     	cmp rax, 0x85
0x77b8:   0f 87 65 01 00 00                     	ja 0x7923 <function_7650+0x2d3>
0x77be:   0f c8                                 	bswap eax
0x77c0:   89 44 24 37                           	mov dword ptr [rsp + 0x37], eax
0x77c4:   48 8d 44 24 37                        	lea rax, [rsp + 0x37]
0x77c9:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0x77cd:   4c 89 44 24 20                        	mov qword ptr [rsp + 0x20], r8
0x77d2:   48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x77d7:   48 8d 4c 24 3b                        	lea rcx, [rsp + 0x3b]
0x77dc:   45 31 c9                              	xor r9d, r9d
0x77df:   48 89 44 24 18                        	mov qword ptr [rsp + 0x18], rax
0x77e4:   ba 04 00 00 00                        	mov edx, 4
0x77e9:   41 ff 54 24 40                        	call qword ptr [r12 + 0x40]
0x77ee:   4c 8b 44 24 20                        	mov r8, qword ptr [rsp + 0x20]
0x77f3:   49 39 c0                              	cmp r8, rax
0x77f6:   0f 85 27 01 00 00                     	jne 0x7923 <function_7650+0x2d3>
0x77fc:   4c 89 f1                              	mov rcx, r14
0x77ff:   49 8d 70 04                           	lea rsi, [r8 + 4]
0x7803:   48 8b 7c 24 18                        	mov rdi, qword ptr [rsp + 0x18]
0x7808:   4d 89 e0                              	mov r8, r12
0x780b:   48 29 d9                              	sub rcx, rbx
0x780e:   48 8d 54 1d 00                        	lea rdx, [rbp + rbx]
0x7813:   eb 5b                                 	jmp 0x7870 <function_7650+0x220>
0x7815:   48 8b 57 30                           	mov rdx, qword ptr [rdi + 0x30]
0x7819:   0f 57 c0                              	xorps xmm0, xmm0
0x781c:   48 8d 7c 24 47                        	lea rdi, [rsp + 0x47]
0x7821:   31 c0                                 	xor eax, eax
0x7823:   b9 05 00 00 00                        	mov ecx, 5
0x7828:   0f 11 44 24 37                        	movups xmmword ptr [rsp + 0x37], xmm0
0x782d:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x782f:   48 85 d2                              	test rdx, rdx
0x7832:   0f 84 eb 00 00 00                     	je 0x7923 <function_7650+0x2d3>
0x7838:   c7 44 24 37 00 00 00 20               	mov dword ptr [rsp + 0x37], 0x20000000
0x7840:   31 c0                                 	xor eax, eax
0x7842:   48 8d 7c 24 37                        	lea rdi, [rsp + 0x37]
0x7847:   48 8d 4c 24 3b                        	lea rcx, [rsp + 0x3b]
0x784c:   40 8a 34 02                           	mov sil, byte ptr [rdx + rax]
0x7850:   40 88 34 01                           	mov byte ptr [rcx + rax], sil
0x7854:   48 ff c0                              	inc rax
0x7857:   48 83 f8 20                           	cmp rax, 0x20
0x785b:   75 ef                                 	jne 0x784c <function_7650+0x1fc>
0x785d:   4c 89 f1                              	mov rcx, r14
0x7860:   48 8d 54 1d 00                        	lea rdx, [rbp + rbx]
0x7865:   4d 89 e0                              	mov r8, r12
0x7868:   be 24 00 00 00                        	mov esi, 0x24
0x786d:   48 29 d9                              	sub rcx, rbx
0x7870:   e8 5b fa ff ff                        	call 0x72d0 <function_72d0>
0x7875:   e9 9e fe ff ff                        	jmp 0x7718 <function_7650+0xc8>
0x787a:   48 8d 7b 70                           	lea rdi, [rbx + 0x70]
0x787e:   be 06 00 00 00                        	mov esi, 6
0x7883:   e8 08 f9 ff ff                        	call 0x7190 <function_7190>
0x7888:   85 c0                                 	test eax, eax
0x788a:   0f 85 93 00 00 00                     	jne 0x7923 <function_7650+0x2d3>
0x7890:   48 83 7c 24 08 00                     	cmp qword ptr [rsp + 8], 0
0x7896:   0f 84 87 00 00 00                     	je 0x7923 <function_7650+0x2d3>
0x789c:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x78a1:   b9 39 00 00 00                        	mov ecx, 0x39
0x78a6:   31 f6                                 	xor esi, esi
0x78a8:   bf 40 04 00 00                        	mov edi, 0x440
0x78ad:   ff 53 70                              	call qword ptr [rbx + 0x70]
0x78b0:   49 89 c5                              	mov r13, rax
0x78b3:   48 85 c0                              	test rax, rax
0x78b6:   74 6b                                 	je 0x7923 <function_7650+0x2d3>
0x78b8:   ff 53 78                              	call qword ptr [rbx + 0x78]
0x78bb:   49 89 c4                              	mov r12, rax
0x78be:   48 85 c0                              	test rax, rax
0x78c1:   74 57                                 	je 0x791a <function_7650+0x2ca>
0x78c3:   31 c9                                 	xor ecx, ecx
0x78c5:   31 d2                                 	xor edx, edx
0x78c7:   31 f6                                 	xor esi, esi
0x78c9:   4d 89 e8                              	mov r8, r13
0x78cc:   48 89 c7                              	mov rdi, rax
0x78cf:   ff 93 80 00 00 00                     	call qword ptr [rbx + 0x80]
0x78d5:   ff c8                                 	dec eax
0x78d7:   75 38                                 	jne 0x7911 <function_7650+0x2c1>
0x78d9:   48 8b 74 24 10                        	mov rsi, qword ptr [rsp + 0x10]
0x78de:   4d 89 f8                              	mov r8, r15
0x78e1:   48 89 e9                              	mov rcx, rbp
0x78e4:   ba 72 00 00 00                        	mov edx, 0x72
0x78e9:   4c 89 e7                              	mov rdi, r12
0x78ec:   ff 93 88 00 00 00                     	call qword ptr [rbx + 0x88]
0x78f2:   83 f8 01                              	cmp eax, 1
0x78f5:   89 04 24                              	mov dword ptr [rsp], eax
0x78f8:   75 17                                 	jne 0x7911 <function_7650+0x2c1>
0x78fa:   4c 89 e7                              	mov rdi, r12
0x78fd:   ff 93 90 00 00 00                     	call qword ptr [rbx + 0x90]
0x7903:   4c 89 ef                              	mov rdi, r13
0x7906:   ff 93 98 00 00 00                     	call qword ptr [rbx + 0x98]
0x790c:   8b 04 24                              	mov eax, dword ptr [rsp]
0x790f:   eb 14                                 	jmp 0x7925 <function_7650+0x2d5>
0x7911:   4c 89 e7                              	mov rdi, r12
0x7914:   ff 93 90 00 00 00                     	call qword ptr [rbx + 0x90]
0x791a:   4c 89 ef                              	mov rdi, r13
0x791d:   ff 93 98 00 00 00                     	call qword ptr [rbx + 0x98]
0x7923:   31 c0                                 	xor eax, eax
0x7925:   48 81 c4 c8 00 00 00                  	add rsp, 0xc8
0x792c:   5b                                    	pop rbx
0x792d:   5d                                    	pop rbp
0x792e:   41 5c                                 	pop r12
0x7930:   41 5d                                 	pop r13
0x7932:   41 5e                                 	pop r14
0x7934:   41 5f                                 	pop r15
0x7936:   c3                                    	ret 
; section: .text.length_encoder_resez
; function: .Llength_encoder_reset.0 at 0x7940 -- 0x7970
0x7940:   f3 0f 1e fa                           	endbr64 
0x7944:   48 8b 57 18                           	mov rdx, qword ptr [rdi + 0x18]
0x7948:   31 c0                                 	xor eax, eax
0x794a:   48 8d 4a e0                           	lea rcx, [rdx - 0x20]
0x794e:   48 83 f9 20                           	cmp rcx, 0x20
0x7952:   77 1b                                 	ja 0x796f <.Llength_encoder_reset.0+0x2f>
0x7954:   48 8b 0f                              	mov rcx, qword ptr [rdi]
0x7957:   31 c0                                 	xor eax, eax
0x7959:   80 3c 01 00                           	cmp byte ptr [rcx + rax], 0
0x795d:   78 0b                                 	js 0x796a <.Llength_encoder_reset.0+0x2a>
0x795f:   48 ff c0                              	inc rax
0x7962:   48 39 c2                              	cmp rdx, rax
0x7965:   75 f2                                 	jne 0x7959 <.Llength_encoder_reset.0+0x19>
0x7967:   31 c0                                 	xor eax, eax
0x7969:   c3                                    	ret 
0x796a:   b8 01 00 00 00                        	mov eax, 1
0x796f:   c3                                    	ret 
; section: .text.stream_decoder_mt_get_progresz
; function: .Lstream_decoder_mt_get_progress.0 at 0x7970 -- 0x7a36
0x7970:   f3 0f 1e fa                           	endbr64 
0x7974:   48 85 f6                              	test rsi, rsi
0x7977:   0f 84 b6 00 00 00                     	je 0x7a33 <.Lstream_decoder_mt_get_progress.0+0xc3>
0x797d:   41 57                                 	push r15
0x797f:   41 56                                 	push r14
0x7981:   41 55                                 	push r13
0x7983:   49 89 fd                              	mov r13, rdi
0x7986:   41 54                                 	push r12
0x7988:   55                                    	push rbp
0x7989:   53                                    	push rbx
0x798a:   41 50                                 	push r8
0x798c:   48 85 ff                              	test rdi, rdi
0x798f:   75 07                                 	jne 0x7998 <.Lstream_decoder_mt_get_progress.0+0x28>
0x7991:   31 c0                                 	xor eax, eax
0x7993:   e9 8f 00 00 00                        	jmp 0x7a27 <.Lstream_decoder_mt_get_progress.0+0xb7>
0x7998:   49 89 d6                              	mov r14, rdx
0x799b:   48 85 d2                              	test rdx, rdx
0x799e:   74 f1                                 	je 0x7991 <.Lstream_decoder_mt_get_progress.0+0x21>
0x79a0:   49 89 cf                              	mov r15, rcx
0x79a3:   48 85 c9                              	test rcx, rcx
0x79a6:   74 e9                                 	je 0x7991 <.Lstream_decoder_mt_get_progress.0+0x21>
0x79a8:   0f be 5e 57                           	movsx ebx, byte ptr [rsi + 0x57]
0x79ac:   0f be 6e 56                           	movsx ebp, byte ptr [rsi + 0x56]
0x79b0:   49 89 f4                              	mov r12, rsi
0x79b3:   40 84 eb                              	test bl, bpl
0x79b6:   78 1b                                 	js 0x79d3 <.Lstream_decoder_mt_get_progress.0+0x63>
0x79b8:   c1 e5 03                              	shl ebp, 3
0x79bb:   c1 e3 03                              	shl ebx, 3
0x79be:   48 63 db                              	movsxd rbx, ebx
0x79c1:   48 63 ed                              	movsxd rbp, ebp
0x79c4:   48 8d 73 08                           	lea rsi, [rbx + 8]
0x79c8:   48 39 eb                              	cmp rbx, rbp
0x79cb:   73 0f                                 	jae 0x79dc <.Lstream_decoder_mt_get_progress.0+0x6c>
0x79cd:   48 8d 75 08                           	lea rsi, [rbp + 8]
0x79d1:   eb 09                                 	jmp 0x79dc <.Lstream_decoder_mt_get_progress.0+0x6c>
0x79d3:   31 db                                 	xor ebx, ebx
0x79d5:   31 ed                                 	xor ebp, ebp
0x79d7:   be 48 00 00 00                        	mov esi, 0x48
0x79dc:   4c 89 e2                              	mov rdx, r12
0x79df:   4c 89 ef                              	mov rdi, r13
0x79e2:   e8 69 a9 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x79e7:   85 c0                                 	test eax, eax
0x79e9:   74 a6                                 	je 0x7991 <.Lstream_decoder_mt_get_progress.0+0x21>
0x79eb:   41 80 7c 24 56 00                     	cmp byte ptr [r12 + 0x56], 0
0x79f1:   78 07                                 	js 0x79fa <.Lstream_decoder_mt_get_progress.0+0x8a>
0x79f3:   4a 8b 7c 2d 00                        	mov rdi, qword ptr [rbp + r13]
0x79f8:   eb 04                                 	jmp 0x79fe <.Lstream_decoder_mt_get_progress.0+0x8e>
0x79fa:   49 8b 7d 00                           	mov rdi, qword ptr [r13]
0x79fe:   49 89 3e                              	mov qword ptr [r14], rdi
0x7a01:   41 80 7c 24 57 00                     	cmp byte ptr [r12 + 0x57], 0
0x7a07:   78 07                                 	js 0x7a10 <.Lstream_decoder_mt_get_progress.0+0xa0>
0x7a09:   49 8b 74 1d 00                        	mov rsi, qword ptr [r13 + rbx]
0x7a0e:   eb 04                                 	jmp 0x7a14 <.Lstream_decoder_mt_get_progress.0+0xa4>
0x7a10:   49 8b 75 18                           	mov rsi, qword ptr [r13 + 0x18]
0x7a14:   49 89 37                              	mov qword ptr [r15], rsi
0x7a17:   4c 89 e2                              	mov rdx, r12
0x7a1a:   e8 31 a9 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7a1f:   85 c0                                 	test eax, eax
0x7a21:   0f 95 c0                              	setne al
0x7a24:   0f b6 c0                              	movzx eax, al
0x7a27:   5a                                    	pop rdx
0x7a28:   5b                                    	pop rbx
0x7a29:   5d                                    	pop rbp
0x7a2a:   41 5c                                 	pop r12
0x7a2c:   41 5d                                 	pop r13
0x7a2e:   41 5e                                 	pop r14
0x7a30:   41 5f                                 	pop r15
0x7a32:   c3                                    	ret 
0x7a33:   31 c0                                 	xor eax, eax
0x7a35:   c3                                    	ret 
; section: .text.threads_stoz
; function: .Lthreads_stop.0 at 0x7a40 -- 0x7bd7
0x7a40:   f3 0f 1e fa                           	endbr64 
0x7a44:   48 85 ff                              	test rdi, rdi
0x7a47:   0f 84 87 01 00 00                     	je 0x7bd4 <.Lthreads_stop.0+0x194>
0x7a4d:   41 57                                 	push r15
0x7a4f:   41 56                                 	push r14
0x7a51:   41 55                                 	push r13
0x7a53:   41 54                                 	push r12
0x7a55:   55                                    	push rbp
0x7a56:   53                                    	push rbx
0x7a57:   48 89 f3                              	mov rbx, rsi
0x7a5a:   51                                    	push rcx
0x7a5b:   48 85 f6                              	test rsi, rsi
0x7a5e:   75 07                                 	jne 0x7a67 <.Lthreads_stop.0+0x27>
0x7a60:   31 c0                                 	xor eax, eax
0x7a62:   e9 61 01 00 00                        	jmp 0x7bc8 <.Lthreads_stop.0+0x188>
0x7a67:   48 89 fd                              	mov rbp, rdi
0x7a6a:   48 8b 7e 48                           	mov rdi, qword ptr [rsi + 0x48]
0x7a6e:   48 85 ff                              	test rdi, rdi
0x7a71:   74 ed                                 	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7a73:   48 89 f2                              	mov rdx, rsi
0x7a76:   be 08 00 00 00                        	mov esi, 8
0x7a7b:   e8 d0 a8 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7a80:   85 c0                                 	test eax, eax
0x7a82:   74 dc                                 	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7a84:   48 8b 43 48                           	mov rax, qword ptr [rbx + 0x48]
0x7a88:   48 89 da                              	mov rdx, rbx
0x7a8b:   be 20 00 00 00                        	mov esi, 0x20
0x7a90:   4c 8b 28                              	mov r13, qword ptr [rax]
0x7a93:   4c 89 ef                              	mov rdi, r13
0x7a96:   e8 b5 a8 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7a9b:   85 c0                                 	test eax, eax
0x7a9d:   74 c1                                 	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7a9f:   0f be 43 55                           	movsx eax, byte ptr [rbx + 0x55]
0x7aa3:   4d 8b 65 10                           	mov r12, qword ptr [r13 + 0x10]
0x7aa7:   84 c0                                 	test al, al
0x7aa9:   78 0a                                 	js 0x7ab5 <.Lthreads_stop.0+0x75>
0x7aab:   c1 e0 02                              	shl eax, 2
0x7aae:   48 98                                 	cdqe 
0x7ab0:   4d 8b 64 05 00                        	mov r12, qword ptr [r13 + rax]
0x7ab5:   0f be 53 57                           	movsx edx, byte ptr [rbx + 0x57]
0x7ab9:   0f be 43 56                           	movsx eax, byte ptr [rbx + 0x56]
0x7abd:   41 bd 48 00 00 00                     	mov r13d, 0x48
0x7ac3:   84 d0                                 	test al, dl
0x7ac5:   78 18                                 	js 0x7adf <.Lthreads_stop.0+0x9f>
0x7ac7:   c1 e0 03                              	shl eax, 3
0x7aca:   c1 e2 03                              	shl edx, 3
0x7acd:   48 63 d2                              	movsxd rdx, edx
0x7ad0:   48 98                                 	cdqe 
0x7ad2:   4c 8d 6a 08                           	lea r13, [rdx + 8]
0x7ad6:   48 39 c2                              	cmp rdx, rax
0x7ad9:   73 04                                 	jae 0x7adf <.Lthreads_stop.0+0x9f>
0x7adb:   4c 8d 68 08                           	lea r13, [rax + 8]
0x7adf:   48 89 da                              	mov rdx, rbx
0x7ae2:   be 08 00 00 00                        	mov esi, 8
0x7ae7:   4c 89 e7                              	mov rdi, r12
0x7aea:   e8 61 a8 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7aef:   85 c0                                 	test eax, eax
0x7af1:   0f 84 69 ff ff ff                     	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7af7:   49 8b 3c 24                           	mov rdi, qword ptr [r12]
0x7afb:   48 89 da                              	mov rdx, rbx
0x7afe:   be 00 04 00 00                        	mov esi, 0x400
0x7b03:   e8 48 a8 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7b08:   85 c0                                 	test eax, eax
0x7b0a:   0f 84 50 ff ff ff                     	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7b10:   0f be 43 54                           	movsx eax, byte ptr [rbx + 0x54]
0x7b14:   4d 8b 24 24                           	mov r12, qword ptr [r12]
0x7b18:   84 c0                                 	test al, al
0x7b1a:   78 32                                 	js 0x7b4e <.Lthreads_stop.0+0x10e>
0x7b1c:   c1 e0 03                              	shl eax, 3
0x7b1f:   48 8d 4d 18                           	lea rcx, [rbp + 0x18]
0x7b23:   48 89 ea                              	mov rdx, rbp
0x7b26:   48 89 de                              	mov rsi, rbx
0x7b29:   48 98                                 	cdqe 
0x7b2b:   4a 8b 3c 20                           	mov rdi, qword ptr [rax + r12]
0x7b2f:   e8 3c fe ff ff                        	call 0x7970 <.Lstream_decoder_mt_get_progress.0>
0x7b34:   85 c0                                 	test eax, eax
0x7b36:   0f 84 24 ff ff ff                     	je 0x7a60 <.Lthreads_stop.0+0x20>
0x7b3c:   48 89 ef                              	mov rdi, rbp
0x7b3f:   e8 fc fd ff ff                        	call 0x7940 <.Llength_encoder_reset.0>
0x7b44:   85 c0                                 	test eax, eax
0x7b46:   0f 95 c0                              	setne al
0x7b49:   0f b6 c0                              	movzx eax, al
0x7b4c:   eb 7a                                 	jmp 0x7bc8 <.Lthreads_stop.0+0x188>
0x7b4e:   45 31 f6                              	xor r14d, r14d
0x7b51:   4d 8d bc 24 00 04 00 00               	lea r15, [r12 + 0x400]
0x7b59:   4d 39 fc                              	cmp r12, r15
0x7b5c:   0f 83 fe fe ff ff                     	jae 0x7a60 <.Lthreads_stop.0+0x20>
0x7b62:   48 89 da                              	mov rdx, rbx
0x7b65:   4c 89 ee                              	mov rsi, r13
0x7b68:   4c 89 e7                              	mov rdi, r12
0x7b6b:   e8 e0 a7 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7b70:   85 c0                                 	test eax, eax
0x7b72:   74 4e                                 	je 0x7bc2 <.Lthreads_stop.0+0x182>
0x7b74:   49 8b 3c 24                           	mov rdi, qword ptr [r12]
0x7b78:   48 8d 4d 18                           	lea rcx, [rbp + 0x18]
0x7b7c:   48 89 ea                              	mov rdx, rbp
0x7b7f:   48 89 de                              	mov rsi, rbx
0x7b82:   e8 e9 fd ff ff                        	call 0x7970 <.Lstream_decoder_mt_get_progress.0>
0x7b87:   85 c0                                 	test eax, eax
0x7b89:   74 37                                 	je 0x7bc2 <.Lthreads_stop.0+0x182>
0x7b8b:   41 83 fe 01                           	cmp r14d, 1
0x7b8f:   76 13                                 	jbe 0x7ba4 <.Lthreads_stop.0+0x164>
0x7b91:   48 89 ef                              	mov rdi, rbp
0x7b94:   e8 a7 fd ff ff                        	call 0x7940 <.Llength_encoder_reset.0>
0x7b99:   85 c0                                 	test eax, eax
0x7b9b:   74 25                                 	je 0x7bc2 <.Lthreads_stop.0+0x182>
0x7b9d:   b8 01 00 00 00                        	mov eax, 1
0x7ba2:   eb 24                                 	jmp 0x7bc8 <.Lthreads_stop.0+0x188>
0x7ba4:   48 8b 7d 00                           	mov rdi, qword ptr [rbp]
0x7ba8:   48 8d 77 07                           	lea rsi, [rdi + 7]
0x7bac:   e8 ef 2c 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0x7bb1:   3d 90 09 00 00                        	cmp eax, 0x990
0x7bb6:   74 07                                 	je 0x7bbf <.Lthreads_stop.0+0x17f>
0x7bb8:   3d 08 0d 00 00                        	cmp eax, 0xd08
0x7bbd:   75 03                                 	jne 0x7bc2 <.Lthreads_stop.0+0x182>
0x7bbf:   41 ff c6                              	inc r14d
0x7bc2:   49 83 c4 08                           	add r12, 8
0x7bc6:   eb 91                                 	jmp 0x7b59 <.Lthreads_stop.0+0x119>
0x7bc8:   5a                                    	pop rdx
0x7bc9:   5b                                    	pop rbx
0x7bca:   5d                                    	pop rbp
0x7bcb:   41 5c                                 	pop r12
0x7bcd:   41 5d                                 	pop r13
0x7bcf:   41 5e                                 	pop r14
0x7bd1:   41 5f                                 	pop r15
0x7bd3:   c3                                    	ret 
0x7bd4:   31 c0                                 	xor eax, eax
0x7bd6:   c3                                    	ret 
; section: .text.index_decoda
; function: .Lindex_decode.1 at 0x7be0 -- 0x7c7b
0x7be0:   f3 0f 1e fa                           	endbr64 
0x7be4:   48 85 ff                              	test rdi, rdi
0x7be7:   0f 84 8b 00 00 00                     	je 0x7c78 <.Lindex_decode.1+0x98>
0x7bed:   41 57                                 	push r15
0x7bef:   41 56                                 	push r14
0x7bf1:   41 55                                 	push r13
0x7bf3:   41 54                                 	push r12
0x7bf5:   55                                    	push rbp
0x7bf6:   53                                    	push rbx
0x7bf7:   48 89 d3                              	mov rbx, rdx
0x7bfa:   48 83 ec 18                           	sub rsp, 0x18
0x7bfe:   48 85 d2                              	test rdx, rdx
0x7c01:   74 64                                 	je 0x7c67 <.Lindex_decode.1+0x87>
0x7c03:   49 89 fc                              	mov r12, rdi
0x7c06:   41 89 f6                              	mov r14d, esi
0x7c09:   41 83 cd ff                           	or r13d, 0xffffffff
0x7c0d:   31 ed                                 	xor ebp, ebp
0x7c0f:   4c 8d 7c 24 0c                        	lea r15, [rsp + 0xc]
0x7c14:   31 c0                                 	xor eax, eax
0x7c16:   89 44 24 0c                           	mov dword ptr [rsp + 0xc], eax
0x7c1a:   48 8b 43 60                           	mov rax, qword ptr [rbx + 0x60]
0x7c1e:   48 85 c0                              	test rax, rax
0x7c21:   74 3d                                 	je 0x7c60 <.Lindex_decode.1+0x80>
0x7c23:   48 83 7b 50 00                        	cmp qword ptr [rbx + 0x50], 0
0x7c28:   74 36                                 	je 0x7c60 <.Lindex_decode.1+0x80>
0x7c2a:   be ff ff ff 7f                        	mov esi, 0x7fffffff
0x7c2f:   89 ef                                 	mov edi, ebp
0x7c31:   ff d0                                 	call rax
0x7c33:   85 c0                                 	test eax, eax
0x7c35:   79 05                                 	jns 0x7c3c <.Lindex_decode.1+0x5c>
0x7c37:   ff 53 50                              	call qword ptr [rbx + 0x50]
0x7c3a:   eb 05                                 	jmp 0x7c41 <.Lindex_decode.1+0x61>
0x7c3c:   74 0f                                 	je 0x7c4d <.Lindex_decode.1+0x6d>
0x7c3e:   4c 89 f8                              	mov rax, r15
0x7c41:   8b 00                                 	mov eax, dword ptr [rax]
0x7c43:   83 f8 16                              	cmp eax, 0x16
0x7c46:   74 05                                 	je 0x7c4d <.Lindex_decode.1+0x6d>
0x7c48:   83 f8 6b                              	cmp eax, 0x6b
0x7c4b:   75 13                                 	jne 0x7c60 <.Lindex_decode.1+0x80>
0x7c4d:   41 ff c5                              	inc r13d
0x7c50:   45 39 f5                              	cmp r13d, r14d
0x7c53:   75 0b                                 	jne 0x7c60 <.Lindex_decode.1+0x80>
0x7c55:   41 89 2c 24                           	mov dword ptr [r12], ebp
0x7c59:   b8 01 00 00 00                        	mov eax, 1
0x7c5e:   eb 09                                 	jmp 0x7c69 <.Lindex_decode.1+0x89>
0x7c60:   ff c5                                 	inc ebp
0x7c62:   83 fd 40                              	cmp ebp, 0x40
0x7c65:   75 ad                                 	jne 0x7c14 <.Lindex_decode.1+0x34>
0x7c67:   31 c0                                 	xor eax, eax
0x7c69:   48 83 c4 18                           	add rsp, 0x18
0x7c6d:   5b                                    	pop rbx
0x7c6e:   5d                                    	pop rbp
0x7c6f:   41 5c                                 	pop r12
0x7c71:   41 5d                                 	pop r13
0x7c73:   41 5e                                 	pop r14
0x7c75:   41 5f                                 	pop r15
0x7c77:   c3                                    	ret 
0x7c78:   31 c0                                 	xor eax, eax
0x7c7a:   c3                                    	ret 
; section: .text.index_encoda
; function: .Lindex_encode.1 at 0x7c80 -- 0x7d6c
0x7c80:   f3 0f 1e fa                           	endbr64 
0x7c84:   41 57                                 	push r15
0x7c86:   41 56                                 	push r14
0x7c88:   41 55                                 	push r13
0x7c8a:   41 54                                 	push r12
0x7c8c:   55                                    	push rbp
0x7c8d:   53                                    	push rbx
0x7c8e:   48 83 ec 28                           	sub rsp, 0x28
0x7c92:   89 54 24 0c                           	mov dword ptr [rsp + 0xc], edx
0x7c96:   48 85 ff                              	test rdi, rdi
0x7c99:   75 07                                 	jne 0x7ca2 <.Lindex_encode.1+0x22>
0x7c9b:   33 c0                                 	xor eax, eax
0x7c9d:   e9 bb 00 00 00                        	jmp 0x7d5d <.Lindex_encode.1+0xdd>
0x7ca2:   48 8b 57 10                           	mov rdx, qword ptr [rdi + 0x10]
0x7ca6:   48 89 fb                              	mov rbx, rdi
0x7ca9:   48 85 d2                              	test rdx, rdx
0x7cac:   74 ed                                 	je 0x7c9b <.Lindex_encode.1+0x1b>
0x7cae:   48 8b ee                              	mov rbp, rsi
0x7cb1:   48 85 f6                              	test rsi, rsi
0x7cb4:   74 e5                                 	je 0x7c9b <.Lindex_encode.1+0x1b>
0x7cb6:   48 8b 47 48                           	mov rax, qword ptr [rdi + 0x48]
0x7cba:   48 85 c0                              	test rax, rax
0x7cbd:   74 44                                 	je 0x7d03 <.Lindex_encode.1+0x83>
0x7cbf:   4c 8b 30                              	mov r14, qword ptr [rax]
0x7cc2:   48 8b d7                              	mov rdx, rdi
0x7cc5:   be 04 00 00 00                        	mov esi, 4
0x7cca:   41 89 cd                              	mov r13d, ecx
0x7ccd:   4c 89 f7                              	mov rdi, r14
0x7cd0:   e8 7b a6 ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x7cd5:   85 c0                                 	test eax, eax
0x7cd7:   74 26                                 	je 0x7cff <.Lindex_encode.1+0x7f>
0x7cd9:   45 85 ed                              	test r13d, r13d
0x7cdc:   75 05                                 	jne 0x7ce3 <.Lindex_encode.1+0x63>
0x7cde:   45 8b 36                              	mov r14d, dword ptr [r14]
0x7ce1:   eb 09                                 	jmp 0x7cec <.Lindex_encode.1+0x6c>
0x7ce3:   41 ff cd                              	dec r13d
0x7ce6:   75 b3                                 	jne 0x7c9b <.Lindex_encode.1+0x1b>
0x7ce8:   45 8b 76 04                           	mov r14d, dword ptr [r14 + 4]
0x7cec:   c6 44 24 1f 00                        	mov byte ptr [rsp + 0x1f], 0
0x7cf1:   4c 8b 6b 10                           	mov r13, qword ptr [rbx + 0x10]
0x7cf5:   45 85 f6                              	test r14d, r14d
0x7cf8:   78 05                                 	js 0x7cff <.Lindex_encode.1+0x7f>
0x7cfa:   4d 85 ed                              	test r13, r13
0x7cfd:   75 1e                                 	jne 0x7d1d <.Lindex_encode.1+0x9d>
0x7cff:   48 8b 53 10                           	mov rdx, qword ptr [rbx + 0x10]
0x7d03:   8b 74 24 0c                           	mov esi, dword ptr [rsp + 0xc]
0x7d07:   48 83 c4 28                           	add rsp, 0x28
0x7d0b:   48 89 ef                              	mov rdi, rbp
0x7d0e:   5b                                    	pop rbx
0x7d0f:   5d                                    	pop rbp
0x7d10:   41 5c                                 	pop r12
0x7d12:   41 5d                                 	pop r13
0x7d14:   41 5e                                 	pop r14
0x7d16:   41 5f                                 	pop r15
0x7d18:   e9 c3 fe ff ff                        	jmp 0x7be0 <.Lindex_decode.1>
0x7d1d:   49 83 7d 48 00                        	cmp qword ptr [r13 + 0x48], 0
0x7d22:   74 db                                 	je 0x7cff <.Lindex_encode.1+0x7f>
0x7d24:   49 83 7d 50 00                        	cmp qword ptr [r13 + 0x50], 0
0x7d29:   74 d4                                 	je 0x7cff <.Lindex_encode.1+0x7f>
0x7d2b:   4c 8d 7c 24 1f                        	lea r15, [rsp + 0x1f]
0x7d30:   31 d2                                 	xor edx, edx
0x7d32:   4c 89 fe                              	mov rsi, r15
0x7d35:   44 89 f7                              	mov edi, r14d
0x7d38:   41 ff 55 48                           	call qword ptr [r13 + 0x48]
0x7d3c:   49 89 c4                              	mov r12, rax
0x7d3f:   41 ff 55 50                           	call qword ptr [r13 + 0x50]
0x7d43:   45 85 e4                              	test r12d, r12d
0x7d46:   79 0c                                 	jns 0x7d54 <.Lindex_encode.1+0xd4>
0x7d48:   8b 00                                 	mov eax, dword ptr [rax]
0x7d4a:   83 f8 04                              	cmp eax, 4
0x7d4d:   74 e1                                 	je 0x7d30 <.Lindex_encode.1+0xb0>
0x7d4f:   83 f8 09                              	cmp eax, 9
0x7d52:   74 ab                                 	je 0x7cff <.Lindex_encode.1+0x7f>
0x7d54:   44 89 75 00                           	mov dword ptr [rbp], r14d
0x7d58:   b8 01 00 00 00                        	mov eax, 1
0x7d5d:   48 83 c4 28                           	add rsp, 0x28
0x7d61:   5b                                    	pop rbx
0x7d62:   5d                                    	pop rbp
0x7d63:   41 5c                                 	pop r12
0x7d65:   41 5d                                 	pop r13
0x7d67:   41 5e                                 	pop r14
0x7d69:   41 5f                                 	pop r15
0x7d6b:   c3                                    	ret 
; section: .text.lzma_block_unpadded_siza
; function: .Llzma_block_unpadded_size.1 at 0x7d70 -- 0x7df3
0x7d70:   f3 0f 1e fa                           	endbr64 
0x7d74:   4d 85 c0                              	test r8, r8
0x7d77:   75 03                                 	jne 0x7d7c <.Llzma_block_unpadded_size.1+0xc>
0x7d79:   31 c0                                 	xor eax, eax
0x7d7b:   c3                                    	ret 
0x7d7c:   49 8b 40 20                           	mov rax, qword ptr [r8 + 0x20]
0x7d80:   48 85 c0                              	test rax, rax
0x7d83:   74 f4                                 	je 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7d85:   4c 8b 48 10                           	mov r9, qword ptr [rax + 0x10]
0x7d89:   4d 85 c9                              	test r9, r9
0x7d8c:   74 eb                                 	je 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7d8e:   83 78 04 00                           	cmp dword ptr [rax + 4], 0
0x7d92:   74 e5                                 	je 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7d94:   85 ff                                 	test edi, edi
0x7d96:   75 28                                 	jne 0x7dc0 <.Llzma_block_unpadded_size.1+0x50>
0x7d98:   48 8b b8 c8 00 00 00                  	mov rdi, qword ptr [rax + 0xc8]
0x7d9f:   48 85 ff                              	test rdi, rdi
0x7da2:   74 d5                                 	je 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7da4:   44 8b 07                              	mov r8d, dword ptr [rdi]
0x7da7:   41 83 f8 02                           	cmp r8d, 2
0x7dab:   7f 0d                                 	jg 0x7dba <.Llzma_block_unpadded_size.1+0x4a>
0x7dad:   45 85 c0                              	test r8d, r8d
0x7db0:   78 c7                                 	js 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7db2:   c7 07 03 00 00 00                     	mov dword ptr [rdi], 3
0x7db8:   eb 06                                 	jmp 0x7dc0 <.Llzma_block_unpadded_size.1+0x50>
0x7dba:   41 83 f8 03                           	cmp r8d, 3
0x7dbe:   75 b9                                 	jne 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7dc0:   85 f6                                 	test esi, esi
0x7dc2:   74 15                                 	je 0x7dd9 <.Llzma_block_unpadded_size.1+0x69>
0x7dc4:   48 8b b0 c0 00 00 00                  	mov rsi, qword ptr [rax + 0xc0]
0x7dcb:   48 85 f6                              	test rsi, rsi
0x7dce:   74 a9                                 	je 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7dd0:   83 3e 01                              	cmp dword ptr [rsi], 1
0x7dd3:   77 a4                                 	ja 0x7d79 <.Llzma_block_unpadded_size.1+0x9>
0x7dd5:   31 ff                                 	xor edi, edi
0x7dd7:   89 3e                                 	mov dword ptr [rsi], edi
0x7dd9:   48 8b 70 38                           	mov rsi, qword ptr [rax + 0x38]
0x7ddd:   85 d2                                 	test edx, edx
0x7ddf:   75 06                                 	jne 0x7de7 <.Llzma_block_unpadded_size.1+0x77>
0x7de1:   8b 56 f8                              	mov edx, dword ptr [rsi - 8]
0x7de4:   8d 4a 01                              	lea ecx, [rdx + 1]
0x7de7:   89 48 40                              	mov dword ptr [rax + 0x40], ecx
0x7dea:   b8 01 00 00 00                        	mov eax, 1
0x7def:   4c 89 0e                              	mov qword ptr [rsi], r9
0x7df2:   c3                                    	ret 
; section: .text.lzma_rc_pricea
; function: .Llzma_rc_prices.1 at 0x7e00 -- 0x7eb1
0x7e00:   f3 0f 1e fa                           	endbr64 
0x7e04:   48 8b 46 30                           	mov rax, qword ptr [rsi + 0x30]
0x7e08:   48 85 ff                              	test rdi, rdi
0x7e0b:   74 05                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e0d:   48 85 c0                              	test rax, rax
0x7e10:   75 03                                 	jne 0x7e15 <.Llzma_rc_prices.1+0x15>
0x7e12:   31 c0                                 	xor eax, eax
0x7e14:   c3                                    	ret 
0x7e15:   48 8b 50 38                           	mov rdx, qword ptr [rax + 0x38]
0x7e19:   48 85 d2                              	test rdx, rdx
0x7e1c:   74 f4                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e1e:   48 8b 48 40                           	mov rcx, qword ptr [rax + 0x40]
0x7e22:   48 85 c9                              	test rcx, rcx
0x7e25:   74 eb                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e27:   4c 8b 48 60                           	mov r9, qword ptr [rax + 0x60]
0x7e2b:   4d 85 c9                              	test r9, r9
0x7e2e:   74 e2                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e30:   83 78 04 00                           	cmp dword ptr [rax + 4], 0
0x7e34:   74 dc                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e36:   40 8a 3f                              	mov dil, byte ptr [rdi]
0x7e39:   41 89 fa                              	mov r10d, edi
0x7e3c:   41 80 e2 08                           	and r10b, 8
0x7e40:   74 09                                 	je 0x7e4b <.Llzma_rc_prices.1+0x4b>
0x7e42:   83 be 90 00 00 00 00                  	cmp dword ptr [rsi + 0x90], 0
0x7e49:   75 60                                 	jne 0x7eab <.Llzma_rc_prices.1+0xab>
0x7e4b:   4c 8b 01                              	mov r8, qword ptr [rcx]
0x7e4e:   4d 85 c0                              	test r8, r8
0x7e51:   74 17                                 	je 0x7e6a <.Llzma_rc_prices.1+0x6a>
0x7e53:   4c 3b 46 58                           	cmp r8, qword ptr [rsi + 0x58]
0x7e57:   72 11                                 	jb 0x7e6a <.Llzma_rc_prices.1+0x6a>
0x7e59:   4c 3b 46 60                           	cmp r8, qword ptr [rsi + 0x60]
0x7e5d:   73 0b                                 	jae 0x7e6a <.Llzma_rc_prices.1+0x6a>
0x7e5f:   48 89 48 38                           	mov qword ptr [rax + 0x38], rcx
0x7e63:   48 89 50 40                           	mov qword ptr [rax + 0x40], rdx
0x7e67:   48 87 ca                              	xchg rdx, rcx
0x7e6a:   48 8b 32                              	mov rsi, qword ptr [rdx]
0x7e6d:   48 8b 09                              	mov rcx, qword ptr [rcx]
0x7e70:   48 89 70 48                           	mov qword ptr [rax + 0x48], rsi
0x7e74:   48 89 48 50                           	mov qword ptr [rax + 0x50], rcx
0x7e78:   45 84 d2                              	test r10b, r10b
0x7e7b:   75 08                                 	jne 0x7e85 <.Llzma_rc_prices.1+0x85>
0x7e7d:   c7 00 01 00 00 00                     	mov dword ptr [rax], 1
0x7e83:   eb 23                                 	jmp 0x7ea8 <.Llzma_rc_prices.1+0xa8>
0x7e85:   40 80 e7 10                           	and dil, 0x10
0x7e89:   74 1d                                 	je 0x7ea8 <.Llzma_rc_prices.1+0xa8>
0x7e8b:   48 83 78 10 00                        	cmp qword ptr [rax + 0x10], 0
0x7e90:   74 80                                 	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e92:   48 83 78 18 00                        	cmp qword ptr [rax + 0x18], 0
0x7e97:   0f 84 75 ff ff ff                     	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7e9d:   48 83 78 20 00                        	cmp qword ptr [rax + 0x20], 0
0x7ea2:   0f 84 6a ff ff ff                     	je 0x7e12 <.Llzma_rc_prices.1+0x12>
0x7ea8:   4c 89 0a                              	mov qword ptr [rdx], r9
0x7eab:   b8 01 00 00 00                        	mov eax, 1
0x7eb0:   c3                                    	ret 
; section: .text.stream_encoder_mt_iniz
; function: .Lstream_encoder_mt_init.part.0 at 0x7ec0 -- 0x7f3e
0x7ec0:   f3 0f 1e fa                           	endbr64 
0x7ec4:   48 85 ff                              	test rdi, rdi
0x7ec7:   74 72                                 	je 0x7f3b <.Lstream_encoder_mt_init.part.0+0x7b>
0x7ec9:   8b 87 04 01 00 00                     	mov eax, dword ptr [rdi + 0x104]
0x7ecf:   83 f8 02                              	cmp eax, 2
0x7ed2:   7f 13                                 	jg 0x7ee7 <.Lstream_encoder_mt_init.part.0+0x27>
0x7ed4:   85 c0                                 	test eax, eax
0x7ed6:   7f 1d                                 	jg 0x7ef5 <.Lstream_encoder_mt_init.part.0+0x35>
0x7ed8:   75 57                                 	jne 0x7f31 <.Lstream_encoder_mt_init.part.0+0x71>
0x7eda:   48 81 bf e8 00 00 00 ae 00 00 00      	cmp qword ptr [rdi + 0xe8], 0xae
0x7ee5:   eb 06                                 	jmp 0x7eed <.Lstream_encoder_mt_init.part.0+0x2d>
0x7ee7:   83 e8 03                              	sub eax, 3
0x7eea:   83 f8 01                              	cmp eax, 1
0x7eed:   77 42                                 	ja 0x7f31 <.Lstream_encoder_mt_init.part.0+0x71>
0x7eef:   b8 01 00 00 00                        	mov eax, 1
0x7ef4:   c3                                    	ret 
0x7ef5:   48 8b 97 f8 00 00 00                  	mov rdx, qword ptr [rdi + 0xf8]
0x7efc:   48 85 d2                              	test rdx, rdx
0x7eff:   74 30                                 	je 0x7f31 <.Lstream_encoder_mt_init.part.0+0x71>
0x7f01:   48 8b 87 e8 00 00 00                  	mov rax, qword ptr [rdi + 0xe8]
0x7f08:   48 3d ad 00 00 00                     	cmp rax, 0xad
0x7f0e:   76 21                                 	jbe 0x7f31 <.Lstream_encoder_mt_init.part.0+0x71>
0x7f10:   0f b7 12                              	movzx edx, word ptr [rdx]
0x7f13:   48 39 c2                              	cmp rdx, rax
0x7f16:   72 19                                 	jb 0x7f31 <.Lstream_encoder_mt_init.part.0+0x71>
0x7f18:   48 8d 42 60                           	lea rax, [rdx + 0x60]
0x7f1c:   48 39 d0                              	cmp rax, rdx
0x7f1f:   48 0f 43 d0                           	cmovae rdx, rax
0x7f23:   b8 01 00 00 00                        	mov eax, 1
0x7f28:   48 39 97 e0 00 00 00                  	cmp qword ptr [rdi + 0xe0], rdx
0x7f2f:   73 0c                                 	jae 0x7f3d <.Lstream_encoder_mt_init.part.0+0x7d>
0x7f31:   c7 87 04 01 00 00 ff ff ff ff         	mov dword ptr [rdi + 0x104], 0xffffffff
0x7f3b:   31 c0                                 	xor eax, eax
0x7f3d:   c3                                    	ret 
; section: .text.worker_stara
; function: .Lworker_start.0 at 0x7f40 -- 0x809a
0x7f40:   f3 0f 1e fa                           	endbr64 
0x7f44:   48 85 ff                              	test rdi, rdi
0x7f47:   0f 84 3f 01 00 00                     	je 0x808c <.Lworker_start.0+0x14c>
0x7f4d:   48 83 fe 06                           	cmp rsi, 6
0x7f51:   0f 86 35 01 00 00                     	jbe 0x808c <.Lworker_start.0+0x14c>
0x7f57:   41 56                                 	push r14
0x7f59:   41 55                                 	push r13
0x7f5b:   41 54                                 	push r12
0x7f5d:   49 89 d4                              	mov r12, rdx
0x7f60:   55                                    	push rbp
0x7f61:   53                                    	push rbx
0x7f62:   48 85 d2                              	test rdx, rdx
0x7f65:   0f 84 24 01 00 00                     	je 0x808f <.Lworker_start.0+0x14f>
0x7f6b:   48 85 c9                              	test rcx, rcx
0x7f6e:   0f 84 1b 01 00 00                     	je 0x808f <.Lworker_start.0+0x14f>
0x7f74:   4c 8b 41 38                           	mov r8, qword ptr [rcx + 0x38]
0x7f78:   31 c0                                 	xor eax, eax
0x7f7a:   4d 85 c0                              	test r8, r8
0x7f7d:   0f 84 0e 01 00 00                     	je 0x8091 <.Lworker_start.0+0x151>
0x7f83:   4c 8b 49 40                           	mov r9, qword ptr [rcx + 0x40]
0x7f87:   4d 85 c9                              	test r9, r9
0x7f8a:   0f 84 01 01 00 00                     	je 0x8091 <.Lworker_start.0+0x151>
0x7f90:   48 8b 0f                              	mov rcx, qword ptr [rdi]
0x7f93:   48 89 fd                              	mov rbp, rdi
0x7f96:   48 89 cf                              	mov rdi, rcx
0x7f99:   48 01 f7                              	add rdi, rsi
0x7f9c:   0f 82 ef 00 00 00                     	jb 0x8091 <.Lworker_start.0+0x151>
0x7fa2:   31 c0                                 	xor eax, eax
0x7fa4:   49 89 f6                              	mov r14, rsi
0x7fa7:   48 8d 1c 01                           	lea rbx, [rcx + rax]
0x7fab:   31 d2                                 	xor edx, edx
0x7fad:   49 29 c6                              	sub r14, rax
0x7fb0:   44 8a 14 13                           	mov r10b, byte ptr [rbx + rdx]
0x7fb4:   45 38 14 10                           	cmp byte ptr [r8 + rdx], r10b
0x7fb8:   7f 0d                                 	jg 0x7fc7 <.Lworker_start.0+0x87>
0x7fba:   7c 0b                                 	jl 0x7fc7 <.Lworker_start.0+0x87>
0x7fbc:   48 ff c2                              	inc rdx
0x7fbf:   48 83 fa 07                           	cmp rdx, 7
0x7fc3:   75 eb                                 	jne 0x7fb0 <.Lworker_start.0+0x70>
0x7fc5:   eb 2a                                 	jmp 0x7ff1 <.Lworker_start.0+0xb1>
0x7fc7:   31 d2                                 	xor edx, edx
0x7fc9:   44 8a 1c 13                           	mov r11b, byte ptr [rbx + rdx]
0x7fcd:   45 38 1c 11                           	cmp byte ptr [r9 + rdx], r11b
0x7fd1:   7f 0d                                 	jg 0x7fe0 <.Lworker_start.0+0xa0>
0x7fd3:   7c 0b                                 	jl 0x7fe0 <.Lworker_start.0+0xa0>
0x7fd5:   48 ff c2                              	inc rdx
0x7fd8:   48 83 fa 07                           	cmp rdx, 7
0x7fdc:   75 eb                                 	jne 0x7fc9 <.Lworker_start.0+0x89>
0x7fde:   eb 11                                 	jmp 0x7ff1 <.Lworker_start.0+0xb1>
0x7fe0:   48 ff c0                              	inc rax
0x7fe3:   49 89 f6                              	mov r14, rsi
0x7fe6:   49 29 c6                              	sub r14, rax
0x7fe9:   49 83 fe 06                           	cmp r14, 6
0x7fed:   75 b5                                 	jne 0x7fa4 <.Lworker_start.0+0x64>
0x7fef:   31 db                                 	xor ebx, ebx
0x7ff1:   48 83 f8 07                           	cmp rax, 7
0x7ff5:   0f 86 94 00 00 00                     	jbe 0x808f <.Lworker_start.0+0x14f>
0x7ffb:   48 85 db                              	test rbx, rbx
0x7ffe:   0f 84 8b 00 00 00                     	je 0x808f <.Lworker_start.0+0x14f>
0x8004:   8b 53 f8                              	mov edx, dword ptr [rbx - 8]
0x8007:   31 c0                                 	xor eax, eax
0x8009:   0f ca                                 	bswap edx
0x800b:   81 fa 00 00 01 00                     	cmp edx, 0x10000
0x8011:   77 7e                                 	ja 0x8091 <.Lworker_start.0+0x151>
0x8013:   89 d2                                 	mov edx, edx
0x8015:   4c 8d 6c 13 f8                        	lea r13, [rbx + rdx - 8]
0x801a:   4c 39 ef                              	cmp rdi, r13
0x801d:   72 72                                 	jb 0x8091 <.Lworker_start.0+0x151>
0x801f:   4c 89 f6                              	mov rsi, r14
0x8022:   48 89 df                              	mov rdi, rbx
0x8025:   e8 46 f0 ff ff                        	call 0x7070 <function_7070>
0x802a:   48 89 c2                              	mov rdx, rax
0x802d:   31 c0                                 	xor eax, eax
0x802f:   4c 39 f2                              	cmp rdx, r14
0x8032:   73 5d                                 	jae 0x8091 <.Lworker_start.0+0x151>
0x8034:   48 01 d3                              	add rbx, rdx
0x8037:   4c 39 eb                              	cmp rbx, r13
0x803a:   73 55                                 	jae 0x8091 <.Lworker_start.0+0x151>
0x803c:   8b 13                                 	mov edx, dword ptr [rbx]
0x803e:   0f ca                                 	bswap edx
0x8040:   81 fa 00 00 01 00                     	cmp edx, 0x10000
0x8046:   77 49                                 	ja 0x8091 <.Lworker_start.0+0x151>
0x8048:   8d 42 04                              	lea eax, [rdx + 4]
0x804b:   48 01 c3                              	add rbx, rax
0x804e:   31 c0                                 	xor eax, eax
0x8050:   4c 39 eb                              	cmp rbx, r13
0x8053:   73 3c                                 	jae 0x8091 <.Lworker_start.0+0x151>
0x8055:   8b 13                                 	mov edx, dword ptr [rbx]
0x8057:   0f ca                                 	bswap edx
0x8059:   81 fa 00 00 01 00                     	cmp edx, 0x10000
0x805f:   77 30                                 	ja 0x8091 <.Lworker_start.0+0x151>
0x8061:   48 8d 4b 04                           	lea rcx, [rbx + 4]
0x8065:   89 d6                                 	mov esi, edx
0x8067:   48 01 ce                              	add rsi, rcx
0x806a:   49 39 f5                              	cmp r13, rsi
0x806d:   73 22                                 	jae 0x8091 <.Lworker_start.0+0x151>
0x806f:   80 7b 04 00                           	cmp byte ptr [rbx + 4], 0
0x8073:   75 06                                 	jne 0x807b <.Lworker_start.0+0x13b>
0x8075:   48 8d 4b 05                           	lea rcx, [rbx + 5]
0x8079:   ff ca                                 	dec edx
0x807b:   89 d0                                 	mov eax, edx
0x807d:   48 89 4d 00                           	mov qword ptr [rbp], rcx
0x8081:   49 89 04 24                           	mov qword ptr [r12], rax
0x8085:   b8 01 00 00 00                        	mov eax, 1
0x808a:   eb 05                                 	jmp 0x8091 <.Lworker_start.0+0x151>
0x808c:   31 c0                                 	xor eax, eax
0x808e:   c3                                    	ret 
0x808f:   31 c0                                 	xor eax, eax
0x8091:   5b                                    	pop rbx
0x8092:   5d                                    	pop rbp
0x8093:   41 5c                                 	pop r12
0x8095:   41 5d                                 	pop r13
0x8097:   41 5e                                 	pop r14
0x8099:   c3                                    	ret 
; section: .text.bt_skip_funz
; function: .Lbt_skip_func.part.0 at 0x80a0 -- 0x811a
0x80a0:   f3 0f 1e fa                           	endbr64 
0x80a4:   48 8b 05 95 4a 00 00                  	mov rax, qword ptr [rip + 0x4a95]
0x80ab:   48 85 c0                              	test rax, rax
0x80ae:   74 67                                 	je 0x8117 <.Lbt_skip_func.part.0+0x77>
0x80b0:   55                                    	push rbp
0x80b1:   53                                    	push rbx
0x80b2:   51                                    	push rcx
0x80b3:   48 8b 68 10                           	mov rbp, qword ptr [rax + 0x10]
0x80b7:   48 85 ed                              	test rbp, rbp
0x80ba:   74 55                                 	je 0x8111 <.Lbt_skip_func.part.0+0x71>
0x80bc:   48 8b 58 20                           	mov rbx, qword ptr [rax + 0x20]
0x80c0:   48 85 db                              	test rbx, rbx
0x80c3:   74 4c                                 	je 0x8111 <.Lbt_skip_func.part.0+0x71>
0x80c5:   0f b7 93 84 00 00 00                  	movzx edx, word ptr [rbx + 0x84]
0x80cc:   66 85 d2                              	test dx, dx
0x80cf:   74 33                                 	je 0x8104 <.Lbt_skip_func.part.0+0x64>
0x80d1:   8b fe                                 	mov edi, esi
0x80d3:   48 8b b3 88 00 00 00                  	mov rsi, qword ptr [rbx + 0x88]
0x80da:   48 85 f6                              	test rsi, rsi
0x80dd:   74 25                                 	je 0x8104 <.Lbt_skip_func.part.0+0x64>
0x80df:   48 89 e9                              	mov rcx, rbp
0x80e2:   e8 29 f0 ff ff                        	call 0x7110 <function_7110>
0x80e7:   48 85 c0                              	test rax, rax
0x80ea:   78 18                                 	js 0x8104 <.Lbt_skip_func.part.0+0x64>
0x80ec:   48 8b 83 a0 00 00 00                  	mov rax, qword ptr [rbx + 0xa0]
0x80f3:   48 8b 93 d8 00 00 00                  	mov rdx, qword ptr [rbx + 0xd8]
0x80fa:   48 89 10                              	mov qword ptr [rax], rdx
0x80fd:   b8 01 00 00 00                        	mov eax, 1
0x8102:   eb 0f                                 	jmp 0x8113 <.Lbt_skip_func.part.0+0x73>
0x8104:   48 8b 45 18                           	mov rax, qword ptr [rbp + 0x18]
0x8108:   48 85 c0                              	test rax, rax
0x810b:   74 04                                 	je 0x8111 <.Lbt_skip_func.part.0+0x71>
0x810d:   33 ff                                 	xor edi, edi
0x810f:   ff d0                                 	call rax
0x8111:   31 c0                                 	xor eax, eax
0x8113:   5a                                    	pop rdx
0x8114:   5b                                    	pop rbx
0x8115:   5d                                    	pop rbp
0x8116:   c3                                    	ret 
0x8117:   33 c0                                 	xor eax, eax
0x8119:   c3                                    	ret 
; section: .text.lzma_coda
; function: .Llzma_code.part.1 at 0x8120 -- 0x81e3
0x8120:   f3 0f 1e fa                           	endbr64 
0x8124:   53                                    	push rbx
0x8125:   48 89 f8                              	mov rax, rdi
0x8128:   89 f7                                 	mov edi, esi
0x812a:   45 31 c9                              	xor r9d, r9d
0x812d:   48 83 ec 10                           	sub rsp, 0x10
0x8131:   48 8b 35 08 4a 00 00                  	mov rsi, qword ptr [rip + 0x4a08]
0x8138:   4c 89 4c 24 03                        	mov qword ptr [rsp + 3], r9
0x813d:   48 8b 4e 10                           	mov rcx, qword ptr [rsi + 0x10]
0x8141:   48 8b 5e 20                           	mov rbx, qword ptr [rsi + 0x20]
0x8145:   8b f7                                 	mov esi, edi
0x8147:   4c 89 4c 24 08                        	mov qword ptr [rsp + 8], r9
0x814c:   c1 ee 1f                              	shr esi, 0x1f
0x814f:   48 85 d2                              	test rdx, rdx
0x8152:   0f 94 c2                              	sete dl
0x8155:   40 08 f2                              	or dl, sil
0x8158:   75 05                                 	jne 0x815f <.Llzma_code.part.1+0x3f>
0x815a:   48 85 c0                              	test rax, rax
0x815d:   75 16                                 	jne 0x8175 <.Llzma_code.part.1+0x55>
0x815f:   48 85 c9                              	test rcx, rcx
0x8162:   74 0d                                 	je 0x8171 <.Llzma_code.part.1+0x51>
0x8164:   48 8b 41 18                           	mov rax, qword ptr [rcx + 0x18]
0x8168:   48 85 c0                              	test rax, rax
0x816b:   74 04                                 	je 0x8171 <.Llzma_code.part.1+0x51>
0x816d:   33 ff                                 	xor edi, edi
0x816f:   ff d0                                 	call rax
0x8171:   33 c0                                 	xor eax, eax
0x8173:   eb 68                                 	jmp 0x81dd <.Llzma_code.part.1+0xbd>
0x8175:   0f b7 93 90 00 00 00                  	movzx edx, word ptr [rbx + 0x90]
0x817c:   66 85 d2                              	test dx, dx
0x817f:   74 0c                                 	je 0x818d <.Llzma_code.part.1+0x6d>
0x8181:   48 8b b3 98 00 00 00                  	mov rsi, qword ptr [rbx + 0x98]
0x8188:   48 85 f6                              	test rsi, rsi
0x818b:   75 35                                 	jne 0x81c2 <.Llzma_code.part.1+0xa2>
0x818d:   83 bb b8 00 00 00 01                  	cmp dword ptr [rbx + 0xb8], 1
0x8194:   8b 43 40                              	mov eax, dword ptr [rbx + 0x40]
0x8197:   48 8d 74 24 03                        	lea rsi, [rsp + 3]
0x819c:   c7 44 24 08 00 00 00 01               	mov dword ptr [rsp + 8], 0x1000000
0x81a4:   19 d2                                 	sbb edx, edx
0x81a6:   81 e2 00 00 00 fc                     	and edx, 0xfc000000
0x81ac:   88 44 24 07                           	mov byte ptr [rsp + 7], al
0x81b0:   81 c2 00 00 00 09                     	add edx, 0x9000000
0x81b6:   89 54 24 03                           	mov dword ptr [rsp + 3], edx
0x81ba:   0f ca                                 	bswap edx
0x81bc:   89 d2                                 	mov edx, edx
0x81be:   48 83 c2 04                           	add rdx, 4
0x81c2:   e8 49 ef ff ff                        	call 0x7110 <function_7110>
0x81c7:   48 8b 83 a0 00 00 00                  	mov rax, qword ptr [rbx + 0xa0]
0x81ce:   48 8b 93 d0 00 00 00                  	mov rdx, qword ptr [rbx + 0xd0]
0x81d5:   48 89 10                              	mov qword ptr [rax], rdx
0x81d8:   b8 01 00 00 00                        	mov eax, 1
0x81dd:   48 83 c4 10                           	add rsp, 0x10
0x81e1:   5b                                    	pop rbx
0x81e2:   c3                                    	ret 
; section: .text.parse_lzma10
; function: .Lparse_lzma12.0 at 0x81f0 -- 0x828e
0x81f0:   f3 0f 1e fa                           	endbr64 
0x81f4:   48 85 ff                              	test rdi, rdi
0x81f7:   0f 84 8e 00 00 00                     	je 0x828b <.Lparse_lzma12.0+0x9b>
0x81fd:   41 54                                 	push r12
0x81ff:   55                                    	push rbp
0x8200:   53                                    	push rbx
0x8201:   48 89 f3                              	mov rbx, rsi
0x8204:   48 81 ec a0 00 00 00                  	sub rsp, 0xa0
0x820b:   48 85 f6                              	test rsi, rsi
0x820e:   75 04                                 	jne 0x8214 <.Lparse_lzma12.0+0x24>
0x8210:   31 c0                                 	xor eax, eax
0x8212:   eb 6b                                 	jmp 0x827f <.Lparse_lzma12.0+0x8f>
0x8214:   4c 8b 4e 08                           	mov r9, qword ptr [rsi + 8]
0x8218:   4d 85 c9                              	test r9, r9
0x821b:   74 f3                                 	je 0x8210 <.Lparse_lzma12.0+0x20>
0x821d:   48 89 e2                              	mov rdx, rsp
0x8220:   31 c0                                 	xor eax, eax
0x8222:   48 8d 6c 24 30                        	lea rbp, [rsp + 0x30]
0x8227:   49 89 fc                              	mov r12, rdi
0x822a:   b9 0c 00 00 00                        	mov ecx, 0xc
0x822f:   48 89 d7                              	mov rdi, rdx
0x8232:   49 89 e8                              	mov r8, rbp
0x8235:   be 30 00 00 00                        	mov esi, 0x30
0x823a:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x823c:   b9 1c 00 00 00                        	mov ecx, 0x1c
0x8241:   48 89 ef                              	mov rdi, rbp
0x8244:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x8246:   48 8d 4c 24 20                        	lea rcx, [rsp + 0x20]
0x824b:   48 89 d7                              	mov rdi, rdx
0x824e:   e8 5d ef ff ff                        	call 0x71b0 <function_71b0>
0x8253:   85 c0                                 	test eax, eax
0x8255:   74 b9                                 	je 0x8210 <.Lparse_lzma12.0+0x20>
0x8257:   4c 8b 4b 08                           	mov r9, qword ptr [rbx + 8]
0x825b:   48 8d 4c 24 50                        	lea rcx, [rsp + 0x50]
0x8260:   4d 89 e0                              	mov r8, r12
0x8263:   48 89 ea                              	mov rdx, rbp
0x8266:   48 8d bb 08 01 00 00                  	lea rdi, [rbx + 0x108]
0x826d:   be 39 00 00 00                        	mov esi, 0x39
0x8272:   e8 39 ef ff ff                        	call 0x71b0 <function_71b0>
0x8277:   85 c0                                 	test eax, eax
0x8279:   0f 95 c0                              	setne al
0x827c:   0f b6 c0                              	movzx eax, al
0x827f:   48 81 c4 a0 00 00 00                  	add rsp, 0xa0
0x8286:   5b                                    	pop rbx
0x8287:   5d                                    	pop rbp
0x8288:   41 5c                                 	pop r12
0x828a:   c3                                    	ret 
0x828b:   31 c0                                 	xor eax, eax
0x828d:   c3                                    	ret 
; section: .text.lzip_decoder_memconfia
; function: .Llzip_decoder_memconfig.part.0 at 0x8290 -- 0x8d6f
0x8290:   f3 0f 1e fa                           	endbr64 
0x8294:   55                                    	push rbp
0x8295:   0f 57 c0                              	xorps xmm0, xmm0
0x8298:   b9 36 02 00 00                        	mov ecx, 0x236
0x829d:   31 c0                                 	xor eax, eax
0x829f:   48 89 e5                              	mov rbp, rsp
0x82a2:   41 57                                 	push r15
0x82a4:   41 56                                 	push r14
0x82a6:   41 55                                 	push r13
0x82a8:   41 54                                 	push r12
0x82aa:   49 89 fc                              	mov r12, rdi
0x82ad:   48 8d bd f8 f6 ff ff                  	lea rdi, [rbp - 0x908]
0x82b4:   53                                    	push rbx
0x82b5:   48 81 ec 88 0e 00 00                  	sub rsp, 0xe88
0x82bc:   0f 11 85 e8 f6 ff ff                  	movups xmmword ptr [rbp - 0x918], xmm0
0x82c3:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x82c5:   c7 85 88 f1 ff ff ff ff ff ff         	mov dword ptr [rbp - 0xe78], 0xffffffff
0x82cf:   4d 85 e4                              	test r12, r12
0x82d2:   0f 84 56 06 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x82d8:   4d 8b 4c 24 10                        	mov r9, qword ptr [r12 + 0x10]
0x82dd:   4d 85 c9                              	test r9, r9
0x82e0:   0f 84 48 06 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x82e6:   4d 8b 54 24 18                        	mov r10, qword ptr [r12 + 0x18]
0x82eb:   4d 85 d2                              	test r10, r10
0x82ee:   0f 84 3a 06 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x82f4:   41 8b 0c 24                           	mov ecx, dword ptr [r12]
0x82f8:   48 89 f3                              	mov rbx, rsi
0x82fb:   83 f9 03                              	cmp ecx, 3
0x82fe:   75 30                                 	jne 0x8330 <.Llzip_decoder_memconfig.part.0+0xa0>
0x8300:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x8305:   f6 40 01 40                           	test byte ptr [rax + 1], 0x40
0x8309:   75 25                                 	jne 0x8330 <.Llzip_decoder_memconfig.part.0+0xa0>
0x830b:   49 83 7c 24 30 00                     	cmp qword ptr [r12 + 0x30], 0
0x8311:   0f 84 17 06 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8317:   49 83 7c 24 20 00                     	cmp qword ptr [r12 + 0x20], 0
0x831d:   0f 84 0b 06 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8323:   66 41 83 7c 24 28 30                  	cmp word ptr [r12 + 0x28], 0x30
0x832a:   0f 85 fe 05 00 00                     	jne 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8330:   48 85 db                              	test rbx, rbx
0x8333:   0f 84 f5 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8339:   4c 8b 73 08                           	mov r14, qword ptr [rbx + 8]
0x833d:   4d 85 f6                              	test r14, r14
0x8340:   0f 84 e8 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8346:   48 8b 7b 10                           	mov rdi, qword ptr [rbx + 0x10]
0x834a:   48 85 ff                              	test rdi, rdi
0x834d:   0f 84 db 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8353:   48 83 7f 40 00                        	cmp qword ptr [rdi + 0x40], 0
0x8358:   0f 84 d0 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x835e:   48 83 7f 50 00                        	cmp qword ptr [rdi + 0x50], 0
0x8363:   0f 84 c5 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8369:   48 8b 73 20                           	mov rsi, qword ptr [rbx + 0x20]
0x836d:   83 3e 00                              	cmp dword ptr [rsi], 0
0x8370:   75 4b                                 	jne 0x83bd <.Llzip_decoder_memconfig.part.0+0x12d>
0x8372:   85 c9                                 	test ecx, ecx
0x8374:   0f 84 b4 05 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x837a:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x837f:   83 f9 03                              	cmp ecx, 3
0x8382:   75 24                                 	jne 0x83a8 <.Llzip_decoder_memconfig.part.0+0x118>
0x8384:   f6 40 02 20                           	test byte ptr [rax + 2], 0x20
0x8388:   0f 85 a0 05 00 00                     	jne 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x838e:   48 8b 4e 58                           	mov rcx, qword ptr [rsi + 0x58]
0x8392:   ba 16 00 00 00                        	mov edx, 0x16
0x8397:   48 85 c9                              	test rcx, rcx
0x839a:   0f 84 cc 00 00 00                     	je 0x846c <.Llzip_decoder_memconfig.part.0+0x1dc>
0x83a0:   8b 51 f8                              	mov edx, dword ptr [rcx - 8]
0x83a3:   e9 c4 00 00 00                        	jmp 0x846c <.Llzip_decoder_memconfig.part.0+0x1dc>
0x83a8:   48 85 c0                              	test rax, rax
0x83ab:   0f 84 9a 09 00 00                     	je 0x8d4b <.Llzip_decoder_memconfig.part.0+0xabb>
0x83b1:   83 f9 01                              	cmp ecx, 1
0x83b4:   74 41                                 	je 0x83f7 <.Llzip_decoder_memconfig.part.0+0x167>
0x83b6:   83 f9 02                              	cmp ecx, 2
0x83b9:   75 1a                                 	jne 0x83d5 <.Llzip_decoder_memconfig.part.0+0x145>
0x83bb:   eb 52                                 	jmp 0x840f <.Llzip_decoder_memconfig.part.0+0x17f>
0x83bd:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x83c2:   48 85 c0                              	test rax, rax
0x83c5:   74 76                                 	je 0x843d <.Llzip_decoder_memconfig.part.0+0x1ad>
0x83c7:   83 f9 01                              	cmp ecx, 1
0x83ca:   74 2b                                 	je 0x83f7 <.Llzip_decoder_memconfig.part.0+0x167>
0x83cc:   83 f9 02                              	cmp ecx, 2
0x83cf:   74 3e                                 	je 0x840f <.Llzip_decoder_memconfig.part.0+0x17f>
0x83d1:   85 c9                                 	test ecx, ecx
0x83d3:   74 18                                 	je 0x83ed <.Llzip_decoder_memconfig.part.0+0x15d>
0x83d5:   4c 8b 5e 58                           	mov r11, qword ptr [rsi + 0x58]
0x83d9:   ba 16 00 00 00                        	mov edx, 0x16
0x83de:   4d 85 db                              	test r11, r11
0x83e1:   0f 84 80 00 00 00                     	je 0x8467 <.Llzip_decoder_memconfig.part.0+0x1d7>
0x83e7:   41 8b 53 f8                           	mov edx, dword ptr [r11 - 8]
0x83eb:   eb 7a                                 	jmp 0x8467 <.Llzip_decoder_memconfig.part.0+0x1d7>
0x83ed:   8a 50 02                              	mov dl, byte ptr [rax + 2]
0x83f0:   80 e2 3f                              	and dl, 0x3f
0x83f3:   74 35                                 	je 0x842a <.Llzip_decoder_memconfig.part.0+0x19a>
0x83f5:   eb 51                                 	jmp 0x8448 <.Llzip_decoder_memconfig.part.0+0x1b8>
0x83f7:   0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x83fb:   85 d2                                 	test edx, edx
0x83fd:   75 60                                 	jne 0x845f <.Llzip_decoder_memconfig.part.0+0x1cf>
0x83ff:   48 8b 56 58                           	mov rdx, qword ptr [rsi + 0x58]
0x8403:   48 85 d2                              	test rdx, rdx
0x8406:   75 30                                 	jne 0x8438 <.Llzip_decoder_memconfig.part.0+0x1a8>
0x8408:   ba 16 00 00 00                        	mov edx, 0x16
0x840d:   eb 50                                 	jmp 0x845f <.Llzip_decoder_memconfig.part.0+0x1cf>
0x840f:   0f b6 50 02                           	movzx edx, byte ptr [rax + 2]
0x8413:   85 d2                                 	test edx, edx
0x8415:   75 68                                 	jne 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x8417:   48 8b 4e 58                           	mov rcx, qword ptr [rsi + 0x58]
0x841b:   ba 16 00 00 00                        	mov edx, 0x16
0x8420:   48 85 c9                              	test rcx, rcx
0x8423:   74 5a                                 	je 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x8425:   8b 51 f8                              	mov edx, dword ptr [rcx - 8]
0x8428:   eb 55                                 	jmp 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x842a:   48 8b 56 58                           	mov rdx, qword ptr [rsi + 0x58]
0x842e:   48 85 d2                              	test rdx, rdx
0x8431:   74 1c                                 	je 0x844f <.Llzip_decoder_memconfig.part.0+0x1bf>
0x8433:   8b 52 f8                              	mov edx, dword ptr [rdx - 8]
0x8436:   eb 1c                                 	jmp 0x8454 <.Llzip_decoder_memconfig.part.0+0x1c4>
0x8438:   8b 52 f8                              	mov edx, dword ptr [rdx - 8]
0x843b:   eb 22                                 	jmp 0x845f <.Llzip_decoder_memconfig.part.0+0x1cf>
0x843d:   ba 16 00 00 00                        	mov edx, 0x16
0x8442:   85 c9                                 	test ecx, ecx
0x8444:   74 0e                                 	je 0x8454 <.Llzip_decoder_memconfig.part.0+0x1c4>
0x8446:   eb 12                                 	jmp 0x845a <.Llzip_decoder_memconfig.part.0+0x1ca>
0x8448:   0f b6 d2                              	movzx edx, dl
0x844b:   01 d2                                 	add edx, edx
0x844d:   eb 05                                 	jmp 0x8454 <.Llzip_decoder_memconfig.part.0+0x1c4>
0x844f:   ba 16 00 00 00                        	mov edx, 0x16
0x8454:   80 78 01 00                           	cmp byte ptr [rax + 1], 0
0x8458:   eb 16                                 	jmp 0x8470 <.Llzip_decoder_memconfig.part.0+0x1e0>
0x845a:   83 f9 01                              	cmp ecx, 1
0x845d:   75 08                                 	jne 0x8467 <.Llzip_decoder_memconfig.part.0+0x1d7>
0x845f:   f6 40 01 01                           	test byte ptr [rax + 1], 1
0x8463:   74 0d                                 	je 0x8472 <.Llzip_decoder_memconfig.part.0+0x1e2>
0x8465:   eb 18                                 	jmp 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x8467:   83 f9 03                              	cmp ecx, 3
0x846a:   75 13                                 	jne 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x846c:   80 78 03 00                           	cmp byte ptr [rax + 3], 0
0x8470:   78 0d                                 	js 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x8472:   48 8b 8e c8 00 00 00                  	mov rcx, qword ptr [rsi + 0xc8]
0x8479:   c7 01 03 00 00 00                     	mov dword ptr [rcx], 3
0x847f:   41 8b 0c 24                           	mov ecx, dword ptr [r12]
0x8483:   83 f9 01                              	cmp ecx, 1
0x8486:   0f 86 9b 00 00 00                     	jbe 0x8527 <.Llzip_decoder_memconfig.part.0+0x297>
0x848c:   83 f9 03                              	cmp ecx, 3
0x848f:   0f 84 92 00 00 00                     	je 0x8527 <.Llzip_decoder_memconfig.part.0+0x297>
0x8495:   31 c0                                 	xor eax, eax
0x8497:   48 8d bd e8 f4 ff ff                  	lea rdi, [rbp - 0xb18]
0x849e:   0f 57 c0                              	xorps xmm0, xmm0
0x84a1:   4c 8b 5b 38                           	mov r11, qword ptr [rbx + 0x38]
0x84a5:   b9 69 00 00 00                        	mov ecx, 0x69
0x84aa:   0f 11 85 c8 f2 ff ff                  	movups xmmword ptr [rbp - 0xd38], xmm0
0x84b1:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x84b3:   48 8d bd c8 f3 ff ff                  	lea rdi, [rbp - 0xc38]
0x84ba:   b9 47 00 00 00                        	mov ecx, 0x47 ; ":\n"
0x84bf:   c6 85 87 f1 ff ff 01                  	mov byte ptr [rbp - 0xe79], 1
0x84c6:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x84c8:   31 ff                                 	xor edi, edi
0x84ca:   b9 3c 00 00 00                        	mov ecx, 0x3c
0x84cf:   4d 85 db                              	test r11, r11
0x84d2:   89 bd 8c f1 ff ff                     	mov dword ptr [rbp - 0xe74], edi
0x84d8:   48 8d bd d8 f1 ff ff                  	lea rdi, [rbp - 0xe28]
0x84df:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x84e1:   48 8d bd d8 f2 ff ff                  	lea rdi, [rbp - 0xd28]
0x84e8:   b9 3c 00 00 00                        	mov ecx, 0x3c
0x84ed:   0f 11 85 a8 f1 ff ff                  	movups xmmword ptr [rbp - 0xe58], xmm0
0x84f4:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x84f6:   48 8d 85 e8 f4 ff ff                  	lea rax, [rbp - 0xb18]
0x84fd:   0f 11 85 b8 f1 ff ff                  	movups xmmword ptr [rbp - 0xe48], xmm0
0x8504:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x850b:   48 8d 85 c8 f3 ff ff                  	lea rax, [rbp - 0xc38]
0x8512:   48 89 85 60 f1 ff ff                  	mov qword ptr [rbp - 0xea0], rax
0x8519:   0f 11 85 c8 f1 ff ff                  	movups xmmword ptr [rbp - 0xe38], xmm0
0x8520:   75 3c                                 	jne 0x855e <.Llzip_decoder_memconfig.part.0+0x2ce>
0x8522:   e9 07 04 00 00                        	jmp 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8527:   f6 00 40                              	test byte ptr [rax], 0x40
0x852a:   74 14                                 	je 0x8540 <.Llzip_decoder_memconfig.part.0+0x2b0>
0x852c:   48 8b 8e c0 00 00 00                  	mov rcx, qword ptr [rsi + 0xc0]
0x8533:   48 85 c9                              	test rcx, rcx
0x8536:   0f 84 f2 03 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x853c:   31 f6                                 	xor esi, esi
0x853e:   89 31                                 	mov dword ptr [rcx], esi
0x8540:   41 83 3c 24 03                        	cmp dword ptr [r12], 3
0x8545:   0f 85 4a ff ff ff                     	jne 0x8495 <.Llzip_decoder_memconfig.part.0+0x205>
0x854b:   8a 40 01                              	mov al, byte ptr [rax + 1]
0x854e:   83 e0 c0                              	and eax, 0xffffffc0
0x8551:   3c c0                                 	cmp al, 0xc0
0x8553:   0f 85 7f 01 00 00                     	jne 0x86d8 <.Llzip_decoder_memconfig.part.0+0x448>
0x8559:   e9 37 ff ff ff                        	jmp 0x8495 <.Llzip_decoder_memconfig.part.0+0x205>
0x855e:   48 83 7b 40 00                        	cmp qword ptr [rbx + 0x40], 0
0x8563:   0f 84 c5 03 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8569:   49 8d be d0 00 00 00                  	lea rdi, [r14 + 0xd0]
0x8570:   be 09 00 00 00                        	mov esi, 9
0x8575:   e8 16 ec ff ff                        	call 0x7190 <function_7190>
0x857a:   85 c0                                 	test eax, eax
0x857c:   0f 85 ac 03 00 00                     	jne 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8582:   48 8d 8d e8 f6 ff ff                  	lea rcx, [rbp - 0x918]
0x8589:   45 31 ff                              	xor r15d, r15d
0x858c:   45 31 ed                              	xor r13d, r13d
0x858f:   88 95 ec f4 ff ff                     	mov byte ptr [rbp - 0xb14], dl
0x8595:   48 89 8d 68 f1 ff ff                  	mov qword ptr [rbp - 0xe98], rcx
0x859c:   48 8b bd 68 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe98]
0x85a3:   b9 3a 02 00 00                        	mov ecx, 0x23a
0x85a8:   48 8d b5 c8 f1 ff ff                  	lea rsi, [rbp - 0xe38]
0x85af:   c7 85 ed f4 ff ff 00 00 00 02         	mov dword ptr [rbp - 0xb13], 0x2000000
0x85b9:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x85bb:   48 8d bd 4d f5 ff ff                  	lea rdi, [rbp - 0xab3]
0x85c2:   c7 85 fd f4 ff ff 00 00 00 1c         	mov dword ptr [rbp - 0xb03], 0x1c000000
0x85cc:   b9 40 00 00 00                        	mov ecx, 0x40
0x85d1:   4c 89 95 98 f1 ff ff                  	mov qword ptr [rbp - 0xe68], r10
0x85d8:   41 0f 10 0b                           	movups xmm1, xmmword ptr [r11]
0x85dc:   c6 85 c8 f1 ff ff 80                  	mov byte ptr [rbp - 0xe38], 0x80
0x85e3:   4c 89 8d a0 f1 ff ff                  	mov qword ptr [rbp - 0xe60], r9
0x85ea:   0f 11 8d 01 f5 ff ff                  	movups xmmword ptr [rbp - 0xaff], xmm1
0x85f1:   41 0f 10 53 0c                        	movups xmm2, xmmword ptr [r11 + 0xc]
0x85f6:   c7 85 1d f5 ff ff 00 00 00 20         	mov dword ptr [rbp - 0xae3], 0x20000000
0x8600:   c6 85 be f2 ff ff 08                  	mov byte ptr [rbp - 0xd42], 8
0x8607:   c6 85 c7 f2 ff ff 01                  	mov byte ptr [rbp - 0xd39], 1
0x860e:   c7 85 41 f5 ff ff 00 00 00 03         	mov dword ptr [rbp - 0xabf], 0x3000000
0x8618:   c6 85 45 f5 ff ff 01                  	mov byte ptr [rbp - 0xabb], 1
0x861f:   c6 85 47 f5 ff ff 01                  	mov byte ptr [rbp - 0xab9], 1
0x8626:   c7 85 48 f5 ff ff 00 00 01 01         	mov dword ptr [rbp - 0xab8], 0x1010000
0x8630:   0f 11 95 0d f5 ff ff                  	movups xmmword ptr [rbp - 0xaf3], xmm2
0x8637:   f3 a5                                 	rep movsd dword ptr [rdi], dword ptr [rsi]
0x8639:   be 28 06 00 00                        	mov esi, 0x628
0x863e:   c7 85 55 f6 ff ff 00 00 00 01         	mov dword ptr [rbp - 0x9ab], 0x1000000
0x8648:   c7 85 81 f6 ff ff 00 00 00 07         	mov dword ptr [rbp - 0x97f], 0x7000000
0x8652:   41 8b 03                              	mov eax, dword ptr [r11]
0x8655:   89 85 85 f6 ff ff                     	mov dword ptr [rbp - 0x97b], eax
0x865b:   41 8b 43 03                           	mov eax, dword ptr [r11 + 3]
0x865f:   89 85 88 f6 ff ff                     	mov dword ptr [rbp - 0x978], eax
0x8665:   48 8d 85 90 f1 ff ff                  	lea rax, [rbp - 0xe70]
0x866c:   48 89 85 78 f1 ff ff                  	mov qword ptr [rbp - 0xe88], rax
0x8673:   31 c9                                 	xor ecx, ecx
0x8675:   48 8b 95 78 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe88]
0x867c:   4d 89 f0                              	mov r8, r14
0x867f:   4a 8d bc 2d 8c f8 ff ff               	lea rdi, [rbp + r13 - 0x774]
0x8687:   48 89 8d 90 f1 ff ff                  	mov qword ptr [rbp - 0xe70], rcx
0x868e:   4a 8b 8c fd 98 f1 ff ff               	mov rcx, qword ptr [rbp + r15*8 - 0xe68]
0x8696:   48 89 b5 58 f1 ff ff                  	mov qword ptr [rbp - 0xea8], rsi
0x869d:   e8 9e ec ff ff                        	call 0x7340 <function_7340>
0x86a2:   85 c0                                 	test eax, eax
0x86a4:   0f 84 84 02 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x86aa:   48 8b 85 90 f1 ff ff                  	mov rax, qword ptr [rbp - 0xe70]
0x86b1:   48 8b b5 58 f1 ff ff                  	mov rsi, qword ptr [rbp - 0xea8]
0x86b8:   48 39 c6                              	cmp rsi, rax
0x86bb:   0f 82 6d 02 00 00                     	jb 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x86c1:   49 01 c5                              	add r13, rax
0x86c4:   48 29 c6                              	sub rsi, rax
0x86c7:   4d 85 ff                              	test r15, r15
0x86ca:   0f 85 17 04 00 00                     	jne 0x8ae7 <.Llzip_decoder_memconfig.part.0+0x857>
0x86d0:   41 bf 01 00 00 00                     	mov r15d, 1
0x86d6:   eb 9b                                 	jmp 0x8673 <.Llzip_decoder_memconfig.part.0+0x3e3>
0x86d8:   3c 40                                 	cmp al, 0x40
0x86da:   75 16                                 	jne 0x86f2 <.Llzip_decoder_memconfig.part.0+0x462>
0x86dc:   48 8b 47 18                           	mov rax, qword ptr [rdi + 0x18]
0x86e0:   48 85 c0                              	test rax, rax
0x86e3:   0f 84 45 02 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x86e9:   31 ff                                 	xor edi, edi
0x86eb:   ff d0                                 	call rax
0x86ed:   e9 3c 02 00 00                        	jmp 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x86f2:   66 41 83 7c 24 28 2f                  	cmp word ptr [r12 + 0x28], 0x2f
0x86f9:   0f 86 2f 02 00 00                     	jbe 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x86ff:   4d 8b 7c 24 20                        	mov r15, qword ptr [r12 + 0x20]
0x8704:   49 8b 07                              	mov rax, qword ptr [r15]
0x8707:   4d 8b 77 08                           	mov r14, qword ptr [r15 + 8]
0x870b:   48 89 85 58 f1 ff ff                  	mov qword ptr [rbp - 0xea8], rax
0x8712:   49 8d 46 ef                           	lea rax, [r14 - 0x11]
0x8716:   48 3d ef 3f 00 00                     	cmp rax, 0x3fef
0x871c:   0f 87 0c 02 00 00                     	ja 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8722:   48 8b 57 68                           	mov rdx, qword ptr [rdi + 0x68]
0x8726:   48 8d 45 08                           	lea rax, [rbp + 8]
0x872a:   48 83 e0 f8                           	and rax, 0xfffffffffffffff8
0x872e:   48 89 95 68 f1 ff ff                  	mov qword ptr [rbp - 0xe98], rdx
0x8735:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x873c:   48 8b 95 68 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe98]
0x8743:   48 39 95 70 f1 ff ff                  	cmp qword ptr [rbp - 0xe90], rdx
0x874a:   0f 83 de 01 00 00                     	jae 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8750:   48 8b 85 70 f1 ff ff                  	mov rax, qword ptr [rbp - 0xe90]
0x8757:   4c 8b 28                              	mov r13, qword ptr [rax]
0x875a:   49 81 fd ff ff ff 00                  	cmp r13, 0xffffff
0x8761:   77 0a                                 	ja 0x876d <.Llzip_decoder_memconfig.part.0+0x4dd>
0x8763:   48 83 85 70 f1 ff ff 08               	add qword ptr [rbp - 0xe90], 8
0x876b:   eb cf                                 	jmp 0x873c <.Llzip_decoder_memconfig.part.0+0x4ac>
0x876d:   b8 01 40 00 00                        	mov eax, 0x4001
0x8772:   48 89 da                              	mov rdx, rbx
0x8775:   4c 89 ef                              	mov rdi, r13
0x8778:   4c 29 f0                              	sub rax, r14
0x877b:   48 89 c6                              	mov rsi, rax
0x877e:   48 89 85 78 f1 ff ff                  	mov qword ptr [rbp - 0xe88], rax
0x8785:   e8 c6 9b ff ff                        	call 0x2350 <.Lhc_find_func.1>
0x878a:   85 c0                                 	test eax, eax
0x878c:   74 d5                                 	je 0x8763 <.Llzip_decoder_memconfig.part.0+0x4d3>
0x878e:   48 8b 85 78 f1 ff ff                  	mov rax, qword ptr [rbp - 0xe88]
0x8795:   4c 01 e8                              	add rax, r13
0x8798:   48 89 85 60 f1 ff ff                  	mov qword ptr [rbp - 0xea0], rax
0x879f:   48 8d 85 e8 f4 ff ff                  	lea rax, [rbp - 0xb18]
0x87a6:   48 89 85 78 f1 ff ff                  	mov qword ptr [rbp - 0xe88], rax
0x87ad:   48 8b 85 60 f1 ff ff                  	mov rax, qword ptr [rbp - 0xea0]
0x87b4:   49 39 c5                              	cmp r13, rax
0x87b7:   73 aa                                 	jae 0x8763 <.Llzip_decoder_memconfig.part.0+0x4d3>
0x87b9:   0f 57 c0                              	xorps xmm0, xmm0
0x87bc:   48 8b 85 58 f1 ff ff                  	mov rax, qword ptr [rbp - 0xea8]
0x87c3:   0f 11 85 e8 f4 ff ff                  	movups xmmword ptr [rbp - 0xb18], xmm0
0x87ca:   0f 11 85 f8 f4 ff ff                  	movups xmmword ptr [rbp - 0xb08], xmm0
0x87d1:   49 39 45 00                           	cmp qword ptr [r13], rax
0x87d5:   75 6c                                 	jne 0x8843 <.Llzip_decoder_memconfig.part.0+0x5b3>
0x87d7:   4c 8b 43 08                           	mov r8, qword ptr [rbx + 8]
0x87db:   b9 20 00 00 00                        	mov ecx, 0x20
0x87e0:   4c 89 f6                              	mov rsi, r14
0x87e3:   4c 89 ef                              	mov rdi, r13
0x87e6:   48 8b 95 78 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe88]
0x87ed:   e8 de ea ff ff                        	call 0x72d0 <function_72d0>
0x87f2:   85 c0                                 	test eax, eax
0x87f4:   74 4d                                 	je 0x8843 <.Llzip_decoder_memconfig.part.0+0x5b3>
0x87f6:   31 c0                                 	xor eax, eax
0x87f8:   48 8b 95 78 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe88]
0x87ff:   41 8a 4c 07 10                        	mov cl, byte ptr [r15 + rax + 0x10]
0x8804:   38 0c 02                              	cmp byte ptr [rdx + rax], cl
0x8807:   7f 3a                                 	jg 0x8843 <.Llzip_decoder_memconfig.part.0+0x5b3>
0x8809:   7c 38                                 	jl 0x8843 <.Llzip_decoder_memconfig.part.0+0x5b3>
0x880b:   48 ff c0                              	inc rax
0x880e:   48 83 f8 20                           	cmp rax, 0x20
0x8812:   75 e4                                 	jne 0x87f8 <.Llzip_decoder_memconfig.part.0+0x568>
0x8814:   31 c0                                 	xor eax, eax
0x8816:   0f 57 c0                              	xorps xmm0, xmm0
0x8819:   48 8d bd f8 f4 ff ff                  	lea rdi, [rbp - 0xb08]
0x8820:   48 89 de                              	mov rsi, rbx
0x8823:   b9 29 00 00 00                        	mov ecx, 0x29
0x8828:   0f 11 85 e8 f4 ff ff                  	movups xmmword ptr [rbp - 0xb18], xmm0
0x882f:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x8831:   48 89 d7                              	mov rdi, rdx
0x8834:   e8 b7 f9 ff ff                        	call 0x81f0 <.Lparse_lzma12.0>
0x8839:   85 c0                                 	test eax, eax
0x883b:   0f 84 ed 00 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8841:   eb 08                                 	jmp 0x884b <.Llzip_decoder_memconfig.part.0+0x5bb>
0x8843:   49 ff c5                              	inc r13
0x8846:   e9 62 ff ff ff                        	jmp 0x87ad <.Llzip_decoder_memconfig.part.0+0x51d>
0x884b:   49 8d 46 f0                           	lea rax, [r14 - 0x10]
0x884f:   4c 8b 4b 08                           	mov r9, qword ptr [rbx + 8]
0x8853:   4d 8d 75 10                           	lea r14, [r13 + 0x10]
0x8857:   4c 89 e9                              	mov rcx, r13
0x885a:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x8861:   48 8b 95 78 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe88]
0x8868:   4d 89 f0                              	mov r8, r14
0x886b:   4c 89 f7                              	mov rdi, r14
0x886e:   8b b5 70 f1 ff ff                     	mov esi, dword ptr [rbp - 0xe90]
0x8874:   e8 37 e9 ff ff                        	call 0x71b0 <function_71b0>
0x8879:   85 c0                                 	test eax, eax
0x887b:   0f 84 ad 00 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8881:   49 8b 44 24 08                        	mov rax, qword ptr [r12 + 8]
0x8886:   41 8b 14 24                           	mov edx, dword ptr [r12]
0x888a:   48 85 c0                              	test rax, rax
0x888d:   0f 84 9b 00 00 00                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8893:   f6 00 20                              	test byte ptr [rax], 0x20
0x8896:   48 8d bd 88 f1 ff ff                  	lea rdi, [rbp - 0xe78]
0x889d:   74 47                                 	je 0x88e6 <.Llzip_decoder_memconfig.part.0+0x656>
0x889f:   83 fa 02                              	cmp edx, 2
0x88a2:   74 2c                                 	je 0x88d0 <.Llzip_decoder_memconfig.part.0+0x640>
0x88a4:   77 11                                 	ja 0x88b7 <.Llzip_decoder_memconfig.part.0+0x627>
0x88a6:   85 d2                                 	test edx, edx
0x88a8:   40 8a 70 01                           	mov sil, byte ptr [rax + 1]
0x88ac:   75 1c                                 	jne 0x88ca <.Llzip_decoder_memconfig.part.0+0x63a>
0x88ae:   40 c0 ee 03                           	shr sil, 3
0x88b2:   83 e6 0f                              	and esi, 0xf
0x88b5:   eb 24                                 	jmp 0x88db <.Llzip_decoder_memconfig.part.0+0x64b>
0x88b7:   be 01 00 00 00                        	mov esi, 1
0x88bc:   83 fa 03                              	cmp edx, 3
0x88bf:   75 1a                                 	jne 0x88db <.Llzip_decoder_memconfig.part.0+0x64b>
0x88c1:   40 8a 70 02                           	mov sil, byte ptr [rax + 2]
0x88c5:   83 e6 1f                              	and esi, 0x1f
0x88c8:   eb 11                                 	jmp 0x88db <.Llzip_decoder_memconfig.part.0+0x64b>
0x88ca:   40 c0 ee 02                           	shr sil, 2
0x88ce:   eb 07                                 	jmp 0x88d7 <.Llzip_decoder_memconfig.part.0+0x647>
0x88d0:   40 8a 70 01                           	mov sil, byte ptr [rax + 1]
0x88d4:   40 d0 ee                              	shr sil, 1
0x88d7:   40 0f b6 f6                           	movzx esi, sil
0x88db:   48 8b 53 10                           	mov rdx, qword ptr [rbx + 0x10]
0x88df:   e8 fc f2 ff ff                        	call 0x7be0 <.Lindex_decode.1>
0x88e4:   eb 12                                 	jmp 0x88f8 <.Llzip_decoder_memconfig.part.0+0x668>
0x88e6:   48 89 fe                              	mov rsi, rdi
0x88e9:   31 c9                                 	xor ecx, ecx
0x88eb:   ba 01 00 00 00                        	mov edx, 1
0x88f0:   48 89 df                              	mov rdi, rbx
0x88f3:   e8 88 f3 ff ff                        	call 0x7c80 <.Lindex_encode.1>
0x88f8:   85 c0                                 	test eax, eax
0x88fa:   74 32                                 	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x88fc:   8b 85 88 f1 ff ff                     	mov eax, dword ptr [rbp - 0xe78]
0x8902:   48 8d bd c8 f3 ff ff                  	lea rdi, [rbp - 0xc38]
0x8909:   b9 12 00 00 00                        	mov ecx, 0x12
0x890e:   4d 8b 6c 24 08                        	mov r13, qword ptr [r12 + 8]
0x8913:   45 8b 3c 24                           	mov r15d, dword ptr [r12]
0x8917:   4c 8b 63 10                           	mov r12, qword ptr [rbx + 0x10]
0x891b:   89 85 78 f1 ff ff                     	mov dword ptr [rbp - 0xe88], eax
0x8921:   31 c0                                 	xor eax, eax
0x8923:   83 bd 78 f1 ff ff 00                  	cmp dword ptr [rbp - 0xe88], 0
0x892a:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x892c:   79 07                                 	jns 0x8935 <.Llzip_decoder_memconfig.part.0+0x6a5>
0x892e:   31 c0                                 	xor eax, eax
0x8930:   e9 28 04 00 00                        	jmp 0x8d5d <.Llzip_decoder_memconfig.part.0+0xacd>
0x8935:   4d 85 ed                              	test r13, r13
0x8938:   74 f4                                 	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x893a:   4d 85 e4                              	test r12, r12
0x893d:   74 ef                                 	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x893f:   49 83 7c 24 18 00                     	cmp qword ptr [r12 + 0x18], 0
0x8945:   74 e7                                 	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8947:   45 85 ff                              	test r15d, r15d
0x894a:   74 0d                                 	je 0x8959 <.Llzip_decoder_memconfig.part.0+0x6c9>
0x894c:   41 83 ff 03                           	cmp r15d, 3
0x8950:   75 24                                 	jne 0x8976 <.Llzip_decoder_memconfig.part.0+0x6e6>
0x8952:   41 f6 45 02 20                        	test byte ptr [r13 + 2], 0x20
0x8957:   74 1d                                 	je 0x8976 <.Llzip_decoder_memconfig.part.0+0x6e6>
0x8959:   48 89 de                              	mov rsi, rbx
0x895c:   48 8d bd c8 f3 ff ff                  	lea rdi, [rbp - 0xc38]
0x8963:   e8 d8 f0 ff ff                        	call 0x7a40 <.Lthreads_stop.0>
0x8968:   85 c0                                 	test eax, eax
0x896a:   74 c2                                 	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x896c:   41 8a 45 00                           	mov al, byte ptr [r13]
0x8970:   83 e0 01                              	and eax, 1
0x8973:   89 43 50                              	mov dword ptr [rbx + 0x50], eax
0x8976:   48 8b 95 70 f1 ff ff                  	mov rdx, qword ptr [rbp - 0xe90]
0x897d:   8b bd 78 f1 ff ff                     	mov edi, dword ptr [rbp - 0xe88]
0x8983:   4c 89 e1                              	mov rcx, r12
0x8986:   4c 89 f6                              	mov rsi, r14
0x8989:   e8 82 e7 ff ff                        	call 0x7110 <function_7110>
0x898e:   48 85 c0                              	test rax, rax
0x8991:   78 9b                                 	js 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8993:   45 85 ff                              	test r15d, r15d
0x8996:   74 3d                                 	je 0x89d5 <.Llzip_decoder_memconfig.part.0+0x745>
0x8998:   41 83 ff 03                           	cmp r15d, 3
0x899c:   74 30                                 	je 0x89ce <.Llzip_decoder_memconfig.part.0+0x73e>
0x899e:   8b bd 78 f1 ff ff                     	mov edi, dword ptr [rbp - 0xe88]
0x89a4:   31 c0                                 	xor eax, eax
0x89a6:   4c 89 e1                              	mov rcx, r12
0x89a9:   ba 04 00 00 00                        	mov edx, 4
0x89ae:   48 8d b5 c8 f2 ff ff                  	lea rsi, [rbp - 0xd38]
0x89b5:   89 85 c8 f2 ff ff                     	mov dword ptr [rbp - 0xd38], eax
0x89bb:   e8 e0 e6 ff ff                        	call 0x70a0 <function_70a0>
0x89c0:   48 85 c0                              	test rax, rax
0x89c3:   0f 89 8f 00 00 00                     	jns 0x8a58 <.Llzip_decoder_memconfig.part.0+0x7c8>
0x89c9:   e9 60 ff ff ff                        	jmp 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x89ce:   41 f6 45 02 20                        	test byte ptr [r13 + 2], 0x20
0x89d3:   74 73                                 	je 0x8a48 <.Llzip_decoder_memconfig.part.0+0x7b8>
0x89d5:   48 8b 9d e0 f3 ff ff                  	mov rbx, qword ptr [rbp - 0xc20]
0x89dc:   b8 40 00 00 00                        	mov eax, 0x40
0x89e1:   8b bd 78 f1 ff ff                     	mov edi, dword ptr [rbp - 0xe88]
0x89e7:   48 8d b5 e8 f4 ff ff                  	lea rsi, [rbp - 0xb18]
0x89ee:   4c 89 e1                              	mov rcx, r12
0x89f1:   ba 05 00 00 00                        	mov edx, 5
0x89f6:   c6 85 ec f4 ff ff 00                  	mov byte ptr [rbp - 0xb14], 0
0x89fd:   48 39 c3                              	cmp rbx, rax
0x8a00:   48 0f 47 d8                           	cmova rbx, rax
0x8a04:   8d 43 01                              	lea eax, [rbx + 1]
0x8a07:   0f c8                                 	bswap eax
0x8a09:   89 85 e8 f4 ff ff                     	mov dword ptr [rbp - 0xb18], eax
0x8a0f:   e8 fc e6 ff ff                        	call 0x7110 <function_7110>
0x8a14:   48 85 c0                              	test rax, rax
0x8a17:   0f 88 11 ff ff ff                     	js 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8a1d:   48 8b b5 c8 f3 ff ff                  	mov rsi, qword ptr [rbp - 0xc38]
0x8a24:   8b bd 78 f1 ff ff                     	mov edi, dword ptr [rbp - 0xe88]
0x8a2a:   4c 89 e1                              	mov rcx, r12
0x8a2d:   48 89 da                              	mov rdx, rbx
0x8a30:   e8 db e6 ff ff                        	call 0x7110 <function_7110>
0x8a35:   48 85 c0                              	test rax, rax
0x8a38:   0f 88 f0 fe ff ff                     	js 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8a3e:   41 83 ff 03                           	cmp r15d, 3
0x8a42:   0f 85 56 ff ff ff                     	jne 0x899e <.Llzip_decoder_memconfig.part.0+0x70e>
0x8a48:   41 80 7d 00 00                        	cmp byte ptr [r13], 0
0x8a4d:   0f 89 8a 00 00 00                     	jns 0x8add <.Llzip_decoder_memconfig.part.0+0x84d>
0x8a53:   e9 46 ff ff ff                        	jmp 0x899e <.Llzip_decoder_memconfig.part.0+0x70e>
0x8a58:   8b 9d c8 f2 ff ff                     	mov ebx, dword ptr [rbp - 0xd38]
0x8a5e:   0f cb                                 	bswap ebx
0x8a60:   89 9d c8 f2 ff ff                     	mov dword ptr [rbp - 0xd38], ebx
0x8a66:   89 db                                 	mov ebx, ebx
0x8a68:   48 85 db                              	test rbx, rbx
0x8a6b:   74 58                                 	je 0x8ac5 <.Llzip_decoder_memconfig.part.0+0x835>
0x8a6d:   49 83 7c 24 48 00                     	cmp qword ptr [r12 + 0x48], 0
0x8a73:   0f 84 b5 fe ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8a79:   49 83 7c 24 50 00                     	cmp qword ptr [r12 + 0x50], 0
0x8a7f:   4c 8d ad e8 f4 ff ff                  	lea r13, [rbp - 0xb18]
0x8a86:   0f 84 a2 fe ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8a8c:   ba 00 02 00 00                        	mov edx, 0x200
0x8a91:   8b bd 78 f1 ff ff                     	mov edi, dword ptr [rbp - 0xe88]
0x8a97:   4c 89 ee                              	mov rsi, r13
0x8a9a:   48 39 d3                              	cmp rbx, rdx
0x8a9d:   48 0f 46 d3                           	cmovbe rdx, rbx
0x8aa1:   41 ff 54 24 48                        	call qword ptr [r12 + 0x48]
0x8aa6:   48 85 c0                              	test rax, rax
0x8aa9:   79 0f                                 	jns 0x8aba <.Llzip_decoder_memconfig.part.0+0x82a>
0x8aab:   41 ff 54 24 50                        	call qword ptr [r12 + 0x50]
0x8ab0:   83 38 04                              	cmp dword ptr [rax], 4
0x8ab3:   74 d7                                 	je 0x8a8c <.Llzip_decoder_memconfig.part.0+0x7fc>
0x8ab5:   e9 74 fe ff ff                        	jmp 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8aba:   0f 84 6e fe ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8ac0:   48 29 c3                              	sub rbx, rax
0x8ac3:   75 c7                                 	jne 0x8a8c <.Llzip_decoder_memconfig.part.0+0x7fc>
0x8ac5:   41 83 ff 02                           	cmp r15d, 2
0x8ac9:   75 12                                 	jne 0x8add <.Llzip_decoder_memconfig.part.0+0x84d>
0x8acb:   49 8b 44 24 18                        	mov rax, qword ptr [r12 + 0x18]
0x8ad0:   48 85 c0                              	test rax, rax
0x8ad3:   0f 84 55 fe ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8ad9:   31 ff                                 	xor edi, edi
0x8adb:   ff d0                                 	call rax
0x8add:   b8 01 00 00 00                        	mov eax, 1
0x8ae2:   e9 76 02 00 00                        	jmp 0x8d5d <.Llzip_decoder_memconfig.part.0+0xacd>
0x8ae7:   49 81 fd 28 06 00 00                  	cmp r13, 0x628
0x8aee:   0f 87 3a fe ff ff                     	ja 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8af4:   41 8d 45 0b                           	lea eax, [r13 + 0xb]
0x8af8:   48 8b bd 68 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe98]
0x8aff:   b9 69 00 00 00                        	mov ecx, 0x69
0x8b04:   48 8b b5 70 f1 ff ff                  	mov rsi, qword ptr [rbp - 0xe90]
0x8b0b:   0f c8                                 	bswap eax
0x8b0d:   89 85 7d f6 ff ff                     	mov dword ptr [rbp - 0x983], eax
0x8b13:   41 8d 85 a7 02 00 00                  	lea eax, [r13 + 0x2a7]
0x8b1a:   0f c8                                 	bswap eax
0x8b1c:   89 85 f9 f4 ff ff                     	mov dword ptr [rbp - 0xb07], eax
0x8b22:   41 8d 85 bc 02 00 00                  	lea eax, [r13 + 0x2bc]
0x8b29:   0f c8                                 	bswap eax
0x8b2b:   89 85 e8 f4 ff ff                     	mov dword ptr [rbp - 0xb18], eax
0x8b31:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8b35:   f3 a5                                 	rep movsd dword ptr [rdi], dword ptr [rsi]
0x8b37:   ff 90 d0 00 00 00                     	call qword ptr [rax + 0xd0]
0x8b3d:   48 89 85 78 f1 ff ff                  	mov qword ptr [rbp - 0xe88], rax
0x8b44:   48 85 c0                              	test rax, rax
0x8b47:   0f 84 e1 fd ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8b4d:   48 8d 85 87 f1 ff ff                  	lea rax, [rbp - 0xe79]
0x8b54:   31 d2                                 	xor edx, edx
0x8b56:   be 01 00 00 00                        	mov esi, 1
0x8b5b:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x8b62:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8b66:   48 8b bd 70 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe90]
0x8b6d:   ff 90 e0 00 00 00                     	call qword ptr [rax + 0xe0]
0x8b73:   49 89 c6                              	mov r14, rax
0x8b76:   48 85 c0                              	test rax, rax
0x8b79:   0f 84 64 01 00 00                     	je 0x8ce3 <.Llzip_decoder_memconfig.part.0+0xa53>
0x8b7f:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8b83:   31 d2                                 	xor edx, edx
0x8b85:   be 00 01 00 00                        	mov esi, 0x100
0x8b8a:   48 8d bd c8 f1 ff ff                  	lea rdi, [rbp - 0xe38]
0x8b91:   ff 90 e0 00 00 00                     	call qword ptr [rax + 0xe0]
0x8b97:   31 d2                                 	xor edx, edx
0x8b99:   be 01 00 00 00                        	mov esi, 1
0x8b9e:   48 8b bd 70 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe90]
0x8ba5:   49 89 c7                              	mov r15, rax
0x8ba8:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8bac:   ff 90 e0 00 00 00                     	call qword ptr [rax + 0xe0]
0x8bb2:   48 8b bd 78 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe88]
0x8bb9:   4c 89 f2                              	mov rdx, r14
0x8bbc:   4c 89 fe                              	mov rsi, r15
0x8bbf:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x8bc6:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8bca:   48 8b 8d 70 f1 ff ff                  	mov rcx, qword ptr [rbp - 0xe90]
0x8bd1:   ff 90 e8 00 00 00                     	call qword ptr [rax + 0xe8]
0x8bd7:   ff c8                                 	dec eax
0x8bd9:   0f 85 13 01 00 00                     	jne 0x8cf2 <.Llzip_decoder_memconfig.part.0+0xa62>
0x8bdf:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8be3:   4c 8d b5 a8 f1 ff ff                  	lea r14, [rbp - 0xe58]
0x8bea:   4c 8b b8 f0 00 00 00                  	mov r15, qword ptr [rax + 0xf0]
0x8bf1:   ff 50 58                              	call qword ptr [rax + 0x58]
0x8bf4:   45 31 c9                              	xor r9d, r9d
0x8bf7:   31 c9                                 	xor ecx, ecx
0x8bf9:   49 8d b5 8f 01 00 00                  	lea rsi, [r13 + 0x18f]
0x8c00:   49 89 c0                              	mov r8, rax
0x8c03:   48 8d bd fd f6 ff ff                  	lea rdi, [rbp - 0x903]
0x8c0a:   4c 89 f2                              	mov rdx, r14
0x8c0d:   41 ff d7                              	call r15
0x8c10:   ff c8                                 	dec eax
0x8c12:   0f 85 cb 00 00 00                     	jne 0x8ce3 <.Llzip_decoder_memconfig.part.0+0xa53>
0x8c18:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8c1c:   ba 20 00 00 00                        	mov edx, 0x20
0x8c21:   4c 89 f6                              	mov rsi, r14
0x8c24:   4c 8d bd c8 f2 ff ff                  	lea r15, [rbp - 0xd38]
0x8c2b:   4c 8b 8d 78 f1 ff ff                  	mov r9, qword ptr [rbp - 0xe88]
0x8c32:   4c 8d 85 8c f1 ff ff                  	lea r8, [rbp - 0xe74]
0x8c39:   4c 89 f9                              	mov rcx, r15
0x8c3c:   bf a0 02 00 00                        	mov edi, 0x2a0
0x8c41:   ff 90 f8 00 00 00                     	call qword ptr [rax + 0xf8]
0x8c47:   ff c8                                 	dec eax
0x8c49:   0f 85 94 00 00 00                     	jne 0x8ce3 <.Llzip_decoder_memconfig.part.0+0xa53>
0x8c4f:   81 bd 8c f1 ff ff 00 01 00 00         	cmp dword ptr [rbp - 0xe74], 0x100
0x8c59:   0f 85 84 00 00 00                     	jne 0x8ce3 <.Llzip_decoder_memconfig.part.0+0xa53>
0x8c5f:   48 8d bd e0 f3 ff ff                  	lea rdi, [rbp - 0xc20]
0x8c66:   b9 40 00 00 00                        	mov ecx, 0x40
0x8c6b:   4c 89 fe                              	mov rsi, r15
0x8c6e:   48 b8 00 00 01 14 00 00 00 0c         	movabs rax, 0xc00000014010000
0x8c78:   48 89 85 c8 f3 ff ff                  	mov qword ptr [rbp - 0xc38], rax
0x8c7f:   48 8b 43 40                           	mov rax, qword ptr [rbx + 0x40]
0x8c83:   c7 85 dc f3 ff ff 00 00 01 00         	mov dword ptr [rbp - 0xc24], 0x10000
0x8c8d:   48 8b 10                              	mov rdx, qword ptr [rax]
0x8c90:   8b 40 08                              	mov eax, dword ptr [rax + 8]
0x8c93:   48 89 95 d0 f3 ff ff                  	mov qword ptr [rbp - 0xc30], rdx
0x8c9a:   89 85 d8 f3 ff ff                     	mov dword ptr [rbp - 0xc28], eax
0x8ca0:   49 8d 85 c0 02 00 00                  	lea rax, [r13 + 0x2c0]
0x8ca7:   f3 a5                                 	rep movsd dword ptr [rdi], dword ptr [rsi]
0x8ca9:   48 89 85 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rax
0x8cb0:   b9 47 00 00 00                        	mov ecx, 0x47 ; ":\n"
0x8cb5:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8cb9:   48 8b b5 60 f1 ff ff                  	mov rsi, qword ptr [rbp - 0xea0]
0x8cc0:   4a 8d bc 2d 8c f8 ff ff               	lea rdi, [rbp + r13 - 0x774]
0x8cc8:   f3 a5                                 	rep movsd dword ptr [rdi], dword ptr [rsi]
0x8cca:   48 8b bd 78 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe88]
0x8cd1:   ff 90 08 01 00 00                     	call qword ptr [rax + 0x108]
0x8cd7:   4c 8b b5 68 f1 ff ff                  	mov r14, qword ptr [rbp - 0xe98]
0x8cde:   e9 9e fb ff ff                        	jmp 0x8881 <.Llzip_decoder_memconfig.part.0+0x5f1>
0x8ce3:   31 d2                                 	xor edx, edx
0x8ce5:   45 31 ff                              	xor r15d, r15d
0x8ce8:   45 31 f6                              	xor r14d, r14d
0x8ceb:   48 89 95 70 f1 ff ff                  	mov qword ptr [rbp - 0xe90], rdx
0x8cf2:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8cf6:   48 8b bd 78 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe88]
0x8cfd:   ff 90 08 01 00 00                     	call qword ptr [rax + 0x108]
0x8d03:   4d 85 f6                              	test r14, r14
0x8d06:   74 0d                                 	je 0x8d15 <.Llzip_decoder_memconfig.part.0+0xa85>
0x8d08:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8d0c:   4c 89 f7                              	mov rdi, r14
0x8d0f:   ff 90 10 01 00 00                     	call qword ptr [rax + 0x110]
0x8d15:   4d 85 ff                              	test r15, r15
0x8d18:   74 0d                                 	je 0x8d27 <.Llzip_decoder_memconfig.part.0+0xa97>
0x8d1a:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8d1e:   4c 89 ff                              	mov rdi, r15
0x8d21:   ff 90 10 01 00 00                     	call qword ptr [rax + 0x110]
0x8d27:   48 83 bd 70 f1 ff ff 00               	cmp qword ptr [rbp - 0xe90], 0
0x8d2f:   0f 84 f9 fb ff ff                     	je 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8d35:   48 8b 43 08                           	mov rax, qword ptr [rbx + 8]
0x8d39:   48 8b bd 70 f1 ff ff                  	mov rdi, qword ptr [rbp - 0xe90]
0x8d40:   ff 90 10 01 00 00                     	call qword ptr [rax + 0x110]
0x8d46:   e9 e3 fb ff ff                        	jmp 0x892e <.Llzip_decoder_memconfig.part.0+0x69e>
0x8d4b:   ff c9                                 	dec ecx
0x8d4d:   ba 16 00 00 00                        	mov edx, 0x16
0x8d52:   0f 84 07 f7 ff ff                     	je 0x845f <.Llzip_decoder_memconfig.part.0+0x1cf>
0x8d58:   e9 22 f7 ff ff                        	jmp 0x847f <.Llzip_decoder_memconfig.part.0+0x1ef>
0x8d5d:   48 81 c4 88 0e 00 00                  	add rsp, 0xe88
0x8d64:   5b                                    	pop rbx
0x8d65:   41 5c                                 	pop r12
0x8d67:   41 5d                                 	pop r13
0x8d69:   41 5e                                 	pop r14
0x8d6b:   41 5f                                 	pop r15
0x8d6d:   5d                                    	pop rbp
0x8d6e:   c3                                    	ret 
; section: .text.decode_buffez
; function: .Ldecode_buffer.part.0 at 0x8d70 -- 0x8eb7
0x8d70:   f3 0f 1e fa                           	endbr64 
0x8d74:   41 57                                 	push r15
0x8d76:   0f 57 c0                              	xorps xmm0, xmm0
0x8d79:   b9 29 00 00 00                        	mov ecx, 0x29
0x8d7e:   31 c0                                 	xor eax, eax
0x8d80:   41 56                                 	push r14
0x8d82:   41 55                                 	push r13
0x8d84:   41 54                                 	push r12
0x8d86:   55                                    	push rbp
0x8d87:   48 89 fd                              	mov rbp, rdi
0x8d8a:   53                                    	push rbx
0x8d8b:   48 89 d3                              	mov rbx, rdx
0x8d8e:   48 83 ec 68                           	sub rsp, 0x68
0x8d92:   48 8d 7c 24 37                        	lea rdi, [rsp + 0x37]
0x8d97:   0f 11 44 24 27                        	movups xmmword ptr [rsp + 0x27], xmm0
0x8d9c:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x8d9e:   48 85 ed                              	test rbp, rbp
0x8da1:   74 3b                                 	je 0x8dde <.Ldecode_buffer.part.0+0x6e>
0x8da3:   48 85 d2                              	test rdx, rdx
0x8da6:   0f 84 fa 00 00 00                     	je 0x8ea6 <.Ldecode_buffer.part.0+0x136>
0x8dac:   8b 82 04 01 00 00                     	mov eax, dword ptr [rdx + 0x104]
0x8db2:   83 f8 03                              	cmp eax, 3
0x8db5:   75 0a                                 	jne 0x8dc1 <.Ldecode_buffer.part.0+0x51>
0x8db7:   b8 01 00 00 00                        	mov eax, 1
0x8dbc:   e9 e7 00 00 00                        	jmp 0x8ea8 <.Ldecode_buffer.part.0+0x138>
0x8dc1:   49 89 f4                              	mov r12, rsi
0x8dc4:   48 83 fe 12                           	cmp rsi, 0x12
0x8dc8:   76 05                                 	jbe 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8dca:   83 f8 01                              	cmp eax, 1
0x8dcd:   76 1a                                 	jbe 0x8de9 <.Ldecode_buffer.part.0+0x79>
0x8dcf:   c7 83 04 01 00 00 ff ff ff ff         	mov dword ptr [rbx + 0x104], 0xffffffff
0x8dd9:   e9 c8 00 00 00                        	jmp 0x8ea6 <.Ldecode_buffer.part.0+0x136>
0x8dde:   48 85 d2                              	test rdx, rdx
0x8de1:   0f 84 bf 00 00 00                     	je 0x8ea6 <.Ldecode_buffer.part.0+0x136>
0x8de7:   eb e6                                 	jmp 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8de9:   0f 10 4d 00                           	movups xmm1, xmmword ptr [rbp]
0x8ded:   4c 8d 6c 24 27                        	lea r13, [rsp + 0x27]
0x8df2:   48 89 d6                              	mov rsi, rdx
0x8df5:   4c 89 ef                              	mov rdi, r13
0x8df8:   0f 11 4c 24 17                        	movups xmmword ptr [rsp + 0x17], xmm1
0x8dfd:   e8 ee f3 ff ff                        	call 0x81f0 <.Lparse_lzma12.0>
0x8e02:   85 c0                                 	test eax, eax
0x8e04:   74 c9                                 	je 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8e06:   4c 8d 45 10                           	lea r8, [rbp + 0x10]
0x8e0a:   45 8d 74 24 f0                        	lea r14d, [r12 - 0x10]
0x8e0f:   4c 8b 4b 08                           	mov r9, qword ptr [rbx + 8]
0x8e13:   4c 89 ea                              	mov rdx, r13
0x8e16:   4c 8d 7c 24 17                        	lea r15, [rsp + 0x17]
0x8e1b:   44 89 f6                              	mov esi, r14d
0x8e1e:   4c 89 c7                              	mov rdi, r8
0x8e21:   4c 89 44 24 08                        	mov qword ptr [rsp + 8], r8
0x8e26:   4c 89 f9                              	mov rcx, r15
0x8e29:   e8 82 e3 ff ff                        	call 0x71b0 <function_71b0>
0x8e2e:   85 c0                                 	test eax, eax
0x8e30:   74 9d                                 	je 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8e32:   0f b7 55 10                           	movzx edx, word ptr [rbp + 0x10]
0x8e36:   49 83 ec 12                           	sub r12, 0x12
0x8e3a:   49 39 d4                              	cmp r12, rdx
0x8e3d:   72 90                                 	jb 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8e3f:   48 8b 83 e8 00 00 00                  	mov rax, qword ptr [rbx + 0xe8]
0x8e46:   48 8b 8b e0 00 00 00                  	mov rcx, qword ptr [rbx + 0xe0]
0x8e4d:   48 29 c1                              	sub rcx, rax
0x8e50:   48 39 ca                              	cmp rdx, rcx
0x8e53:   0f 83 76 ff ff ff                     	jae 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8e59:   48 03 83 f0 00 00 00                  	add rax, qword ptr [rbx + 0xf0]
0x8e60:   4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0x8e65:   48 89 c1                              	mov rcx, rax
0x8e68:   31 c0                                 	xor eax, eax
0x8e6a:   48 39 c2                              	cmp rdx, rax
0x8e6d:   74 0e                                 	je 0x8e7d <.Ldecode_buffer.part.0+0x10d>
0x8e6f:   40 8a 74 05 12                        	mov sil, byte ptr [rbp + rax + 0x12]
0x8e74:   40 88 34 01                           	mov byte ptr [rcx + rax], sil
0x8e78:   48 ff c0                              	inc rax
0x8e7b:   eb ed                                 	jmp 0x8e6a <.Ldecode_buffer.part.0+0xfa>
0x8e7d:   48 01 93 e8 00 00 00                  	add qword ptr [rbx + 0xe8], rdx
0x8e84:   4c 89 f9                              	mov rcx, r15
0x8e87:   4c 89 ea                              	mov rdx, r13
0x8e8a:   44 89 f6                              	mov esi, r14d
0x8e8d:   4c 8b 4b 08                           	mov r9, qword ptr [rbx + 8]
0x8e91:   4c 89 c7                              	mov rdi, r8
0x8e94:   e8 17 e3 ff ff                        	call 0x71b0 <function_71b0>
0x8e99:   85 c0                                 	test eax, eax
0x8e9b:   0f 85 16 ff ff ff                     	jne 0x8db7 <.Ldecode_buffer.part.0+0x47>
0x8ea1:   e9 29 ff ff ff                        	jmp 0x8dcf <.Ldecode_buffer.part.0+0x5f>
0x8ea6:   31 c0                                 	xor eax, eax
0x8ea8:   48 83 c4 68                           	add rsp, 0x68
0x8eac:   5b                                    	pop rbx
0x8ead:   5d                                    	pop rbp
0x8eae:   41 5c                                 	pop r12
0x8eb0:   41 5d                                 	pop r13
0x8eb2:   41 5e                                 	pop r14
0x8eb4:   41 5f                                 	pop r15
0x8eb6:   c3                                    	ret 
; section: .text.file_info_decoda
; function: .Lfile_info_decode.0 at 0x8ec0 -- 0x94b2
0x8ec0:   f3 0f 1e fa                           	endbr64 
0x8ec4:   41 57                                 	push r15
0x8ec6:   41 56                                 	push r14
0x8ec8:   41 55                                 	push r13
0x8eca:   41 54                                 	push r12
0x8ecc:   55                                    	push rbp
0x8ecd:   53                                    	push rbx
0x8ece:   48 81 ec 28 01 00 00                  	sub rsp, 0x128
0x8ed5:   48 8b 2d 64 3c 00 00                  	mov rbp, qword ptr [rip + 0x3c64]
0x8edc:   89 74 24 04                           	mov dword ptr [rsp + 4], esi
0x8ee0:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x8ee5:   48 85 ed                              	test rbp, rbp
0x8ee8:   0f 84 b0 05 00 00                     	je 0x949e <.Lfile_info_decode.0+0x5de>
0x8eee:   48 8b 5d 10                           	mov rbx, qword ptr [rbp + 0x10]
0x8ef2:   48 85 db                              	test rbx, rbx
0x8ef5:   0f 84 a3 05 00 00                     	je 0x949e <.Lfile_info_decode.0+0x5de>
0x8efb:   4c 8b 65 20                           	mov r12, qword ptr [rbp + 0x20]
0x8eff:   4d 85 e4                              	test r12, r12
0x8f02:   0f 84 96 05 00 00                     	je 0x949e <.Lfile_info_decode.0+0x5de>
0x8f08:   48 83 bd f0 00 00 00 00               	cmp qword ptr [rbp + 0xf0], 0
0x8f10:   0f 84 88 05 00 00                     	je 0x949e <.Lfile_info_decode.0+0x5de>
0x8f16:   4d 8b 74 24 48                        	mov r14, qword ptr [r12 + 0x48]
0x8f1b:   4d 85 f6                              	test r14, r14
0x8f1e:   0f 84 6d 05 00 00                     	je 0x9491 <.Lfile_info_decode.0+0x5d1>
0x8f24:   83 bd 04 01 00 00 04                  	cmp dword ptr [rbp + 0x104], 4
0x8f2b:   49 89 fd                              	mov r13, rdi
0x8f2e:   0f 84 3b 05 00 00                     	je 0x946f <.Lfile_info_decode.0+0x5af>
0x8f34:   48 8b fd                              	mov rdi, rbp
0x8f37:   e8 84 ef ff ff                        	call 0x7ec0 <.Lstream_encoder_mt_init.part.0>
0x8f3c:   85 c0                                 	test eax, eax
0x8f3e:   0f 84 05 05 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x8f44:   8b 85 04 01 00 00                     	mov eax, dword ptr [rbp + 0x104]
0x8f4a:   83 f8 04                              	cmp eax, 4
0x8f4d:   0f 84 f6 04 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x8f53:   ff c0                                 	inc eax
0x8f55:   0f 84 ee 04 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x8f5b:   31 c0                                 	xor eax, eax
0x8f5d:   48 8d 7c 24 60                        	lea rdi, [rsp + 0x60]
0x8f62:   b9 12 00 00 00                        	mov ecx, 0x12
0x8f67:   48 89 ee                              	mov rsi, rbp
0x8f6a:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x8f6c:   4c 8d 7c 24 60                        	lea r15, [rsp + 0x60]
0x8f71:   31 c9                                 	xor ecx, ecx
0x8f73:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0x8f78:   48 89 4c 24 18                        	mov qword ptr [rsp + 0x18], rcx
0x8f7d:   4c 89 fa                              	mov rdx, r15
0x8f80:   48 8d 4c 24 78                        	lea rcx, [rsp + 0x78]
0x8f85:   e8 e6 e9 ff ff                        	call 0x7970 <.Lstream_decoder_mt_get_progress.0>
0x8f8a:   85 c0                                 	test eax, eax
0x8f8c:   0f 84 dd 04 00 00                     	je 0x946f <.Lfile_info_decode.0+0x5af>
0x8f92:   48 8b 74 24 78                        	mov rsi, qword ptr [rsp + 0x78]
0x8f97:   48 8d 54 24 18                        	lea rdx, [rsp + 0x18]
0x8f9c:   48 89 e9                              	mov rcx, rbp
0x8f9f:   4c 89 ff                              	mov rdi, r15
0x8fa2:   e8 99 ef ff ff                        	call 0x7f40 <.Lworker_start.0>
0x8fa7:   85 c0                                 	test eax, eax
0x8fa9:   0f 84 c0 04 00 00                     	je 0x946f <.Lfile_info_decode.0+0x5af>
0x8faf:   48 8b 74 24 18                        	mov rsi, qword ptr [rsp + 0x18]
0x8fb4:   48 8b 7c 24 60                        	mov rdi, qword ptr [rsp + 0x60]
0x8fb9:   48 89 ea                              	mov rdx, rbp
0x8fbc:   e8 af fd ff ff                        	call 0x8d70 <.Ldecode_buffer.part.0>
0x8fc1:   8b 85 04 01 00 00                     	mov eax, dword ptr [rbp + 0x104]
0x8fc7:   83 f8 03                              	cmp eax, 3
0x8fca:   0f 84 66 02 00 00                     	je 0x9236 <.Lfile_info_decode.0+0x376>
0x8fd0:   7f 11                                 	jg 0x8fe3 <.Lfile_info_decode.0+0x123>
0x8fd2:   85 c0                                 	test eax, eax
0x8fd4:   74 1b                                 	je 0x8ff1 <.Lfile_info_decode.0+0x131>
0x8fd6:   ff c8                                 	dec eax
0x8fd8:   0f 84 37 01 00 00                     	je 0x9115 <.Lfile_info_decode.0+0x255>
0x8fde:   e9 66 04 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x8fe3:   83 f8 04                              	cmp eax, 4
0x8fe6:   0f 84 83 04 00 00                     	je 0x946f <.Lfile_info_decode.0+0x5af>
0x8fec:   e9 58 04 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x8ff1:   48 81 bd e8 00 00 00 ad 00 00 00      	cmp qword ptr [rbp + 0xe8], 0xad
0x8ffc:   0f 86 6d 04 00 00                     	jbe 0x946f <.Lfile_info_decode.0+0x5af>
0x9002:   0f 57 c0                              	xorps xmm0, xmm0
0x9005:   48 8d 7c 24 37                        	lea rdi, [rsp + 0x37]
0x900a:   b9 29 00 00 00                        	mov ecx, 0x29
0x900f:   31 c0                                 	xor eax, eax
0x9011:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x9013:   48 8b 95 f0 00 00 00                  	mov rdx, qword ptr [rbp + 0xf0]
0x901a:   0f 11 44 24 27                        	movups xmmword ptr [rsp + 0x27], xmm0
0x901f:   48 85 d2                              	test rdx, rdx
0x9022:   0f 84 d5 00 00 00                     	je 0x90fd <.Lfile_info_decode.0+0x23d>
0x9028:   48 8b 4d 28                           	mov rcx, qword ptr [rbp + 0x28]
0x902c:   48 85 c9                              	test rcx, rcx
0x902f:   0f 84 c8 00 00 00                     	je 0x90fd <.Lfile_info_decode.0+0x23d>
0x9035:   48 83 79 08 00                        	cmp qword ptr [rcx + 8], 0
0x903a:   0f 84 bd 00 00 00                     	je 0x90fd <.Lfile_info_decode.0+0x23d>
0x9040:   48 83 bd f8 00 00 00 00               	cmp qword ptr [rbp + 0xf8], 0
0x9048:   0f 85 af 00 00 00                     	jne 0x90fd <.Lfile_info_decode.0+0x23d>
0x904e:   48 8d bc 24 be 00 00 00               	lea rdi, [rsp + 0xbe]
0x9056:   b9 4a 00 00 00                        	mov ecx, 0x4a
0x905b:   48 89 95 f8 00 00 00                  	mov qword ptr [rbp + 0xf8], rdx
0x9062:   0f 11 84 24 ae 00 00 00               	movups xmmword ptr [rsp + 0xae], xmm0
0x906a:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x906c:   31 c0                                 	xor eax, eax
0x906e:   8a 4c 02 02                           	mov cl, byte ptr [rdx + rax + 2]
0x9072:   4c 8d bc 24 ae 00 00 00               	lea r15, [rsp + 0xae]
0x907a:   88 8c 04 ae 00 00 00                  	mov byte ptr [rsp + rax + 0xae], cl
0x9081:   48 ff c0                              	inc rax
0x9084:   48 83 f8 3a                           	cmp rax, 0x3a
0x9088:   75 e4                                 	jne 0x906e <.Lfile_info_decode.0+0x1ae>
0x908a:   48 8d 5c 24 27                        	lea rbx, [rsp + 0x27]
0x908f:   48 8b f5                              	mov rsi, rbp
0x9092:   48 8b fb                              	mov rdi, rbx
0x9095:   e8 56 f1 ff ff                        	call 0x81f0 <.Lparse_lzma12.0>
0x909a:   85 c0                                 	test eax, eax
0x909c:   74 5f                                 	je 0x90fd <.Lfile_info_decode.0+0x23d>
0x909e:   48 8b 55 28                           	mov rdx, qword ptr [rbp + 0x28]
0x90a2:   8b 8d 00 01 00 00                     	mov ecx, dword ptr [rbp + 0x100]
0x90a8:   4c 89 fe                              	mov rsi, r15
0x90ab:   49 89 d9                              	mov r9, rbx
0x90ae:   48 8b 85 f8 00 00 00                  	mov rax, qword ptr [rbp + 0xf8]
0x90b5:   48 8b 52 08                           	mov rdx, qword ptr [rdx + 8]
0x90b9:   4c 8d 40 3c                           	lea r8, [rax + 0x3c]
0x90bd:   48 8b 3c ca                           	mov rdi, qword ptr [rdx + rcx*8]
0x90c1:   41 54                                 	push r12
0x90c3:   ba 3a 00 00 00                        	mov edx, 0x3a
0x90c8:   b9 5a 00 00 00                        	mov ecx, 0x5a
0x90cd:   55                                    	push rbp
0x90ce:   e8 7d e5 ff ff                        	call 0x7650 <function_7650>
0x90d3:   41 5f                                 	pop r15
0x90d5:   5a                                    	pop rdx
0x90d6:   85 c0                                 	test eax, eax
0x90d8:   74 23                                 	je 0x90fd <.Lfile_info_decode.0+0x23d>
0x90da:   c7 85 04 01 00 00 01 00 00 00         	mov dword ptr [rbp + 0x104], 1
0x90e4:   31 c0                                 	xor eax, eax
0x90e6:   48 8b fb                              	mov rdi, rbx
0x90e9:   b9 39 00 00 00                        	mov ecx, 0x39
0x90ee:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x90f0:   48 8b fd                              	mov rdi, rbp
0x90f3:   e8 c8 ed ff ff                        	call 0x7ec0 <.Lstream_encoder_mt_init.part.0>
0x90f8:   e9 08 02 00 00                        	jmp 0x9305 <.Lfile_info_decode.0+0x445>
0x90fd:   c7 85 04 01 00 00 ff ff ff ff         	mov dword ptr [rbp + 0x104], 0xffffffff
0x9107:   33 db                                 	xor ebx, ebx
0x9109:   48 89 9d f8 00 00 00                  	mov qword ptr [rbp + 0xf8], rbx
0x9110:   e9 34 03 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x9115:   48 8b 85 f8 00 00 00                  	mov rax, qword ptr [rbp + 0xf8]
0x911c:   48 85 c0                              	test rax, rax
0x911f:   0f 84 24 03 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x9125:   0f b7 00                              	movzx eax, word ptr [rax]
0x9128:   48 8b 95 e8 00 00 00                  	mov rdx, qword ptr [rbp + 0xe8]
0x912f:   48 3b c2                              	cmp rax, rdx
0x9132:   0f 82 11 03 00 00                     	jb 0x9449 <.Lfile_info_decode.0+0x589>
0x9138:   48 39 c2                              	cmp rdx, rax
0x913b:   0f 85 2e 03 00 00                     	jne 0x946f <.Lfile_info_decode.0+0x5af>
0x9141:   48 8b b5 e0 00 00 00                  	mov rsi, qword ptr [rbp + 0xe0]
0x9148:   4c 8b 8d 98 00 00 00                  	mov r9, qword ptr [rbp + 0x98]
0x914f:   4c 39 ce                              	cmp rsi, r9
0x9152:   0f 82 39 03 00 00                     	jb 0x9491 <.Lfile_info_decode.0+0x5d1>
0x9158:   48 89 f0                              	mov rax, rsi
0x915b:   48 83 ea 72                           	sub rdx, 0x72
0x915f:   4c 29 c8                              	sub rax, r9
0x9162:   48 39 c2                              	cmp rdx, rax
0x9165:   0f 83 26 03 00 00                     	jae 0x9491 <.Lfile_info_decode.0+0x5d1>
0x916b:   33 c0                                 	xor eax, eax
0x916d:   0f 57 c0                              	xorps xmm0, xmm0
0x9170:   48 8d bc 24 be 00 00 00               	lea rdi, [rsp + 0xbe]
0x9178:   b9 62 00 00 00                        	mov ecx, 0x62
0x917d:   0f 11 84 24 ae 00 00 00               	movups xmmword ptr [rsp + 0xae], xmm0
0x9185:   4c 8d 84 24 ae 00 00 00               	lea r8, [rsp + 0xae]
0x918d:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x918f:   33 c0                                 	xor eax, eax
0x9191:   48 8b 8d f0 00 00 00                  	mov rcx, qword ptr [rbp + 0xf0]
0x9198:   48 03 ca                              	add rcx, rdx
0x919b:   40 8a 3c 01                           	mov dil, byte ptr [rcx + rax]
0x919f:   48 ff c0                              	inc rax
0x91a2:   42 88 7c 00 ff                        	mov byte ptr [rax + r8 - 1], dil
0x91a7:   48 83 f8 72                           	cmp rax, 0x72
0x91ab:   75 ee                                 	jne 0x919b <.Lfile_info_decode.0+0x2db>
0x91ad:   48 39 d6                              	cmp rsi, rdx
0x91b0:   0f 82 db 02 00 00                     	jb 0x9491 <.Lfile_info_decode.0+0x5d1>
0x91b6:   48 29 d6                              	sub rsi, rdx
0x91b9:   33 c0                                 	xor eax, eax
0x91bb:   4c 39 ce                              	cmp rsi, r9
0x91be:   0f 82 cd 02 00 00                     	jb 0x9491 <.Lfile_info_decode.0+0x5d1>
0x91c4:   49 39 c1                              	cmp r9, rax
0x91c7:   74 11                                 	je 0x91da <.Lfile_info_decode.0+0x31a>
0x91c9:   40 8a b4 05 a0 00 00 00               	mov sil, byte ptr [rbp + rax + 0xa0]
0x91d1:   40 88 34 01                           	mov byte ptr [rcx + rax], sil
0x91d5:   48 ff c0                              	inc rax
0x91d8:   eb ea                                 	jmp 0x91c4 <.Lfile_info_decode.0+0x304>
0x91da:   48 8b 7d 28                           	mov rdi, qword ptr [rbp + 0x28]
0x91de:   44 8b 8d 00 01 00 00                  	mov r9d, dword ptr [rbp + 0x100]
0x91e5:   48 8b 85 f8 00 00 00                  	mov rax, qword ptr [rbp + 0xf8]
0x91ec:   48 8b 8d e0 00 00 00                  	mov rcx, qword ptr [rbp + 0xe0]
0x91f3:   48 8b 7f 08                           	mov rdi, qword ptr [rdi + 8]
0x91f7:   48 8b b5 f0 00 00 00                  	mov rsi, qword ptr [rbp + 0xf0]
0x91fe:   48 03 95 98 00 00 00                  	add rdx, qword ptr [rbp + 0x98]
0x9205:   4a 8b 3c cf                           	mov rdi, qword ptr [rdi + r9*8]
0x9209:   41 51                                 	push r9
0x920b:   4c 8d 48 02                           	lea r9, [rax + 2]
0x920f:   55                                    	push rbp
0x9210:   e8 3b e4 ff ff                        	call 0x7650 <function_7650>
0x9215:   41 5a                                 	pop r10
0x9217:   41 5b                                 	pop r11
0x9219:   85 c0                                 	test eax, eax
0x921b:   75 0f                                 	jne 0x922c <.Lfile_info_decode.0+0x36c>
0x921d:   c7 85 04 01 00 00 ff ff ff ff         	mov dword ptr [rbp + 0x104], 0xffffffff
0x9227:   e9 65 02 00 00                        	jmp 0x9491 <.Lfile_info_decode.0+0x5d1>
0x922c:   c7 85 04 01 00 00 03 00 00 00         	mov dword ptr [rbp + 0x104], 3
0x9236:   4c 8b bd f8 00 00 00                  	mov r15, qword ptr [rbp + 0xf8]
0x923d:   4d 85 ff                              	test r15, r15
0x9240:   0f 84 03 02 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x9246:   41 0f b7 07                           	movzx eax, word ptr [r15]
0x924a:   41 8a 4f 3b                           	mov cl, byte ptr [r15 + 0x3b]
0x924e:   49 8d b7 ae 00 00 00                  	lea rsi, [r15 + 0xae]
0x9255:   48 8d 90 e0 fe ff ff                  	lea rdx, [rax - 0x120]
0x925c:   80 f9 02                              	cmp cl, 2
0x925f:   0f 84 ad 00 00 00                     	je 0x9312 <.Lfile_info_decode.0+0x452>
0x9265:   80 f9 03                              	cmp cl, 3
0x9268:   0f 84 76 01 00 00                     	je 0x93e4 <.Lfile_info_decode.0+0x524>
0x926e:   fe c9                                 	dec cl
0x9270:   0f 85 d3 01 00 00                     	jne 0x9449 <.Lfile_info_decode.0+0x589>
0x9276:   48 8b 4d 20                           	mov rcx, qword ptr [rbp + 0x20]
0x927a:   48 83 79 38 00                        	cmp qword ptr [rcx + 0x38], 0
0x927f:   0f 84 c4 01 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x9285:   48 83 fa 01                           	cmp rdx, 1
0x9289:   0f 86 ba 01 00 00                     	jbe 0x9449 <.Lfile_info_decode.0+0x589>
0x928f:   41 8a 97 ae 00 00 00                  	mov dl, byte ptr [r15 + 0xae]
0x9296:   41 88 94 24 90 00 00 00               	mov byte ptr [r12 + 0x90], dl
0x929e:   41 8a 97 af 00 00 00                  	mov dl, byte ptr [r15 + 0xaf]
0x92a5:   41 88 94 24 91 00 00 00               	mov byte ptr [r12 + 0x91], dl
0x92ad:   41 0f b7 94 24 90 00 00 00            	movzx edx, word ptr [r12 + 0x90]
0x92b6:   66 85 d2                              	test dx, dx
0x92b9:   74 22                                 	je 0x92dd <.Lfile_info_decode.0+0x41d>
0x92bb:   48 2d 22 01 00 00                     	sub rax, 0x122
0x92c1:   49 81 c7 b0 00 00 00                  	add r15, 0xb0
0x92c8:   48 39 d0                              	cmp rax, rdx
0x92cb:   73 13                                 	jae 0x92e0 <.Lfile_info_decode.0+0x420>
0x92cd:   66 41 c7 84 24 90 00 00 00 00 00      	mov word ptr [r12 + 0x90], 0
0x92d8:   e9 6c 01 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x92dd:   45 31 ff                              	xor r15d, r15d
0x92e0:   4d 89 bc 24 98 00 00 00               	mov qword ptr [r12 + 0x98], r15
0x92e8:   49 89 e8                              	mov r8, rbp
0x92eb:   33 c9                                 	xor ecx, ecx
0x92ed:   31 d2                                 	xor edx, edx
0x92ef:   c7 85 04 01 00 00 04 00 00 00         	mov dword ptr [rbp + 0x104], 4
0x92f9:   33 f6                                 	xor esi, esi
0x92fb:   bf 01 00 00 00                        	mov edi, 1
0x9300:   e8 6b ea ff ff                        	call 0x7d70 <.Llzma_block_unpadded_size.1>
0x9305:   85 c0                                 	test eax, eax
0x9307:   0f 85 62 01 00 00                     	jne 0x946f <.Lfile_info_decode.0+0x5af>
0x930d:   e9 37 01 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x9312:   48 8b 4d 20                           	mov rcx, qword ptr [rbp + 0x20]
0x9316:   48 83 79 78 00                        	cmp qword ptr [rcx + 0x78], 0
0x931b:   0f 84 28 01 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x9321:   48 83 fa 04                           	cmp rdx, 4
0x9325:   0f 86 1e 01 00 00                     	jbe 0x9449 <.Lfile_info_decode.0+0x589>
0x932b:   41 0f b7 97 ae 00 00 00               	movzx edx, word ptr [r15 + 0xae]
0x9333:   66 85 d2                              	test dx, dx
0x9336:   0f 84 0d 01 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x933c:   48 2d 22 01 00 00                     	sub rax, 0x122
0x9342:   48 39 c2                              	cmp rdx, rax
0x9345:   0f 83 fe 00 00 00                     	jae 0x9449 <.Lfile_info_decode.0+0x589>
0x934b:   48 29 d0                              	sub rax, rdx
0x934e:   48 83 f8 02                           	cmp rax, 2
0x9352:   0f 86 f1 00 00 00                     	jbe 0x9449 <.Lfile_info_decode.0+0x589>
0x9358:   48 8d 4c 16 02                        	lea rcx, [rsi + rdx + 2]
0x935d:   40 8a 39                              	mov dil, byte ptr [rcx]
0x9360:   41 88 bc 24 84 00 00 00               	mov byte ptr [r12 + 0x84], dil
0x9368:   8a 49 01                              	mov cl, byte ptr [rcx + 1]
0x936b:   41 88 8c 24 85 00 00 00               	mov byte ptr [r12 + 0x85], cl
0x9373:   41 0f b7 8c 24 84 00 00 00            	movzx ecx, word ptr [r12 + 0x84]
0x937c:   66 85 c9                              	test cx, cx
0x937f:   74 09                                 	je 0x938a <.Lfile_info_decode.0+0x4ca>
0x9381:   48 83 e8 02                           	sub rax, 2
0x9385:   48 39 c8                              	cmp rax, rcx
0x9388:   73 10                                 	jae 0x939a <.Lfile_info_decode.0+0x4da>
0x938a:   66 41 c7 84 24 84 00 00 00 00 00      	mov word ptr [r12 + 0x84], 0
0x9395:   e9 af 00 00 00                        	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x939a:   48 8b 4d 20                           	mov rcx, qword ptr [rbp + 0x20]
0x939e:   48 8d 44 16 04                        	lea rax, [rsi + rdx + 4]
0x93a3:   48 8b 7d 10                           	mov rdi, qword ptr [rbp + 0x10]
0x93a7:   49 89 84 24 88 00 00 00               	mov qword ptr [r12 + 0x88], rax
0x93af:   48 8b 41 20                           	mov rax, qword ptr [rcx + 0x20]
0x93b3:   48 85 c0                              	test rax, rax
0x93b6:   0f 84 8d 00 00 00                     	je 0x9449 <.Lfile_info_decode.0+0x589>
0x93bc:   48 8b 49 78                           	mov rcx, qword ptr [rcx + 0x78]
0x93c0:   49 8d b7 b0 00 00 00                  	lea rsi, [r15 + 0xb0]
0x93c7:   48 89 01                              	mov qword ptr [rcx], rax
0x93ca:   48 8b cf                              	mov rcx, rdi
0x93cd:   8b 7c 24 04                           	mov edi, dword ptr [rsp + 4]
0x93d1:   e8 3a dd ff ff                        	call 0x7110 <function_7110>
0x93d6:   48 85 c0                              	test rax, rax
0x93d9:   0f 89 bf 00 00 00                     	jns 0x949e <.Lfile_info_decode.0+0x5de>
0x93df:   e9 8b 00 00 00                        	jmp 0x946f <.Lfile_info_decode.0+0x5af>
0x93e4:   48 83 7b 30 00                        	cmp qword ptr [rbx + 0x30], 0
0x93e9:   74 5e                                 	je 0x9449 <.Lfile_info_decode.0+0x589>
0x93eb:   48 83 fa 08                           	cmp rdx, 8
0x93ef:   76 58                                 	jbe 0x9449 <.Lfile_info_decode.0+0x589>
0x93f1:   80 bc 06 df fe ff ff 00               	cmp byte ptr [rsi + rax - 0x121], 0
0x93f9:   75 4e                                 	jne 0x9449 <.Lfile_info_decode.0+0x589>
0x93fb:   4d 8b a7 ae 00 00 00                  	mov r12, qword ptr [r15 + 0xae]
0x9402:   4c 89 e0                              	mov rax, r12
0x9405:   48 c1 e8 20                           	shr rax, 0x20
0x9409:   8b f8                                 	mov edi, eax
0x940b:   85 c0                                 	test eax, eax
0x940d:   75 0a                                 	jne 0x9419 <.Lfile_info_decode.0+0x559>
0x940f:   44 89 e7                              	mov edi, r12d
0x9412:   45 85 e4                              	test r12d, r12d
0x9415:   75 0f                                 	jne 0x9426 <.Lfile_info_decode.0+0x566>
0x9417:   eb 1a                                 	jmp 0x9433 <.Lfile_info_decode.0+0x573>
0x9419:   8b d0                                 	mov edx, eax
0x941b:   89 c6                                 	mov esi, eax
0x941d:   ff 53 20                              	call qword ptr [rbx + 0x20]
0x9420:   ff c0                                 	inc eax
0x9422:   75 eb                                 	jne 0x940f <.Lfile_info_decode.0+0x54f>
0x9424:   eb 23                                 	jmp 0x9449 <.Lfile_info_decode.0+0x589>
0x9426:   44 89 e2                              	mov edx, r12d
0x9429:   44 89 e6                              	mov esi, r12d
0x942c:   ff 53 28                              	call qword ptr [rbx + 0x28]
0x942f:   ff c0                                 	inc eax
0x9431:   74 16                                 	je 0x9449 <.Lfile_info_decode.0+0x589>
0x9433:   49 8d bf b6 00 00 00                  	lea rdi, [r15 + 0xb6]
0x943a:   ff 53 30                              	call qword ptr [rbx + 0x30]
0x943d:   c7 85 04 01 00 00 04 00 00 00         	mov dword ptr [rbp + 0x104], 4
0x9447:   eb 26                                 	jmp 0x946f <.Lfile_info_decode.0+0x5af>
0x9449:   48 8b 45 10                           	mov rax, qword ptr [rbp + 0x10]
0x944d:   48 85 c0                              	test rax, rax
0x9450:   74 1d                                 	je 0x946f <.Lfile_info_decode.0+0x5af>
0x9452:   48 8b 40 18                           	mov rax, qword ptr [rax + 0x18]
0x9456:   48 85 c0                              	test rax, rax
0x9459:   74 14                                 	je 0x946f <.Lfile_info_decode.0+0x5af>
0x945b:   c7 85 04 01 00 00 ff ff ff ff         	mov dword ptr [rbp + 0x104], 0xffffffff
0x9465:   83 7d 50 00                           	cmp dword ptr [rbp + 0x50], 0
0x9469:   74 04                                 	je 0x946f <.Lfile_info_decode.0+0x5af>
0x946b:   33 ff                                 	xor edi, edi
0x946d:   ff d0                                 	call rax
0x946f:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0x9474:   8b 74 24 04                           	mov esi, dword ptr [rsp + 4]
0x9478:   4c 89 ef                              	mov rdi, r13
0x947b:   4c 89 f0                              	mov rax, r14
0x947e:   48 81 c4 28 01 00 00                  	add rsp, 0x128
0x9485:   5b                                    	pop rbx
0x9486:   5d                                    	pop rbp
0x9487:   41 5c                                 	pop r12
0x9489:   41 5d                                 	pop r13
0x948b:   41 5e                                 	pop r14
0x948d:   41 5f                                 	pop r15
0x948f:   ff e0                                 	jmp rax
0x9491:   48 8b 43 18                           	mov rax, qword ptr [rbx + 0x18]
0x9495:   48 85 c0                              	test rax, rax
0x9498:   74 04                                 	je 0x949e <.Lfile_info_decode.0+0x5de>
0x949a:   31 ff                                 	xor edi, edi
0x949c:   ff d0                                 	call rax
0x949e:   48 81 c4 28 01 00 00                  	add rsp, 0x128
0x94a5:   33 c0                                 	xor eax, eax
0x94a7:   5b                                    	pop rbx
0x94a8:   5d                                    	pop rbp
0x94a9:   41 5c                                 	pop r12
0x94ab:   41 5d                                 	pop r13
0x94ad:   41 5e                                 	pop r14
0x94af:   41 5f                                 	pop r15
0x94b1:   c3                                    	ret 
; section: .text.lzma_index_stream_siza
; function: .Llzma_index_stream_size.1 at 0x94c0 -- 0xa25d
0x94c0:   f3 0f 1e fa                           	endbr64 
0x94c4:   41 57                                 	push r15
0x94c6:   b9 ae 00 00 00                        	mov ecx, 0xae
0x94cb:   31 c0                                 	xor eax, eax
0x94cd:   41 56                                 	push r14
0x94cf:   41 55                                 	push r13
0x94d1:   41 54                                 	push r12
0x94d3:   55                                    	push rbp
0x94d4:   53                                    	push rbx
0x94d5:   48 81 ec c8 05 00 00                  	sub rsp, 0x5c8
0x94dc:   48 89 7c 24 20                        	mov qword ptr [rsp + 0x20], rdi
0x94e1:   48 8d bc 24 08 03 00 00               	lea rdi, [rsp + 0x308]
0x94e9:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x94eb:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0x94f0:   48 85 f6                              	test rsi, rsi
0x94f3:   0f 84 36 0d 00 00                     	je 0xa22f <.Llzma_index_stream_size.1+0xd6f>
0x94f9:   83 7e 18 00                           	cmp dword ptr [rsi + 0x18], 0
0x94fd:   49 89 f5                              	mov r13, rsi
0x9500:   0f 85 21 0d 00 00                     	jne 0xa227 <.Llzma_index_stream_size.1+0xd67>
0x9506:   48 83 7c 24 20 00                     	cmp qword ptr [rsp + 0x20], 0
0x950c:   0f 84 15 0d 00 00                     	je 0xa227 <.Llzma_index_stream_size.1+0xd67>
0x9512:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0x9516:   48 85 c0                              	test rax, rax
0x9519:   0f 84 08 0d 00 00                     	je 0xa227 <.Llzma_index_stream_size.1+0xd67>
0x951f:   4c 8b 40 60                           	mov r8, qword ptr [rax + 0x60]
0x9523:   4d 85 c0                              	test r8, r8
0x9526:   0f 84 fb 0c 00 00                     	je 0xa227 <.Llzma_index_stream_size.1+0xd67>
0x952c:   48 83 b8 00 01 00 00 00               	cmp qword ptr [rax + 0x100], 0
0x9534:   0f 84 ed 0c 00 00                     	je 0xa227 <.Llzma_index_stream_size.1+0xd67>
0x953a:   48 85 d2                              	test rdx, rdx
0x953d:   75 0c                                 	jne 0x954b <.Llzma_index_stream_size.1+0x8b>
0x953f:   c7 46 18 01 00 00 00                  	mov dword ptr [rsi + 0x18], 1
0x9546:   e9 fa 0b 00 00                        	jmp 0xa145 <.Llzma_index_stream_size.1+0xc85>
0x954b:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0x9550:   48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0x9555:   31 c9                                 	xor ecx, ecx
0x9557:   48 8d 94 24 10 03 00 00               	lea rdx, [rsp + 0x310]
0x955f:   48 8d b4 24 08 03 00 00               	lea rsi, [rsp + 0x308]
0x9567:   c7 00 01 00 00 00                     	mov dword ptr [rax], 1
0x956d:   41 ff d0                              	call r8
0x9570:   48 8b bc 24 08 03 00 00               	mov rdi, qword ptr [rsp + 0x308]
0x9578:   48 85 ff                              	test rdi, rdi
0x957b:   0f 84 b1 0b 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9581:   48 83 bc 24 10 03 00 00 00            	cmp qword ptr [rsp + 0x310], 0
0x958a:   0f 84 a2 0b 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9590:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x9594:   48 85 c0                              	test rax, rax
0x9597:   0f 84 95 0b 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x959d:   48 8b 40 68                           	mov rax, qword ptr [rax + 0x68]
0x95a1:   48 85 c0                              	test rax, rax
0x95a4:   0f 84 88 0b 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x95aa:   ff d0                                 	call rax
0x95ac:   3d 00 40 00 00                        	cmp eax, 0x4000
0x95b1:   0f 87 7b 0b 00 00                     	ja 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x95b7:   8d 58 07                              	lea ebx, [rax + 7]
0x95ba:   c1 eb 03                              	shr ebx, 3
0x95bd:   8d 43 ec                              	lea eax, [rbx - 0x14]
0x95c0:   3d 04 02 00 00                        	cmp eax, 0x204
0x95c5:   0f 87 67 0b 00 00                     	ja 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x95cb:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0x95cf:   48 8b bc 24 08 03 00 00               	mov rdi, qword ptr [rsp + 0x308]
0x95d7:   48 8d b4 24 1d 03 00 00               	lea rsi, [rsp + 0x31d]
0x95df:   ff 90 00 01 00 00                     	call qword ptr [rax + 0x100]
0x95e5:   85 c0                                 	test eax, eax
0x95e7:   0f 88 45 0b 00 00                     	js 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x95ed:   89 d9                                 	mov ecx, ebx
0x95ef:   48 98                                 	cdqe 
0x95f1:   48 89 4c 24 10                        	mov qword ptr [rsp + 0x10], rcx
0x95f6:   48 39 c1                              	cmp rcx, rax
0x95f9:   0f 82 33 0b 00 00                     	jb 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x95ff:   48 83 f8 10                           	cmp rax, 0x10
0x9603:   0f 86 31 0b 00 00                     	jbe 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0x9609:   8b ac 24 1d 03 00 00                  	mov ebp, dword ptr [rsp + 0x31d]
0x9610:   85 ed                                 	test ebp, ebp
0x9612:   0f 84 22 0b 00 00                     	je 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0x9618:   8b 84 24 21 03 00 00                  	mov eax, dword ptr [rsp + 0x321]
0x961f:   85 c0                                 	test eax, eax
0x9621:   0f 84 13 0b 00 00                     	je 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0x9627:   48 0f af e8                           	imul rbp, rax
0x962b:   48 03 ac 24 25 03 00 00               	add rbp, qword ptr [rsp + 0x325]
0x9633:   48 83 fd 03                           	cmp rbp, 3
0x9637:   0f 87 fd 0a 00 00                     	ja 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0x963d:   49 8b 45 10                           	mov rax, qword ptr [r13 + 0x10]
0x9641:   48 85 c0                              	test rax, rax
0x9644:   0f 84 e8 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x964a:   48 83 78 10 00                        	cmp qword ptr [rax + 0x10], 0
0x964f:   0f 84 dd 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9655:   48 83 78 18 00                        	cmp qword ptr [rax + 0x18], 0
0x965a:   0f 84 d2 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9660:   49 83 7d 30 00                        	cmp qword ptr [r13 + 0x30], 0
0x9665:   0f 84 c7 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x966b:   41 81 bd 60 01 00 00 c8 01 00 00      	cmp dword ptr [r13 + 0x160], 0x1c8
0x9676:   0f 85 b6 0a 00 00                     	jne 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x967c:   0f 10 8c 24 1d 03 00 00               	movups xmm1, xmmword ptr [rsp + 0x31d]
0x9684:   4c 8d a4 24 85 05 00 00               	lea r12, [rsp + 0x585]
0x968c:   4c 89 ee                              	mov rsi, r13
0x968f:   4c 89 e7                              	mov rdi, r12
0x9692:   0f 11 8c 24 75 05 00 00               	movups xmmword ptr [rsp + 0x575], xmm1
0x969a:   e8 51 eb ff ff                        	call 0x81f0 <.Lparse_lzma12.0>
0x969f:   85 c0                                 	test eax, eax
0x96a1:   0f 84 8b 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x96a7:   48 8d bc 24 2d 03 00 00               	lea rdi, [rsp + 0x32d]
0x96af:   4d 8b 4d 08                           	mov r9, qword ptr [r13 + 8]
0x96b3:   8d 73 f0                              	lea esi, [rbx - 0x10]
0x96b6:   4c 89 e2                              	mov rdx, r12
0x96b9:   48 8d 8c 24 75 05 00 00               	lea rcx, [rsp + 0x575]
0x96c1:   49 89 f8                              	mov r8, rdi
0x96c4:   e8 e7 da ff ff                        	call 0x71b0 <function_71b0>
0x96c9:   85 c0                                 	test eax, eax
0x96cb:   0f 84 61 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x96d1:   31 d2                                 	xor edx, edx
0x96d3:   b9 39 00 00 00                        	mov ecx, 0x39
0x96d8:   0f 57 c0                              	xorps xmm0, xmm0
0x96db:   4c 89 e7                              	mov rdi, r12
0x96de:   89 d0                                 	mov eax, edx
0x96e0:   0f 11 84 24 a8 00 00 00               	movups xmmword ptr [rsp + 0xa8], xmm0
0x96e8:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x96ea:   31 c0                                 	xor eax, eax
0x96ec:   b9 93 00 00 00                        	mov ecx, 0x93
0x96f1:   0f 11 44 24 68                        	movups xmmword ptr [rsp + 0x68], xmm0
0x96f6:   48 8d bc 24 b8 00 00 00               	lea rdi, [rsp + 0xb8]
0x96fe:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x9700:   89 d0                                 	mov eax, edx
0x9702:   49 8b 55 28                           	mov rdx, qword ptr [r13 + 0x28]
0x9706:   48 8d 7c 24 78                        	lea rdi, [rsp + 0x78]
0x970b:   b9 29 00 00 00                        	mov ecx, 0x29
0x9710:   f3 aa                                 	rep stosb byte ptr [rdi], al
0x9712:   48 85 d2                              	test rdx, rdx
0x9715:   0f 84 17 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x971b:   48 83 7a 08 00                        	cmp qword ptr [rdx + 8], 0
0x9720:   0f 84 0c 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9726:   49 83 7d 08 00                        	cmp qword ptr [r13 + 8], 0
0x972b:   0f 84 01 0a 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9731:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x9736:   48 83 e8 10                           	sub rax, 0x10
0x973a:   48 83 f8 71                           	cmp rax, 0x71
0x973e:   0f 86 ee 09 00 00                     	jbe 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9744:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x9749:   89 ac 24 a8 00 00 00                  	mov dword ptr [rsp + 0xa8], ebp
0x9750:   48 2d 82 00 00 00                     	sub rax, 0x82
0x9756:   48 83 f8 04                           	cmp rax, 4
0x975a:   0f 86 d2 09 00 00                     	jbe 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9760:   8b 84 24 9f 03 00 00                  	mov eax, dword ptr [rsp + 0x39f]
0x9767:   89 84 24 18 03 00 00                  	mov dword ptr [rsp + 0x318], eax
0x976e:   8a 84 24 a3 03 00 00                  	mov al, byte ptr [rsp + 0x3a3]
0x9775:   88 84 24 1c 03 00 00                  	mov byte ptr [rsp + 0x31c], al
0x977c:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x9781:   48 2d 87 00 00 00                     	sub rax, 0x87
0x9787:   48 89 04 24                           	mov qword ptr [rsp], rax
0x978b:   48 83 fd 02                           	cmp rbp, 2
0x978f:   75 6f                                 	jne 0x9800 <.Llzma_index_stream_size.1+0x340>
0x9791:   80 bc 24 18 03 00 00 00               	cmp byte ptr [rsp + 0x318], 0
0x9799:   0f b7 84 24 1b 03 00 00               	movzx eax, word ptr [rsp + 0x31b]
0x97a1:   78 10                                 	js 0x97b3 <.Llzma_index_stream_size.1+0x2f3>
0x97a3:   f6 84 24 19 03 00 00 01               	test byte ptr [rsp + 0x319], 1
0x97ab:   74 23                                 	je 0x97d0 <.Llzma_index_stream_size.1+0x310>
0x97ad:   48 83 c0 08                           	add rax, 8
0x97b1:   eb 1d                                 	jmp 0x97d0 <.Llzma_index_stream_size.1+0x310>
0x97b3:   66 85 c0                              	test ax, ax
0x97b6:   0f 85 76 09 00 00                     	jne 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x97bc:   31 db                                 	xor ebx, ebx
0x97be:   b8 39 00 00 00                        	mov eax, 0x39
0x97c3:   4c 8d b4 24 a4 03 00 00               	lea r14, [rsp + 0x3a4]
0x97cb:   45 31 ff                              	xor r15d, r15d
0x97ce:   eb 0c                                 	jmp 0x97dc <.Llzma_index_stream_size.1+0x31c>
0x97d0:   48 89 c3                              	mov rbx, rax
0x97d3:   45 31 f6                              	xor r14d, r14d
0x97d6:   41 bf 87 00 00 00                     	mov r15d, 0x87
0x97dc:   48 39 04 24                           	cmp qword ptr [rsp], rax
0x97e0:   0f 82 4c 09 00 00                     	jb 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x97e6:   48 8d 70 05                           	lea rsi, [rax + 5]
0x97ea:   48 29 04 24                           	sub qword ptr [rsp], rax
0x97ee:   4c 8d a0 87 00 00 00                  	lea r12, [rax + 0x87]
0x97f5:   48 83 c0 04                           	add rax, 4
0x97f9:   48 89 74 24 18                        	mov qword ptr [rsp + 0x18], rsi
0x97fe:   eb 5a                                 	jmp 0x985a <.Llzma_index_stream_size.1+0x39a>
0x9800:   83 fd 03                              	cmp ebp, 3
0x9803:   75 39                                 	jne 0x983e <.Llzma_index_stream_size.1+0x37e>
0x9805:   f6 84 24 19 03 00 00 40               	test byte ptr [rsp + 0x319], 0x40
0x980d:   75 2f                                 	jne 0x983e <.Llzma_index_stream_size.1+0x37e>
0x980f:   48 83 3c 24 2f                        	cmp qword ptr [rsp], 0x2f
0x9814:   0f 86 18 09 00 00                     	jbe 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x981a:   bb 30 00 00 00                        	mov ebx, 0x30
0x981f:   41 bf 87 00 00 00                     	mov r15d, 0x87
0x9825:   45 31 f6                              	xor r14d, r14d
0x9828:   48 c7 44 24 18 35 00 00 00            	mov qword ptr [rsp + 0x18], 0x35
0x9831:   41 bc 87 00 00 00                     	mov r12d, 0x87
0x9837:   b8 34 00 00 00                        	mov eax, 0x34
0x983c:   eb 1c                                 	jmp 0x985a <.Llzma_index_stream_size.1+0x39a>
0x983e:   31 db                                 	xor ebx, ebx
0x9840:   45 31 ff                              	xor r15d, r15d
0x9843:   41 bc 87 00 00 00                     	mov r12d, 0x87
0x9849:   45 31 f6                              	xor r14d, r14d
0x984c:   48 c7 44 24 18 05 00 00 00            	mov qword ptr [rsp + 0x18], 5
0x9855:   b8 04 00 00 00                        	mov eax, 4
0x985a:   48 8d 8c 24 ac 00 00 00               	lea rcx, [rsp + 0xac]
0x9862:   48 8d b4 24 9f 03 00 00               	lea rsi, [rsp + 0x39f]
0x986a:   48 89 4c 24 28                        	mov qword ptr [rsp + 0x28], rcx
0x986f:   8d 48 01                              	lea ecx, [rax + 1]
0x9872:   48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0x9877:   f3 a4                                 	rep movsb byte ptr [rdi], byte ptr [rsi]
0x9879:   31 f6                                 	xor esi, esi
0x987b:   48 89 74 24 58                        	mov qword ptr [rsp + 0x58], rsi
0x9880:   48 8b 3a                              	mov rdi, qword ptr [rdx]
0x9883:   48 89 74 24 60                        	mov qword ptr [rsp + 0x60], rsi
0x9888:   48 85 ff                              	test rdi, rdi
0x988b:   0f 84 a1 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9891:   48 8b 42 08                           	mov rax, qword ptr [rdx + 8]
0x9895:   48 85 c0                              	test rax, rax
0x9898:   0f 84 94 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x989e:   48 39 c7                              	cmp rdi, rax
0x98a1:   0f 84 8b 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x98a7:   83 7a 18 01                           	cmp dword ptr [rdx + 0x18], 1
0x98ab:   0f 87 81 08 00 00                     	ja 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x98b1:   49 8b 55 10                           	mov rdx, qword ptr [r13 + 0x10]
0x98b5:   48 8d 74 24 58                        	lea rsi, [rsp + 0x58]
0x98ba:   e8 11 dc ff ff                        	call 0x74d0 <function_74d0>
0x98bf:   85 c0                                 	test eax, eax
0x98c1:   0f 84 6b 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x98c7:   49 8b 45 28                           	mov rax, qword ptr [r13 + 0x28]
0x98cb:   49 8b 55 10                           	mov rdx, qword ptr [r13 + 0x10]
0x98cf:   48 8d 74 24 60                        	lea rsi, [rsp + 0x60]
0x98d4:   48 8b 78 08                           	mov rdi, qword ptr [rax + 8]
0x98d8:   e8 f3 db ff ff                        	call 0x74d0 <function_74d0>
0x98dd:   85 c0                                 	test eax, eax
0x98df:   0f 84 4d 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x98e5:   48 8b 54 24 58                        	mov rdx, qword ptr [rsp + 0x58]
0x98ea:   48 3b 54 24 60                        	cmp rdx, qword ptr [rsp + 0x60]
0x98ef:   48 89 54 24 38                        	mov qword ptr [rsp + 0x38], rdx
0x98f4:   0f 85 38 08 00 00                     	jne 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x98fa:   48 8d 44 24 68                        	lea rax, [rsp + 0x68]
0x98ff:   4c 89 ee                              	mov rsi, r13
0x9902:   48 89 c7                              	mov rdi, rax
0x9905:   48 89 44 24 30                        	mov qword ptr [rsp + 0x30], rax
0x990a:   e8 e1 e8 ff ff                        	call 0x81f0 <.Lparse_lzma12.0>
0x990f:   85 c0                                 	test eax, eax
0x9911:   0f 84 1b 08 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9917:   48 8b 54 24 38                        	mov rdx, qword ptr [rsp + 0x38]
0x991c:   45 31 db                              	xor r11d, r11d
0x991f:   89 54 24 38                           	mov dword ptr [rsp + 0x38], edx
0x9923:   8b 44 24 38                           	mov eax, dword ptr [rsp + 0x38]
0x9927:   44 89 5c 24 44                        	mov dword ptr [rsp + 0x44], r11d
0x992c:   41 39 c3                              	cmp r11d, eax
0x992f:   0f 83 fd 07 00 00                     	jae 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9935:   48 8b 44 24 18                        	mov rax, qword ptr [rsp + 0x18]
0x993a:   4c 89 5c 24 48                        	mov qword ptr [rsp + 0x48], r11
0x993f:   b9 5c 02 00 00                        	mov ecx, 0x25c
0x9944:   48 8d b4 24 a8 00 00 00               	lea rsi, [rsp + 0xa8]
0x994c:   48 8d 50 04                           	lea rdx, [rax + 4]
0x9950:   49 8b 45 28                           	mov rax, qword ptr [r13 + 0x28]
0x9954:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x9958:   4a 8b 3c d8                           	mov rdi, qword ptr [rax + r11*8]
0x995c:   50                                    	push rax
0x995d:   41 55                                 	push r13
0x995f:   4c 8b 4c 24 40                        	mov r9, qword ptr [rsp + 0x40]
0x9964:   4c 8d 84 24 3d 03 00 00               	lea r8, [rsp + 0x33d]
0x996c:   e8 df dc ff ff                        	call 0x7650 <function_7650>
0x9971:   4c 8b 5c 24 58                        	mov r11, qword ptr [rsp + 0x58]
0x9976:   5a                                    	pop rdx
0x9977:   59                                    	pop rcx
0x9978:   49 ff c3                              	inc r11
0x997b:   85 c0                                 	test eax, eax
0x997d:   74 a4                                 	je 0x9923 <.Llzma_index_stream_size.1+0x463>
0x997f:   8b 44 24 44                           	mov eax, dword ptr [rsp + 0x44]
0x9983:   41 89 85 00 01 00 00                  	mov dword ptr [r13 + 0x100], eax
0x998a:   48 83 fd 02                           	cmp rbp, 2
0x998e:   0f 85 1a 01 00 00                     	jne 0x9aae <.Llzma_index_stream_size.1+0x5ee>
0x9994:   80 bc 24 18 03 00 00 00               	cmp byte ptr [rsp + 0x318], 0
0x999c:   0f 89 0c 01 00 00                     	jns 0x9aae <.Llzma_index_stream_size.1+0x5ee>
0x99a2:   4d 85 f6                              	test r14, r14
0x99a5:   0f 84 87 07 00 00                     	je 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x99ab:   f6 84 24 19 03 00 00 01               	test byte ptr [rsp + 0x319], 1
0x99b3:   74 11                                 	je 0x99c6 <.Llzma_index_stream_size.1+0x506>
0x99b5:   48 83 3c 24 08                        	cmp qword ptr [rsp], 8
0x99ba:   b8 08 00 00 00                        	mov eax, 8
0x99bf:   77 07                                 	ja 0x99c8 <.Llzma_index_stream_size.1+0x508>
0x99c1:   e9 6c 07 00 00                        	jmp 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x99c6:   31 c0                                 	xor eax, eax
0x99c8:   48 8d 50 02                           	lea rdx, [rax + 2]
0x99cc:   48 39 14 24                           	cmp qword ptr [rsp], rdx
0x99d0:   0f 82 5c 07 00 00                     	jb 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x99d6:   48 05 c0 05 00 00                     	add rax, 0x5c0
0x99dc:   48 01 e0                              	add rax, rsp
0x99df:   41 0f b7 9c 04 5d fd ff ff            	movzx ebx, word ptr [r12 + rax - 0x2a3]
0x99e8:   48 8b 04 24                           	mov rax, qword ptr [rsp]
0x99ec:   48 01 d3                              	add rbx, rdx
0x99ef:   48 39 c3                              	cmp rbx, rax
0x99f2:   0f 83 3a 07 00 00                     	jae 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x99f8:   48 29 d8                              	sub rax, rbx
0x99fb:   48 83 f8 71                           	cmp rax, 0x71
0x99ff:   0f 86 2d 07 00 00                     	jbe 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9a05:   49 8b 85 e0 00 00 00                  	mov rax, qword ptr [r13 + 0xe0]
0x9a0c:   49 8b 95 e8 00 00 00                  	mov rdx, qword ptr [r13 + 0xe8]
0x9a13:   48 39 d0                              	cmp rax, rdx
0x9a16:   0f 82 16 07 00 00                     	jb 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9a1c:   48 29 d0                              	sub rax, rdx
0x9a1f:   48 83 f8 38                           	cmp rax, 0x38
0x9a23:   0f 86 09 07 00 00                     	jbe 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9a29:   48 83 e8 39                           	sub rax, 0x39
0x9a2d:   48 39 d8                              	cmp rax, rbx
0x9a30:   0f 82 fc 06 00 00                     	jb 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9a36:   48 8d bc 24 1d 03 00 00               	lea rdi, [rsp + 0x31d]
0x9a3e:   49 8b 95 f0 00 00 00                  	mov rdx, qword ptr [r13 + 0xf0]
0x9a45:   31 c0                                 	xor eax, eax
0x9a47:   4a 8d 34 27                           	lea rsi, [rdi + r12]
0x9a4b:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0x9a4e:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0x9a51:   48 ff c0                              	inc rax
0x9a54:   48 39 c3                              	cmp rbx, rax
0x9a57:   75 f2                                 	jne 0x9a4b <.Llzma_index_stream_size.1+0x58b>
0x9a59:   49 8b 45 28                           	mov rax, qword ptr [r13 + 0x28]
0x9a5d:   49 8b 95 e8 00 00 00                  	mov rdx, qword ptr [r13 + 0xe8]
0x9a64:   4e 8d 04 23                           	lea r8, [rbx + r12]
0x9a68:   45 8b 8d 00 01 00 00                  	mov r9d, dword ptr [r13 + 0x100]
0x9a6f:   49 8b 8d e0 00 00 00                  	mov rcx, qword ptr [r13 + 0xe0]
0x9a76:   49 01 f8                              	add r8, rdi
0x9a79:   48 8b 40 08                           	mov rax, qword ptr [rax + 8]
0x9a7d:   48 01 da                              	add rdx, rbx
0x9a80:   49 8b b5 f0 00 00 00                  	mov rsi, qword ptr [r13 + 0xf0]
0x9a87:   49 89 95 e8 00 00 00                  	mov qword ptr [r13 + 0xe8], rdx
0x9a8e:   4a 8b 04 c8                           	mov rax, qword ptr [rax + r9*8]
0x9a92:   41 53                                 	push r11
0x9a94:   4d 89 f1                              	mov r9, r14
0x9a97:   41 55                                 	push r13
0x9a99:   48 89 c7                              	mov rdi, rax
0x9a9c:   e8 af db ff ff                        	call 0x7650 <function_7650>
0x9aa1:   41 5e                                 	pop r14
0x9aa3:   41 5f                                 	pop r15
0x9aa5:   85 c0                                 	test eax, eax
0x9aa7:   75 0e                                 	jne 0x9ab7 <.Llzma_index_stream_size.1+0x5f7>
0x9aa9:   e9 84 06 00 00                        	jmp 0xa132 <.Llzma_index_stream_size.1+0xc72>
0x9aae:   4d 85 ff                              	test r15, r15
0x9ab1:   0f 85 89 07 00 00                     	jne 0xa240 <.Llzma_index_stream_size.1+0xd80>
0x9ab7:   4c 39 64 24 10                        	cmp qword ptr [rsp + 0x10], r12
0x9abc:   0f 82 18 07 00 00                     	jb 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ac2:   48 8b 44 24 10                        	mov rax, qword ptr [rsp + 0x10]
0x9ac7:   4c 29 e0                              	sub rax, r12
0x9aca:   48 39 d8                              	cmp rax, rbx
0x9acd:   0f 82 07 07 00 00                     	jb 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ad3:   8a 84 24 18 03 00 00                  	mov al, byte ptr [rsp + 0x318]
0x9ada:   a8 04                                 	test al, 4
0x9adc:   74 26                                 	je 0x9b04 <.Llzma_index_stream_size.1+0x644>
0x9ade:   49 8b 55 10                           	mov rdx, qword ptr [r13 + 0x10]
0x9ae2:   48 85 d2                              	test rdx, rdx
0x9ae5:   74 1d                                 	je 0x9b04 <.Llzma_index_stream_size.1+0x644>
0x9ae7:   48 8b 52 58                           	mov rdx, qword ptr [rdx + 0x58]
0x9aeb:   48 85 d2                              	test rdx, rdx
0x9aee:   74 14                                 	je 0x9b04 <.Llzma_index_stream_size.1+0x644>
0x9af0:   bf 00 00 00 80                        	mov edi, 0x80000000
0x9af5:   ff d2                                 	call rdx
0x9af7:   49 8b 45 30                           	mov rax, qword ptr [r13 + 0x30]
0x9afb:   c7 40 08 01 00 00 00                  	mov dword ptr [rax + 8], 1
0x9b02:   eb 16                                 	jmp 0x9b1a <.Llzma_index_stream_size.1+0x65a>
0x9b04:   49 8b 55 30                           	mov rdx, qword ptr [r13 + 0x30]
0x9b08:   45 31 d2                              	xor r10d, r10d
0x9b0b:   83 e0 05                              	and eax, 5
0x9b0e:   44 89 52 08                           	mov dword ptr [rdx + 8], r10d
0x9b12:   3c 05                                 	cmp al, 5
0x9b14:   0f 84 c0 06 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9b1a:   49 8b 45 10                           	mov rax, qword ptr [r13 + 0x10]
0x9b1e:   ff 50 10                              	call qword ptr [rax + 0x10]
0x9b21:   44 8a bc 24 18 03 00 00               	mov r15b, byte ptr [rsp + 0x318]
0x9b29:   41 89 85 90 00 00 00                  	mov dword ptr [r13 + 0x90], eax
0x9b30:   41 89 c6                              	mov r14d, eax
0x9b33:   45 89 fb                              	mov r11d, r15d
0x9b36:   41 80 e3 10                           	and r11b, 0x10
0x9b3a:   74 0e                                 	je 0x9b4a <.Llzma_index_stream_size.1+0x68a>
0x9b3c:   49 8b 45 30                           	mov rax, qword ptr [r13 + 0x30]
0x9b40:   83 78 04 00                           	cmp dword ptr [rax + 4], 0
0x9b44:   0f 84 90 06 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9b4a:   41 f6 c7 02                           	test r15b, 2
0x9b4e:   75 07                                 	jne 0x9b57 <.Llzma_index_stream_size.1+0x697>
0x9b50:   48 85 ed                              	test rbp, rbp
0x9b53:   74 20                                 	je 0x9b75 <.Llzma_index_stream_size.1+0x6b5>
0x9b55:   eb 2b                                 	jmp 0x9b82 <.Llzma_index_stream_size.1+0x6c2>
0x9b57:   48 8d bc 24 18 03 00 00               	lea rdi, [rsp + 0x318]
0x9b5f:   4c 89 ee                              	mov rsi, r13
0x9b62:   e8 99 e2 ff ff                        	call 0x7e00 <.Llzma_rc_prices.1>
0x9b67:   85 c0                                 	test eax, eax
0x9b69:   75 e5                                 	jne 0x9b50 <.Llzma_index_stream_size.1+0x690>
0x9b6b:   45 84 db                              	test r11b, r11b
0x9b6e:   74 e0                                 	je 0x9b50 <.Llzma_index_stream_size.1+0x690>
0x9b70:   e9 65 06 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9b75:   8a 8c 24 19 03 00 00                  	mov cl, byte ptr [rsp + 0x319]
0x9b7c:   84 c9                                 	test cl, cl
0x9b7e:   79 67                                 	jns 0x9be7 <.Llzma_index_stream_size.1+0x727>
0x9b80:   eb 77                                 	jmp 0x9bf9 <.Llzma_index_stream_size.1+0x739>
0x9b82:   83 fd 01                              	cmp ebp, 1
0x9b85:   74 0c                                 	je 0x9b93 <.Llzma_index_stream_size.1+0x6d3>
0x9b87:   83 fd 03                              	cmp ebp, 3
0x9b8a:   74 13                                 	je 0x9b9f <.Llzma_index_stream_size.1+0x6df>
0x9b8c:   31 c0                                 	xor eax, eax
0x9b8e:   e9 17 01 00 00                        	jmp 0x9caa <.Llzma_index_stream_size.1+0x7ea>
0x9b93:   f6 84 24 19 03 00 00 01               	test byte ptr [rsp + 0x319], 1
0x9b9b:   74 37                                 	je 0x9bd4 <.Llzma_index_stream_size.1+0x714>
0x9b9d:   eb ed                                 	jmp 0x9b8c <.Llzma_index_stream_size.1+0x6cc>
0x9b9f:   8a 94 24 1b 03 00 00                  	mov dl, byte ptr [rsp + 0x31b]
0x9ba6:   84 d2                                 	test dl, dl
0x9ba8:   79 17                                 	jns 0x9bc1 <.Llzma_index_stream_size.1+0x701>
0x9baa:   8a 8c 24 1a 03 00 00                  	mov cl, byte ptr [rsp + 0x31a]
0x9bb1:   31 c0                                 	xor eax, eax
0x9bb3:   f6 c1 20                              	test cl, 0x20
0x9bb6:   0f 85 92 00 00 00                     	jne 0x9c4e <.Llzma_index_stream_size.1+0x78e>
0x9bbc:   e9 e6 00 00 00                        	jmp 0x9ca7 <.Llzma_index_stream_size.1+0x7e7>
0x9bc1:   49 8b 45 20                           	mov rax, qword ptr [r13 + 0x20]
0x9bc5:   48 83 b8 c8 00 00 00 00               	cmp qword ptr [rax + 0xc8], 0
0x9bcd:   75 db                                 	jne 0x9baa <.Llzma_index_stream_size.1+0x6ea>
0x9bcf:   e9 06 06 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9bd4:   49 8b 45 20                           	mov rax, qword ptr [r13 + 0x20]
0x9bd8:   48 83 b8 c8 00 00 00 00               	cmp qword ptr [rax + 0xc8], 0
0x9be0:   75 aa                                 	jne 0x9b8c <.Llzma_index_stream_size.1+0x6cc>
0x9be2:   e9 f3 05 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9be7:   49 8b 45 20                           	mov rax, qword ptr [r13 + 0x20]
0x9beb:   48 83 b8 c8 00 00 00 00               	cmp qword ptr [rax + 0xc8], 0
0x9bf3:   0f 84 e1 05 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9bf9:   31 c0                                 	xor eax, eax
0x9bfb:   b2 ff                                 	mov dl, 0xff
0x9bfd:   f6 c1 02                              	test cl, 2
0x9c00:   74 0f                                 	je 0x9c11 <.Llzma_index_stream_size.1+0x751>
0x9c02:   66 8b 94 24 1a 03 00 00               	mov dx, word ptr [rsp + 0x31a]
0x9c0a:   66 c1 ea 06                           	shr dx, 6
0x9c0e:   83 e2 7f                              	and edx, 0x7f
0x9c11:   88 d0                                 	mov al, dl
0x9c13:   b2 ff                                 	mov dl, 0xff
0x9c15:   45 84 ff                              	test r15b, r15b
0x9c18:   79 0f                                 	jns 0x9c29 <.Llzma_index_stream_size.1+0x769>
0x9c1a:   48 8b 94 24 18 03 00 00               	mov rdx, qword ptr [rsp + 0x318]
0x9c22:   48 c1 ea 1d                           	shr rdx, 0x1d
0x9c26:   83 e2 1f                              	and edx, 0x1f
0x9c29:   80 e1 04                              	and cl, 4
0x9c2c:   88 d4                                 	mov ah, dl
0x9c2e:   74 46                                 	je 0x9c76 <.Llzma_index_stream_size.1+0x7b6>
0x9c30:   8a 94 24 1c 03 00 00                  	mov dl, byte ptr [rsp + 0x31c]
0x9c37:   25 ff ff 00 ff                        	and eax, 0xff00ffff
0x9c3c:   89 d1                                 	mov ecx, edx
0x9c3e:   c0 ea 05                              	shr dl, 5
0x9c41:   c0 e9 02                              	shr cl, 2
0x9c44:   83 e1 07                              	and ecx, 7
0x9c47:   c1 e1 10                              	shl ecx, 0x10
0x9c4a:   09 c8                                 	or eax, ecx
0x9c4c:   eb 4d                                 	jmp 0x9c9b <.Llzma_index_stream_size.1+0x7db>
0x9c4e:   40 b6 ff                              	mov sil, 0xff
0x9c51:   84 c9                                 	test cl, cl
0x9c53:   79 08                                 	jns 0x9c5d <.Llzma_index_stream_size.1+0x79d>
0x9c55:   40 8a b4 24 1c 03 00 00               	mov sil, byte ptr [rsp + 0x31c]
0x9c5d:   80 e1 40                              	and cl, 0x40
0x9c60:   40 88 f0                              	mov al, sil
0x9c63:   40 b6 ff                              	mov sil, 0xff
0x9c66:   74 05                                 	je 0x9c6d <.Llzma_index_stream_size.1+0x7ad>
0x9c68:   89 d6                                 	mov esi, edx
0x9c6a:   83 e6 3f                              	and esi, 0x3f
0x9c6d:   89 f1                                 	mov ecx, esi
0x9c6f:   80 e2 40                              	and dl, 0x40
0x9c72:   88 cc                                 	mov ah, cl
0x9c74:   75 09                                 	jne 0x9c7f <.Llzma_index_stream_size.1+0x7bf>
0x9c76:   0d 00 00 ff 00                        	or eax, 0xff0000
0x9c7b:   b2 ff                                 	mov dl, 0xff
0x9c7d:   eb 1c                                 	jmp 0x9c9b <.Llzma_index_stream_size.1+0x7db>
0x9c7f:   8a 94 24 19 03 00 00                  	mov dl, byte ptr [rsp + 0x319]
0x9c86:   25 ff ff 00 ff                        	and eax, 0xff00ffff
0x9c8b:   89 d1                                 	mov ecx, edx
0x9c8d:   c0 ea 03                              	shr dl, 3
0x9c90:   83 e1 07                              	and ecx, 7
0x9c93:   83 e2 07                              	and edx, 7
0x9c96:   c1 e1 10                              	shl ecx, 0x10
0x9c99:   09 c8                                 	or eax, ecx
0x9c9b:   c1 e2 18                              	shl edx, 0x18
0x9c9e:   25 ff ff ff 00                        	and eax, 0xffffff
0x9ca3:   09 d0                                 	or eax, edx
0x9ca5:   eb 03                                 	jmp 0x9caa <.Llzma_index_stream_size.1+0x7ea>
0x9ca7:   83 c8 ff                              	or eax, 0xffffffff
0x9caa:   41 89 45 54                           	mov dword ptr [r13 + 0x54], eax
0x9cae:   4e 8d 84 24 1d 03 00 00               	lea r8, [rsp + r12 + 0x31d]
0x9cb6:   45 85 f6                              	test r14d, r14d
0x9cb9:   0f 85 8d 04 00 00                     	jne 0xa14c <.Llzma_index_stream_size.1+0xc8c>
0x9cbf:   4d 8b 65 10                           	mov r12, qword ptr [r13 + 0x10]
0x9cc3:   4d 85 e4                              	test r12, r12
0x9cc6:   0f 84 0e 05 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ccc:   49 8b 4c 24 20                        	mov rcx, qword ptr [r12 + 0x20]
0x9cd1:   48 85 c9                              	test rcx, rcx
0x9cd4:   0f 84 00 05 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9cda:   49 83 7c 24 28 00                     	cmp qword ptr [r12 + 0x28], 0
0x9ce0:   0f 84 f4 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ce6:   49 83 7c 24 30 00                     	cmp qword ptr [r12 + 0x30], 0
0x9cec:   0f 84 e8 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9cf2:   48 85 ed                              	test rbp, rbp
0x9cf5:   0f 85 3c 02 00 00                     	jne 0x9f37 <.Llzma_index_stream_size.1+0xa77>
0x9cfb:   49 8b 45 20                           	mov rax, qword ptr [r13 + 0x20]
0x9cff:   48 85 c0                              	test rax, rax
0x9d02:   0f 84 d2 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d08:   48 83 78 58 00                        	cmp qword ptr [rax + 0x58], 0
0x9d0d:   0f 84 c7 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d13:   83 38 00                              	cmp dword ptr [rax], 0
0x9d16:   0f 84 be 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d1c:   80 bc 24 19 03 00 00 00               	cmp byte ptr [rsp + 0x319], 0
0x9d24:   78 30                                 	js 0x9d56 <.Llzma_index_stream_size.1+0x896>
0x9d26:   48 8b 90 c8 00 00 00                  	mov rdx, qword ptr [rax + 0xc8]
0x9d2d:   48 85 d2                              	test rdx, rdx
0x9d30:   0f 84 a4 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d36:   8b 0a                                 	mov ecx, dword ptr [rdx]
0x9d38:   83 f9 02                              	cmp ecx, 2
0x9d3b:   7f 10                                 	jg 0x9d4d <.Llzma_index_stream_size.1+0x88d>
0x9d3d:   85 c9                                 	test ecx, ecx
0x9d3f:   0f 88 95 04 00 00                     	js 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d45:   c7 02 03 00 00 00                     	mov dword ptr [rdx], 3
0x9d4b:   eb 09                                 	jmp 0x9d56 <.Llzma_index_stream_size.1+0x896>
0x9d4d:   83 f9 03                              	cmp ecx, 3
0x9d50:   0f 85 84 04 00 00                     	jne 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d56:   41 f6 c7 40                           	test r15b, 0x40
0x9d5a:   74 1f                                 	je 0x9d7b <.Llzma_index_stream_size.1+0x8bb>
0x9d5c:   48 8b 80 c0 00 00 00                  	mov rax, qword ptr [rax + 0xc0]
0x9d63:   48 85 c0                              	test rax, rax
0x9d66:   0f 84 6e 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d6c:   83 38 01                              	cmp dword ptr [rax], 1
0x9d6f:   0f 87 65 04 00 00                     	ja 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9d75:   45 31 c9                              	xor r9d, r9d
0x9d78:   44 89 08                              	mov dword ptr [rax], r9d
0x9d7b:   41 80 e7 20                           	and r15b, 0x20
0x9d7f:   c7 44 24 58 ff ff ff ff               	mov dword ptr [rsp + 0x58], 0xffffffff
0x9d87:   48 8d 7c 24 58                        	lea rdi, [rsp + 0x58]
0x9d8c:   74 19                                 	je 0x9da7 <.Llzma_index_stream_size.1+0x8e7>
0x9d8e:   40 8a b4 24 19 03 00 00               	mov sil, byte ptr [rsp + 0x319]
0x9d96:   4c 89 e2                              	mov rdx, r12
0x9d99:   40 c0 ee 03                           	shr sil, 3
0x9d9d:   83 e6 0f                              	and esi, 0xf
0x9da0:   e8 3b de ff ff                        	call 0x7be0 <.Lindex_decode.1>
0x9da5:   eb 15                                 	jmp 0x9dbc <.Llzma_index_stream_size.1+0x8fc>
0x9da7:   48 89 fe                              	mov rsi, rdi
0x9daa:   b9 01 00 00 00                        	mov ecx, 1
0x9daf:   ba 01 00 00 00                        	mov edx, 1
0x9db4:   4c 89 ef                              	mov rdi, r13
0x9db7:   e8 c4 de ff ff                        	call 0x7c80 <.Lindex_encode.1>
0x9dbc:   85 c0                                 	test eax, eax
0x9dbe:   0f 84 16 04 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9dc4:   8b 6c 24 58                           	mov ebp, dword ptr [rsp + 0x58]
0x9dc8:   45 31 c0                              	xor r8d, r8d
0x9dcb:   0f 57 c0                              	xorps xmm0, xmm0
0x9dce:   c6 44 24 57 00                        	mov byte ptr [rsp + 0x57], 0
0x9dd3:   44 89 44 24 60                        	mov dword ptr [rsp + 0x60], r8d
0x9dd8:   0f 11 44 24 68                        	movups xmmword ptr [rsp + 0x68], xmm0
0x9ddd:   85 ed                                 	test ebp, ebp
0x9ddf:   0f 88 f5 03 00 00                     	js 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9de5:   49 8b 5d 10                           	mov rbx, qword ptr [r13 + 0x10]
0x9de9:   48 85 db                              	test rbx, rbx
0x9dec:   0f 84 e8 03 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9df2:   48 83 7b 40 00                        	cmp qword ptr [rbx + 0x40], 0
0x9df7:   0f 84 dd 03 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9dfd:   48 83 7b 50 00                        	cmp qword ptr [rbx + 0x50], 0
0x9e02:   0f 84 d2 03 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9e08:   41 89 ee                              	mov r14d, ebp
0x9e0b:   41 bc 01 00 00 00                     	mov r12d, 1
0x9e11:   89 e9                                 	mov ecx, ebp
0x9e13:   41 c1 fe 06                           	sar r14d, 6
0x9e17:   49 d3 e4                              	shl r12, cl
0x9e1a:   4d 63 f6                              	movsxd r14, r14d
0x9e1d:   48 8d b4 24 a8 00 00 00               	lea rsi, [rsp + 0xa8]
0x9e25:   31 c0                                 	xor eax, eax
0x9e27:   45 31 c9                              	xor r9d, r9d
0x9e2a:   31 d2                                 	xor edx, edx
0x9e2c:   b9 20 00 00 00                        	mov ecx, 0x20
0x9e31:   48 89 f7                              	mov rdi, rsi
0x9e34:   4c 8d 44 24 68                        	lea r8, [rsp + 0x68]
0x9e39:   48 c7 44 24 70 00 65 cd 1d            	mov qword ptr [rsp + 0x70], 0x1dcd6500
0x9e42:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0x9e44:   31 ff                                 	xor edi, edi
0x9e46:   4e 89 a4 f4 a8 00 00 00               	mov qword ptr [rsp + r14*8 + 0xa8], r12
0x9e4e:   48 89 7c 24 68                        	mov qword ptr [rsp + 0x68], rdi
0x9e53:   8d 7d 01                              	lea edi, [rbp + 1]
0x9e56:   ff 53 40                              	call qword ptr [rbx + 0x40]
0x9e59:   85 c0                                 	test eax, eax
0x9e5b:   78 07                                 	js 0x9e64 <.Llzma_index_stream_size.1+0x9a4>
0x9e5d:   75 12                                 	jne 0x9e71 <.Llzma_index_stream_size.1+0x9b1>
0x9e5f:   e9 76 03 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9e64:   ff 53 50                              	call qword ptr [rbx + 0x50]
0x9e67:   83 38 04                              	cmp dword ptr [rax], 4
0x9e6a:   74 b1                                 	je 0x9e1d <.Llzma_index_stream_size.1+0x95d>
0x9e6c:   e9 69 03 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9e71:   4e 23 a4 f4 a8 00 00 00               	and r12, qword ptr [rsp + r14*8 + 0xa8]
0x9e79:   0f 84 5b 03 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9e7f:   48 8d 74 24 60                        	lea rsi, [rsp + 0x60]
0x9e84:   48 89 d9                              	mov rcx, rbx
0x9e87:   ba 04 00 00 00                        	mov edx, 4
0x9e8c:   89 ef                                 	mov edi, ebp
0x9e8e:   e8 0d d2 ff ff                        	call 0x70a0 <function_70a0>
0x9e93:   48 85 c0                              	test rax, rax
0x9e96:   0f 88 3e 03 00 00                     	js 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9e9c:   8b 44 24 60                           	mov eax, dword ptr [rsp + 0x60]
0x9ea0:   0f c8                                 	bswap eax
0x9ea2:   89 44 24 60                           	mov dword ptr [rsp + 0x60], eax
0x9ea6:   ff c8                                 	dec eax
0x9ea8:   83 f8 40                              	cmp eax, 0x40
0x9eab:   0f 87 29 03 00 00                     	ja 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9eb1:   48 8d 74 24 57                        	lea rsi, [rsp + 0x57]
0x9eb6:   48 89 d9                              	mov rcx, rbx
0x9eb9:   ba 01 00 00 00                        	mov edx, 1
0x9ebe:   89 ef                                 	mov edi, ebp
0x9ec0:   e8 db d1 ff ff                        	call 0x70a0 <function_70a0>
0x9ec5:   48 85 c0                              	test rax, rax
0x9ec8:   0f 88 0c 03 00 00                     	js 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ece:   8b 44 24 60                           	mov eax, dword ptr [rsp + 0x60]
0x9ed2:   49 8d b5 a0 00 00 00                  	lea rsi, [r13 + 0xa0]
0x9ed9:   48 89 d9                              	mov rcx, rbx
0x9edc:   89 ef                                 	mov edi, ebp
0x9ede:   8d 50 ff                              	lea edx, [rax - 1]
0x9ee1:   49 89 95 98 00 00 00                  	mov qword ptr [r13 + 0x98], rdx
0x9ee8:   e8 b3 d1 ff ff                        	call 0x70a0 <function_70a0>
0x9eed:   48 85 c0                              	test rax, rax
0x9ef0:   0f 88 e4 02 00 00                     	js 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9ef6:   49 8b 4d 20                           	mov rcx, qword ptr [r13 + 0x20]
0x9efa:   48 8b 71 18                           	mov rsi, qword ptr [rcx + 0x18]
0x9efe:   48 85 f6                              	test rsi, rsi
0x9f01:   0f 84 d3 02 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9f07:   8a 84 24 1a 03 00 00                  	mov al, byte ptr [rsp + 0x31a]
0x9f0e:   48 8b 51 58                           	mov rdx, qword ptr [rcx + 0x58]
0x9f12:   24 3f                                 	and al, 0x3f
0x9f14:   74 07                                 	je 0x9f1d <.Llzma_index_stream_size.1+0xa5d>
0x9f16:   0f b6 c0                              	movzx eax, al
0x9f19:   01 c0                                 	add eax, eax
0x9f1b:   eb 0d                                 	jmp 0x9f2a <.Llzma_index_stream_size.1+0xa6a>
0x9f1d:   b8 16 00 00 00                        	mov eax, 0x16
0x9f22:   48 85 d2                              	test rdx, rdx
0x9f25:   74 03                                 	je 0x9f2a <.Llzma_index_stream_size.1+0xa6a>
0x9f27:   8b 42 f8                              	mov eax, dword ptr [rdx - 8]
0x9f2a:   ff c0                                 	inc eax
0x9f2c:   89 41 60                              	mov dword ptr [rcx + 0x60], eax
0x9f2f:   48 89 32                              	mov qword ptr [rdx], rsi
0x9f32:   e9 5f 01 00 00                        	jmp 0xa096 <.Llzma_index_stream_size.1+0xbd6>
0x9f37:   8a 84 24 19 03 00 00                  	mov al, byte ptr [rsp + 0x319]
0x9f3e:   83 fd 01                              	cmp ebp, 1
0x9f41:   75 38                                 	jne 0x9f7b <.Llzma_index_stream_size.1+0xabb>
0x9f43:   40 8a b4 24 18 03 00 00               	mov sil, byte ptr [rsp + 0x318]
0x9f4b:   89 c2                                 	mov edx, eax
0x9f4d:   89 c7                                 	mov edi, eax
0x9f4f:   4d 89 e8                              	mov r8, r13
0x9f52:   d0 ea                                 	shr dl, 1
0x9f54:   0f b6 8c 24 1b 03 00 00               	movzx ecx, byte ptr [rsp + 0x31b]
0x9f5c:   83 e7 01                              	and edi, 1
0x9f5f:   40 c0 ee 06                           	shr sil, 6
0x9f63:   83 e2 01                              	and edx, 1
0x9f66:   83 e6 01                              	and esi, 1
0x9f69:   e8 02 de ff ff                        	call 0x7d70 <.Llzma_block_unpadded_size.1>
0x9f6e:   85 c0                                 	test eax, eax
0x9f70:   0f 84 64 02 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9f76:   e9 1b 01 00 00                        	jmp 0xa096 <.Llzma_index_stream_size.1+0xbd6>
0x9f7b:   83 fd 02                              	cmp ebp, 2
0x9f7e:   0f 85 b6 00 00 00                     	jne 0xa03a <.Llzma_index_stream_size.1+0xb7a>
0x9f84:   0f b7 db                              	movzx ebx, bx
0x9f87:   a8 01                                 	test al, 1
0x9f89:   74 1c                                 	je 0x9fa7 <.Llzma_index_stream_size.1+0xae7>
0x9f8b:   48 83 fb 08                           	cmp rbx, 8
0x9f8f:   0f 86 45 02 00 00                     	jbe 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9f95:   45 8b 30                              	mov r14d, dword ptr [r8]
0x9f98:   41 8b 78 04                           	mov edi, dword ptr [r8 + 4]
0x9f9c:   48 83 eb 08                           	sub rbx, 8
0x9fa0:   bd 08 00 00 00                        	mov ebp, 8
0x9fa5:   eb 04                                 	jmp 0x9fab <.Llzma_index_stream_size.1+0xaeb>
0x9fa7:   31 ff                                 	xor edi, edi
0x9fa9:   31 ed                                 	xor ebp, ebp
0x9fab:   45 84 ff                              	test r15b, r15b
0x9fae:   79 21                                 	jns 0x9fd1 <.Llzma_index_stream_size.1+0xb11>
0x9fb0:   48 83 fb 02                           	cmp rbx, 2
0x9fb4:   0f 86 20 02 00 00                     	jbe 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9fba:   41 0f b7 04 28                        	movzx eax, word ptr [r8 + rbp]
0x9fbf:   48 83 eb 02                           	sub rbx, 2
0x9fc3:   48 83 c5 02                           	add rbp, 2
0x9fc7:   48 39 d8                              	cmp rax, rbx
0x9fca:   73 0d                                 	jae 0x9fd9 <.Llzma_index_stream_size.1+0xb19>
0x9fcc:   e9 09 02 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9fd1:   0f b7 84 24 1b 03 00 00               	movzx eax, word ptr [rsp + 0x31b]
0x9fd9:   48 39 c3                              	cmp rbx, rax
0x9fdc:   0f 82 f8 01 00 00                     	jb 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0x9fe2:   85 ff                                 	test edi, edi
0x9fe4:   75 07                                 	jne 0x9fed <.Llzma_index_stream_size.1+0xb2d>
0x9fe6:   45 85 f6                              	test r14d, r14d
0x9fe9:   75 19                                 	jne 0xa004 <.Llzma_index_stream_size.1+0xb44>
0x9feb:   eb 37                                 	jmp 0xa024 <.Llzma_index_stream_size.1+0xb64>
0x9fed:   4c 89 04 24                           	mov qword ptr [rsp], r8
0x9ff1:   89 fa                                 	mov edx, edi
0x9ff3:   89 fe                                 	mov esi, edi
0x9ff5:   ff d1                                 	call rcx
0x9ff7:   4c 8b 04 24                           	mov r8, qword ptr [rsp]
0x9ffb:   ff c0                                 	inc eax
0x9ffd:   75 e7                                 	jne 0x9fe6 <.Llzma_index_stream_size.1+0xb26>
0x9fff:   e9 d6 01 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa004:   49 8b 45 10                           	mov rax, qword ptr [r13 + 0x10]
0xa008:   4c 89 04 24                           	mov qword ptr [rsp], r8
0xa00c:   44 89 f2                              	mov edx, r14d
0xa00f:   44 89 f6                              	mov esi, r14d
0xa012:   44 89 f7                              	mov edi, r14d
0xa015:   ff 50 28                              	call qword ptr [rax + 0x28]
0xa018:   4c 8b 04 24                           	mov r8, qword ptr [rsp]
0xa01c:   ff c0                                 	inc eax
0xa01e:   0f 84 b6 01 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa024:   49 8d 3c 28                           	lea rdi, [r8 + rbp]
0xa028:   80 3f 00                              	cmp byte ptr [rdi], 0
0xa02b:   0f 84 a9 01 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa031:   49 8b 45 10                           	mov rax, qword ptr [r13 + 0x10]
0xa035:   ff 50 30                              	call qword ptr [rax + 0x30]
0xa038:   eb 5c                                 	jmp 0xa096 <.Llzma_index_stream_size.1+0xbd6>
0xa03a:   83 e0 c0                              	and eax, 0xffffffc0
0xa03d:   3c c0                                 	cmp al, 0xc0
0xa03f:   0f 85 95 01 00 00                     	jne 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa045:   49 83 7c 24 18 00                     	cmp qword ptr [r12 + 0x18], 0
0xa04b:   0f 84 89 01 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa051:   49 8b 44 24 40                        	mov rax, qword ptr [r12 + 0x40]
0xa056:   48 85 c0                              	test rax, rax
0xa059:   0f 84 7b 01 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa05f:   31 c9                                 	xor ecx, ecx
0xa061:   31 ff                                 	xor edi, edi
0xa063:   45 31 c9                              	xor r9d, r9d
0xa066:   31 d2                                 	xor edx, edx
0xa068:   48 89 8c 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rcx
0xa070:   4c 8d 84 24 a8 00 00 00               	lea r8, [rsp + 0xa8]
0xa078:   31 c9                                 	xor ecx, ecx
0xa07a:   31 f6                                 	xor esi, esi
0xa07c:   48 c7 84 24 a8 00 00 00 05 00 00 00   	mov qword ptr [rsp + 0xa8], 5
0xa088:   ff d0                                 	call rax
0xa08a:   31 ff                                 	xor edi, edi
0xa08c:   41 ff 54 24 18                        	call qword ptr [r12 + 0x18]
0xa091:   e9 44 01 00 00                        	jmp 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa096:   0f 57 c0                              	xorps xmm0, xmm0
0xa099:   31 c0                                 	xor eax, eax
0xa09b:   48 8d bc 24 b8 00 00 00               	lea rdi, [rsp + 0xb8]
0xa0a3:   31 d2                                 	xor edx, edx
0xa0a5:   b9 3c 00 00 00                        	mov ecx, 0x3c
0xa0aa:   c6 44 24 68 01                        	mov byte ptr [rsp + 0x68], 1
0xa0af:   be 01 00 00 00                        	mov esi, 1
0xa0b4:   0f 11 84 24 a8 00 00 00               	movups xmmword ptr [rsp + 0xa8], xmm0
0xa0bc:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa0be:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0xa0c2:   48 8d 7c 24 68                        	lea rdi, [rsp + 0x68]
0xa0c7:   c6 84 24 a8 00 00 00 80               	mov byte ptr [rsp + 0xa8], 0x80
0xa0cf:   c6 84 24 9e 01 00 00 08               	mov byte ptr [rsp + 0x19e], 8
0xa0d7:   c6 84 24 a7 01 00 00 01               	mov byte ptr [rsp + 0x1a7], 1
0xa0df:   ff 90 e0 00 00 00                     	call qword ptr [rax + 0xe0]
0xa0e5:   48 89 c3                              	mov rbx, rax
0xa0e8:   48 85 c0                              	test rax, rax
0xa0eb:   0f 84 e9 00 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa0f1:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0xa0f5:   be 00 01 00 00                        	mov esi, 0x100
0xa0fa:   48 8d bc 24 a8 00 00 00               	lea rdi, [rsp + 0xa8]
0xa102:   31 d2                                 	xor edx, edx
0xa104:   ff 90 e0 00 00 00                     	call qword ptr [rax + 0xe0]
0xa10a:   48 89 c6                              	mov rsi, rax
0xa10d:   48 85 c0                              	test rax, rax
0xa110:   0f 84 c4 00 00 00                     	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa116:   49 8b 45 08                           	mov rax, qword ptr [r13 + 8]
0xa11a:   31 c9                                 	xor ecx, ecx
0xa11c:   48 8b 7c 24 20                        	mov rdi, qword ptr [rsp + 0x20]
0xa121:   48 89 da                              	mov rdx, rbx
0xa124:   ff 90 e8 00 00 00                     	call qword ptr [rax + 0xe8]
0xa12a:   ff c8                                 	dec eax
0xa12c:   0f 85 a8 00 00 00                     	jne 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa132:   41 c7 45 18 01 00 00 00               	mov dword ptr [r13 + 0x18], 1
0xa13a:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0xa13f:   c7 00 01 00 00 00                     	mov dword ptr [rax], 1
0xa145:   31 c0                                 	xor eax, eax
0xa147:   e9 ff 00 00 00                        	jmp 0xa24b <.Llzma_index_stream_size.1+0xd8b>
0xa14c:   48 8b 7c 24 28                        	mov rdi, qword ptr [rsp + 0x28]
0xa151:   31 c0                                 	xor eax, eax
0xa153:   b9 0b 00 00 00                        	mov ecx, 0xb
0xa158:   4c 89 ee                              	mov rsi, r13
0xa15b:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa15d:   48 8d 84 24 18 03 00 00               	lea rax, [rsp + 0x318]
0xa165:   48 8d bc 24 a8 00 00 00               	lea rdi, [rsp + 0xa8]
0xa16d:   89 ac 24 a8 00 00 00                  	mov dword ptr [rsp + 0xa8], ebp
0xa174:   48 89 84 24 b0 00 00 00               	mov qword ptr [rsp + 0xb0], rax
0xa17c:   48 8b 84 24 08 03 00 00               	mov rax, qword ptr [rsp + 0x308]
0xa184:   4c 89 84 24 c8 00 00 00               	mov qword ptr [rsp + 0xc8], r8
0xa18c:   48 89 84 24 b8 00 00 00               	mov qword ptr [rsp + 0xb8], rax
0xa194:   48 8b 84 24 10 03 00 00               	mov rax, qword ptr [rsp + 0x310]
0xa19c:   66 89 9c 24 d0 00 00 00               	mov word ptr [rsp + 0xd0], bx
0xa1a4:   48 89 84 24 c0 00 00 00               	mov qword ptr [rsp + 0xc0], rax
0xa1ac:   48 8b 44 24 20                        	mov rax, qword ptr [rsp + 0x20]
0xa1b1:   48 89 84 24 d8 00 00 00               	mov qword ptr [rsp + 0xd8], rax
0xa1b9:   e8 d2 e0 ff ff                        	call 0x8290 <.Llzip_decoder_memconfig.part.0>
0xa1be:   85 c0                                 	test eax, eax
0xa1c0:   74 18                                 	je 0xa1da <.Llzma_index_stream_size.1+0xd1a>
0xa1c2:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0xa1c7:   31 d2                                 	xor edx, edx
0xa1c9:   41 c7 45 18 01 00 00 00               	mov dword ptr [r13 + 0x18], 1
0xa1d1:   89 10                                 	mov dword ptr [rax], edx
0xa1d3:   b8 01 00 00 00                        	mov eax, 1
0xa1d8:   eb 71                                 	jmp 0xa24b <.Llzma_index_stream_size.1+0xd8b>
0xa1da:   48 8d 94 24 85 05 00 00               	lea rdx, [rsp + 0x585]
0xa1e2:   b9 39 00 00 00                        	mov ecx, 0x39
0xa1e7:   31 c0                                 	xor eax, eax
0xa1e9:   41 c7 45 18 01 00 00 00               	mov dword ptr [r13 + 0x18], 1
0xa1f1:   48 89 d7                              	mov rdi, rdx
0xa1f4:   f3 aa                                 	rep stosb byte ptr [rdi], al
0xa1f6:   f6 84 24 18 03 00 00 01               	test byte ptr [rsp + 0x318], 1
0xa1fe:   0f 84 36 ff ff ff                     	je 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0xa204:   49 8b 45 10                           	mov rax, qword ptr [r13 + 0x10]
0xa208:   48 85 c0                              	test rax, rax
0xa20b:   0f 84 34 ff ff ff                     	je 0xa145 <.Llzma_index_stream_size.1+0xc85>
0xa211:   48 8b 40 18                           	mov rax, qword ptr [rax + 0x18]
0xa215:   48 85 c0                              	test rax, rax
0xa218:   0f 84 27 ff ff ff                     	je 0xa145 <.Llzma_index_stream_size.1+0xc85>
0xa21e:   31 ff                                 	xor edi, edi
0xa220:   ff d0                                 	call rax
0xa222:   e9 1e ff ff ff                        	jmp 0xa145 <.Llzma_index_stream_size.1+0xc85>
0xa227:   41 c7 45 18 01 00 00 00               	mov dword ptr [r13 + 0x18], 1
0xa22f:   48 83 7c 24 08 00                     	cmp qword ptr [rsp + 8], 0
0xa235:   0f 85 ff fe ff ff                     	jne 0xa13a <.Llzma_index_stream_size.1+0xc7a>
0xa23b:   e9 05 ff ff ff                        	jmp 0xa145 <.Llzma_index_stream_size.1+0xc85>
0xa240:   41 bc 87 00 00 00                     	mov r12d, 0x87
0xa246:   e9 77 f8 ff ff                        	jmp 0x9ac2 <.Llzma_index_stream_size.1+0x602>
0xa24b:   48 81 c4 c8 05 00 00                  	add rsp, 0x5c8
0xa252:   5b                                    	pop rbx
0xa253:   5d                                    	pop rbp
0xa254:   41 5c                                 	pop r12
0xa256:   41 5d                                 	pop r13
0xa258:   41 5e                                 	pop r14
0xa25a:   41 5f                                 	pop r15
0xa25c:   c3                                    	ret 
; section: .text.lzma_index_prealloa
; function: .Llzma_index_prealloc.0 at 0xa260 -- 0xa2ed
0xa260:   f3 0f 1e fa                           	endbr64 
0xa264:   41 56                                 	push r14
0xa266:   41 55                                 	push r13
0xa268:   41 54                                 	push r12
0xa26a:   49 89 f4                              	mov r12, rsi
0xa26d:   55                                    	push rbp
0xa26e:   48 83 ec 28                           	sub rsp, 0x28
0xa272:   48 8b 35 c7 28 00 00                  	mov rsi, qword ptr [rip + 0x28c7]
0xa279:   48 85 f6                              	test rsi, rsi
0xa27c:   74 61                                 	je 0xa2df <.Llzma_index_prealloc.0+0x7f>
0xa27e:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0xa282:   48 85 c0                              	test rax, rax
0xa285:   74 58                                 	je 0xa2df <.Llzma_index_prealloc.0+0x7f>
0xa287:   4c 8b 30                              	mov r14, qword ptr [rax]
0xa28a:   4d 85 f6                              	test r14, r14
0xa28d:   74 50                                 	je 0xa2df <.Llzma_index_prealloc.0+0x7f>
0xa28f:   89 fd                                 	mov ebp, edi
0xa291:   49 89 d5                              	mov r13, rdx
0xa294:   48 85 c9                              	test rcx, rcx
0xa297:   74 2e                                 	je 0xa2c7 <.Llzma_index_prealloc.0+0x67>
0xa299:   48 8b f9                              	mov rdi, rcx
0xa29c:   48 8d 54 24 1c                        	lea rdx, [rsp + 0x1c]
0xa2a1:   48 89 0c 24                           	mov qword ptr [rsp], rcx
0xa2a5:   44 89 44 24 0c                        	mov dword ptr [rsp + 0xc], r8d
0xa2aa:   c7 44 24 1c 01 00 00 00               	mov dword ptr [rsp + 0x1c], 1
0xa2b2:   e8 09 f2 ff ff                        	call 0x94c0 <.Llzma_index_stream_size.1>
0xa2b7:   83 7c 24 1c 00                        	cmp dword ptr [rsp + 0x1c], 0
0xa2bc:   48 8b 0c 24                           	mov rcx, qword ptr [rsp]
0xa2c0:   44 8b 44 24 0c                        	mov r8d, dword ptr [rsp + 0xc]
0xa2c5:   74 1a                                 	je 0xa2e1 <.Llzma_index_prealloc.0+0x81>
0xa2c7:   48 83 c4 28                           	add rsp, 0x28
0xa2cb:   4c 89 ea                              	mov rdx, r13
0xa2ce:   4c 89 e6                              	mov rsi, r12
0xa2d1:   89 ef                                 	mov edi, ebp
0xa2d3:   4c 89 f0                              	mov rax, r14
0xa2d6:   5d                                    	pop rbp
0xa2d7:   41 5c                                 	pop r12
0xa2d9:   41 5d                                 	pop r13
0xa2db:   41 5e                                 	pop r14
0xa2dd:   ff e0                                 	jmp rax
0xa2df:   31 c0                                 	xor eax, eax
0xa2e1:   48 83 c4 28                           	add rsp, 0x28
0xa2e5:   5d                                    	pop rbp
0xa2e6:   41 5c                                 	pop r12
0xa2e8:   41 5d                                 	pop r13
0xa2ea:   41 5e                                 	pop r14
0xa2ec:   c3                                    	ret 
; section: .text.lzma_index_memusaga
; function: .Llzma_index_memusage.part.0 at 0xa2f0 -- 0xa350
0xa2f0:   f3 0f 1e fa                           	endbr64 
0xa2f4:   41 54                                 	push r12
0xa2f6:   55                                    	push rbp
0xa2f7:   53                                    	push rbx
0xa2f8:   48 89 f3                              	mov rbx, rsi
0xa2fb:   48 83 ec 10                           	sub rsp, 0x10
0xa2ff:   48 8b 35 3a 28 00 00                  	mov rsi, qword ptr [rip + 0x283a]
0xa306:   48 85 f6                              	test rsi, rsi
0xa309:   74 3a                                 	je 0xa345 <.Llzma_index_memusage.part.0+0x55>
0xa30b:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0xa30f:   48 85 c0                              	test rax, rax
0xa312:   74 31                                 	je 0xa345 <.Llzma_index_memusage.part.0+0x55>
0xa314:   4c 8b 60 08                           	mov r12, qword ptr [rax + 8]
0xa318:   4d 85 e4                              	test r12, r12
0xa31b:   74 28                                 	je 0xa345 <.Llzma_index_memusage.part.0+0x55>
0xa31d:   48 8b ef                              	mov rbp, rdi
0xa320:   48 85 db                              	test rbx, rbx
0xa323:   74 0d                                 	je 0xa332 <.Llzma_index_memusage.part.0+0x42>
0xa325:   48 8d 54 24 0c                        	lea rdx, [rsp + 0xc]
0xa32a:   48 8b fb                              	mov rdi, rbx
0xa32d:   e8 8e f1 ff ff                        	call 0x94c0 <.Llzma_index_stream_size.1>
0xa332:   48 83 c4 10                           	add rsp, 0x10
0xa336:   48 89 de                              	mov rsi, rbx
0xa339:   48 8b fd                              	mov rdi, rbp
0xa33c:   4c 89 e0                              	mov rax, r12
0xa33f:   5b                                    	pop rbx
0xa340:   5d                                    	pop rbp
0xa341:   41 5c                                 	pop r12
0xa343:   ff e0                                 	jmp rax
0xa345:   48 83 c4 10                           	add rsp, 0x10
0xa349:   33 c0                                 	xor eax, eax
0xa34b:   5b                                    	pop rbx
0xa34c:   5d                                    	pop rbp
0xa34d:   41 5c                                 	pop r12
0xa34f:   c3                                    	ret 
; section: .text.lzma_index_inia
; function: .Llzma_index_init.0 at 0xa350 -- 0xa3c0
0xa350:   f3 0f 1e fa                           	endbr64 
0xa354:   41 56                                 	push r14
0xa356:   41 54                                 	push r12
0xa358:   55                                    	push rbp
0xa359:   48 89 f5                              	mov rbp, rsi
0xa35c:   48 83 ec 20                           	sub rsp, 0x20
0xa360:   48 8b 35 d9 27 00 00                  	mov rsi, qword ptr [rip + 0x27d9]
0xa367:   48 85 f6                              	test rsi, rsi
0xa36a:   74 4a                                 	je 0xa3b6 <.Llzma_index_init.0+0x66>
0xa36c:   48 8b 46 08                           	mov rax, qword ptr [rsi + 8]
0xa370:   48 85 c0                              	test rax, rax
0xa373:   74 41                                 	je 0xa3b6 <.Llzma_index_init.0+0x66>
0xa375:   4c 8b 70 10                           	mov r14, qword ptr [rax + 0x10]
0xa379:   4d 85 f6                              	test r14, r14
0xa37c:   74 38                                 	je 0xa3b6 <.Llzma_index_init.0+0x66>
0xa37e:   49 89 d4                              	mov r12, rdx
0xa381:   48 85 ff                              	test rdi, rdi
0xa384:   74 1c                                 	je 0xa3a2 <.Llzma_index_init.0+0x52>
0xa386:   48 8d 54 24 1c                        	lea rdx, [rsp + 0x1c]
0xa38b:   48 89 4c 24 08                        	mov qword ptr [rsp + 8], rcx
0xa390:   48 89 3c 24                           	mov qword ptr [rsp], rdi
0xa394:   e8 27 f1 ff ff                        	call 0x94c0 <.Llzma_index_stream_size.1>
0xa399:   48 8b 4c 24 08                        	mov rcx, qword ptr [rsp + 8]
0xa39e:   48 8b 3c 24                           	mov rdi, qword ptr [rsp]
0xa3a2:   48 83 c4 20                           	add rsp, 0x20
0xa3a6:   4c 89 e2                              	mov rdx, r12
0xa3a9:   48 8b f5                              	mov rsi, rbp
0xa3ac:   4c 89 f0                              	mov rax, r14
0xa3af:   5d                                    	pop rbp
0xa3b0:   41 5c                                 	pop r12
0xa3b2:   41 5e                                 	pop r14
0xa3b4:   ff e0                                 	jmp rax
0xa3b6:   48 83 c4 20                           	add rsp, 0x20
0xa3ba:   5d                                    	pop rbp
0xa3bb:   41 5c                                 	pop r12
0xa3bd:   41 5e                                 	pop r14
0xa3bf:   c3                                    	ret 
; section: .text.parse_lzma12z
; function: .Llzma12_mode_map.part.1 at 0xa3c0 -- 0xa712
0xa3c0:   f3 0f 1e fa                           	endbr64 
0xa3c4:   41 57                                 	push r15
0xa3c6:   31 c0                                 	xor eax, eax
0xa3c8:   b9 3c 00 00 00                        	mov ecx, 0x3c
0xa3cd:   0f 57 c0                              	xorps xmm0, xmm0
0xa3d0:   41 56                                 	push r14
0xa3d2:   41 89 fe                              	mov r14d, edi
0xa3d5:   41 55                                 	push r13
0xa3d7:   41 54                                 	push r12
0xa3d9:   55                                    	push rbp
0xa3da:   48 89 d5                              	mov rbp, rdx
0xa3dd:   53                                    	push rbx
0xa3de:   48 81 ec 28 04 00 00                  	sub rsp, 0x428
0xa3e5:   48 8b 15 54 27 00 00                  	mov rdx, qword ptr [rip + 0x2754]
0xa3ec:   48 8d 7c 24 30                        	lea rdi, [rsp + 0x30]
0xa3f1:   48 8b 5a 30                           	mov rbx, qword ptr [rdx + 0x30]
0xa3f5:   4c 8b 6a 10                           	mov r13, qword ptr [rdx + 0x10]
0xa3f9:   0f 11 44 24 20                        	movups xmmword ptr [rsp + 0x20], xmm0
0xa3fe:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa400:   48 8d bc 24 30 01 00 00               	lea rdi, [rsp + 0x130]
0xa408:   b9 3c 00 00 00                        	mov ecx, 0x3c
0xa40d:   0f 11 84 24 20 01 00 00               	movups xmmword ptr [rsp + 0x120], xmm0
0xa415:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa417:   48 8d bc 24 30 02 00 00               	lea rdi, [rsp + 0x230]
0xa41f:   b9 7c 00 00 00                        	mov ecx, 0x7c
0xa424:   0f 11 84 24 20 02 00 00               	movups xmmword ptr [rsp + 0x220], xmm0
0xa42c:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xa42e:   48 85 ed                              	test rbp, rbp
0xa431:   0f 84 c3 02 00 00                     	je 0xa6fa <.Llzma12_mode_map.part.1+0x33a>
0xa437:   83 3b 01                              	cmp dword ptr [rbx], 1
0xa43a:   0f 84 c0 02 00 00                     	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa440:   83 ba 90 00 00 00 00                  	cmp dword ptr [rdx + 0x90], 0
0xa447:   0f 85 b3 02 00 00                     	jne 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa44d:   48 83 7b 48 00                        	cmp qword ptr [rbx + 0x48], 0
0xa452:   74 0b                                 	je 0xa45f <.Llzma12_mode_map.part.1+0x9f>
0xa454:   48 83 7b 50 00                        	cmp qword ptr [rbx + 0x50], 0
0xa459:   0f 84 a1 02 00 00                     	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa45f:   48 89 ef                              	mov rdi, rbp
0xa462:   e8 e9 cb ff ff                        	call 0x7050 <function_7050>
0xa467:   4c 8d 64 05 00                        	lea r12, [rbp + rax]
0xa46c:   4c 39 e5                              	cmp rbp, r12
0xa46f:   0f 83 8b 02 00 00                     	jae 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa475:   4c 89 e6                              	mov rsi, r12
0xa478:   48 89 ef                              	mov rdi, rbp
0xa47b:   e8 20 04 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0xa480:   3d 90 07 00 00                        	cmp eax, 0x790
0xa485:   75 69                                 	jne 0xa4f0 <.Llzma12_mode_map.part.1+0x130>
0xa487:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xa48b:   4d 85 ed                              	test r13, r13
0xa48e:   41 0f 95 c4                           	setne r12b
0xa492:   83 7b 08 00                           	cmp dword ptr [rbx + 8], 0
0xa496:   8a 10                                 	mov dl, byte ptr [rax]
0xa498:   8a 40 01                              	mov al, byte ptr [rax + 1]
0xa49b:   88 94 24 20 02 00 00                  	mov byte ptr [rsp + 0x220], dl
0xa4a2:   88 84 24 21 02 00 00                  	mov byte ptr [rsp + 0x221], al
0xa4a9:   c7 03 01 00 00 00                     	mov dword ptr [rbx], 1
0xa4af:   74 15                                 	je 0xa4c6 <.Llzma12_mode_map.part.1+0x106>
0xa4b1:   45 84 e4                              	test r12b, r12b
0xa4b4:   74 10                                 	je 0xa4c6 <.Llzma12_mode_map.part.1+0x106>
0xa4b6:   49 8b 45 58                           	mov rax, qword ptr [r13 + 0x58]
0xa4ba:   48 85 c0                              	test rax, rax
0xa4bd:   74 07                                 	je 0xa4c6 <.Llzma12_mode_map.part.1+0x106>
0xa4bf:   bf ff 00 00 00                        	mov edi, 0xff
0xa4c4:   ff d0                                 	call rax
0xa4c6:   31 c0                                 	xor eax, eax
0xa4c8:   48 8d 94 24 20 02 00 00               	lea rdx, [rsp + 0x220]
0xa4d0:   48 89 e9                              	mov rcx, rbp
0xa4d3:   44 89 f6                              	mov esi, r14d
0xa4d6:   48 89 df                              	mov rdi, rbx
0xa4d9:   e8 42 cf ff ff                        	call 0x7420 <function_7420>
0xa4de:   83 7b 08 00                           	cmp dword ptr [rbx + 8], 0
0xa4e2:   0f 84 18 02 00 00                     	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa4e8:   45 84 e4                              	test r12b, r12b
0xa4eb:   e9 ee 01 00 00                        	jmp 0xa6de <.Llzma12_mode_map.part.1+0x31e>
0xa4f0:   3d 70 08 00 00                        	cmp eax, 0x870
0xa4f5:   74 0b                                 	je 0xa502 <.Llzma12_mode_map.part.1+0x142>
0xa4f7:   3d a0 01 00 00                        	cmp eax, 0x1a0
0xa4fc:   0f 85 f0 01 00 00                     	jne 0xa6f2 <.Llzma12_mode_map.part.1+0x332>
0xa502:   4c 8d 4d 17                           	lea r9, [rbp + 0x17]
0xa506:   3d 70 08 00 00                        	cmp eax, 0x870
0xa50b:   75 04                                 	jne 0xa511 <.Llzma12_mode_map.part.1+0x151>
0xa50d:   4c 8d 4d 16                           	lea r9, [rbp + 0x16]
0xa511:   48 8d 44 24 20                        	lea rax, [rsp + 0x20]
0xa516:   45 31 f6                              	xor r14d, r14d
0xa519:   45 31 c0                              	xor r8d, r8d
0xa51c:   45 31 ff                              	xor r15d, r15d
0xa51f:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xa524:   4c 89 e6                              	mov rsi, r12
0xa527:   48 89 ef                              	mov rdi, rbp
0xa52a:   4c 89 44 24 18                        	mov qword ptr [rsp + 0x18], r8
0xa52f:   4c 89 4c 24 10                        	mov qword ptr [rsp + 0x10], r9
0xa534:   e8 67 03 00 00                        	call 0xa8a0 <.Lsimple_coder_update.0>
0xa539:   4c 8b 4c 24 10                        	mov r9, qword ptr [rsp + 0x10]
0xa53e:   4c 8b 44 24 18                        	mov r8, qword ptr [rsp + 0x18]
0xa543:   3d 78 06 00 00                        	cmp eax, 0x678
0xa548:   74 33                                 	je 0xa57d <.Llzma12_mode_map.part.1+0x1bd>
0xa54a:   3d 10 08 00 00                        	cmp eax, 0x810
0xa54f:   75 51                                 	jne 0xa5a2 <.Llzma12_mode_map.part.1+0x1e2>
0xa551:   49 89 ef                              	mov r15, rbp
0xa554:   4d 29 cf                              	sub r15, r9
0xa557:   49 81 ff ff 00 00 00                  	cmp r15, 0xff
0xa55e:   0f 87 96 01 00 00                     	ja 0xa6fa <.Llzma12_mode_map.part.1+0x33a>
0xa564:   48 8d 84 24 20 01 00 00               	lea rax, [rsp + 0x120]
0xa56c:   4c 89 ce                              	mov rsi, r9
0xa56f:   4c 8d 45 06                           	lea r8, [rbp + 6]
0xa573:   4c 89 f9                              	mov rcx, r15
0xa576:   48 89 c7                              	mov rdi, rax
0xa579:   f3 a4                                 	rep movsb byte ptr [rdi], byte ptr [rsi]
0xa57b:   eb 25                                 	jmp 0xa5a2 <.Llzma12_mode_map.part.1+0x1e2>
0xa57d:   4d 85 c0                              	test r8, r8
0xa580:   74 20                                 	je 0xa5a2 <.Llzma12_mode_map.part.1+0x1e2>
0xa582:   49 89 ee                              	mov r14, rbp
0xa585:   4d 29 c6                              	sub r14, r8
0xa588:   49 81 fe ff 00 00 00                  	cmp r14, 0xff
0xa58f:   0f 87 65 01 00 00                     	ja 0xa6fa <.Llzma12_mode_map.part.1+0x33a>
0xa595:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0xa59a:   4c 89 c6                              	mov rsi, r8
0xa59d:   4c 89 f1                              	mov rcx, r14
0xa5a0:   f3 a4                                 	rep movsb byte ptr [rdi], byte ptr [rsi]
0xa5a2:   48 ff c5                              	inc rbp
0xa5a5:   4c 39 e5                              	cmp rbp, r12
0xa5a8:   0f 82 76 ff ff ff                     	jb 0xa524 <.Llzma12_mode_map.part.1+0x164>
0xa5ae:   4d 85 ff                              	test r15, r15
0xa5b1:   0f 84 43 01 00 00                     	je 0xa6fa <.Llzma12_mode_map.part.1+0x33a>
0xa5b7:   4d 85 f6                              	test r14, r14
0xa5ba:   0f 84 3a 01 00 00                     	je 0xa6fa <.Llzma12_mode_map.part.1+0x33a>
0xa5c0:   48 8b 4b 18                           	mov rcx, qword ptr [rbx + 0x18]
0xa5c4:   31 c0                                 	xor eax, eax
0xa5c6:   4c 8d a4 24 20 02 00 00               	lea r12, [rsp + 0x220]
0xa5ce:   8a 14 01                              	mov dl, byte ptr [rcx + rax]
0xa5d1:   48 ff c0                              	inc rax
0xa5d4:   42 88 54 20 ff                        	mov byte ptr [rax + r12 - 1], dl
0xa5d9:   48 83 f8 15                           	cmp rax, 0x15
0xa5dd:   75 ef                                 	jne 0xa5ce <.Llzma12_mode_map.part.1+0x20e>
0xa5df:   48 8b 73 28                           	mov rsi, qword ptr [rbx + 0x28]
0xa5e3:   31 c0                                 	xor eax, eax
0xa5e5:   48 8d 94 24 35 02 00 00               	lea rdx, [rsp + 0x235]
0xa5ed:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0xa5f0:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0xa5f3:   48 ff c0                              	inc rax
0xa5f6:   48 83 f8 0e                           	cmp rax, 0xe
0xa5fa:   75 f1                                 	jne 0xa5ed <.Llzma12_mode_map.part.1+0x22d>
0xa5fc:   c6 84 24 43 02 00 00 20               	mov byte ptr [rsp + 0x243], 0x20
0xa604:   48 8b 73 30                           	mov rsi, qword ptr [rbx + 0x30]
0xa608:   31 c0                                 	xor eax, eax
0xa60a:   48 8d 94 24 44 02 00 00               	lea rdx, [rsp + 0x244]
0xa612:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0xa615:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0xa618:   48 ff c0                              	inc rax
0xa61b:   48 83 f8 04                           	cmp rax, 4
0xa61f:   75 f1                                 	jne 0xa612 <.Llzma12_mode_map.part.1+0x252>
0xa621:   c6 84 24 48 02 00 00 20               	mov byte ptr [rsp + 0x248], 0x20
0xa629:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xa62d:   8a 10                                 	mov dl, byte ptr [rax]
0xa62f:   88 94 24 49 02 00 00                  	mov byte ptr [rsp + 0x249], dl
0xa636:   8a 40 01                              	mov al, byte ptr [rax + 1]
0xa639:   c6 84 24 4b 02 00 00 20               	mov byte ptr [rsp + 0x24b], 0x20
0xa641:   88 84 24 4a 02 00 00                  	mov byte ptr [rsp + 0x24a], al
0xa648:   48 8b 43 10                           	mov rax, qword ptr [rbx + 0x10]
0xa64c:   8a 10                                 	mov dl, byte ptr [rax]
0xa64e:   88 94 24 4c 02 00 00                  	mov byte ptr [rsp + 0x24c], dl
0xa655:   8a 40 01                              	mov al, byte ptr [rax + 1]
0xa658:   48 8d 94 24 50 02 00 00               	lea rdx, [rsp + 0x250]
0xa660:   66 c7 84 24 4e 02 00 00 20 5b         	mov word ptr [rsp + 0x24e], 0x5b20
0xa66a:   88 84 24 4d 02 00 00                  	mov byte ptr [rsp + 0x24d], al
0xa671:   48 8b 73 20                           	mov rsi, qword ptr [rbx + 0x20]
0xa675:   31 c0                                 	xor eax, eax
0xa677:   8a 0c 06                              	mov cl, byte ptr [rsi + rax]
0xa67a:   88 0c 02                              	mov byte ptr [rdx + rax], cl
0xa67d:   48 ff c0                              	inc rax
0xa680:   48 83 f8 07                           	cmp rax, 7
0xa684:   75 f1                                 	jne 0xa677 <.Llzma12_mode_map.part.1+0x2b7>
0xa686:   4d 85 ed                              	test r13, r13
0xa689:   c6 84 24 57 02 00 00 5d               	mov byte ptr [rsp + 0x257], 0x5d
0xa691:   40 0f 95 c5                           	setne bpl
0xa695:   83 7b 08 00                           	cmp dword ptr [rbx + 8], 0
0xa699:   c7 03 01 00 00 00                     	mov dword ptr [rbx], 1
0xa69f:   74 15                                 	je 0xa6b6 <.Llzma12_mode_map.part.1+0x2f6>
0xa6a1:   40 84 ed                              	test bpl, bpl
0xa6a4:   74 10                                 	je 0xa6b6 <.Llzma12_mode_map.part.1+0x2f6>
0xa6a6:   49 8b 45 58                           	mov rax, qword ptr [r13 + 0x58]
0xa6aa:   48 85 c0                              	test rax, rax
0xa6ad:   74 07                                 	je 0xa6b6 <.Llzma12_mode_map.part.1+0x2f6>
0xa6af:   bf ff 00 00 00                        	mov edi, 0xff
0xa6b4:   ff d0                                 	call rax
0xa6b6:   31 c0                                 	xor eax, eax
0xa6b8:   48 8d 8c 24 20 01 00 00               	lea rcx, [rsp + 0x120]
0xa6c0:   4c 89 e2                              	mov rdx, r12
0xa6c3:   48 89 df                              	mov rdi, rbx
0xa6c6:   4c 8d 44 24 20                        	lea r8, [rsp + 0x20]
0xa6cb:   be 03 00 00 00                        	mov esi, 3
0xa6d0:   e8 4b cd ff ff                        	call 0x7420 <function_7420>
0xa6d5:   83 7b 08 00                           	cmp dword ptr [rbx + 8], 0
0xa6d9:   74 25                                 	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa6db:   40 84 ed                              	test bpl, bpl
0xa6de:   74 20                                 	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa6e0:   49 8b 45 58                           	mov rax, qword ptr [r13 + 0x58]
0xa6e4:   48 85 c0                              	test rax, rax
0xa6e7:   74 17                                 	je 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa6e9:   bf 00 00 00 80                        	mov edi, 0x80000000
0xa6ee:   ff d0                                 	call rax
0xa6f0:   eb 0e                                 	jmp 0xa700 <.Llzma12_mode_map.part.1+0x340>
0xa6f2:   48 ff c5                              	inc rbp
0xa6f5:   e9 72 fd ff ff                        	jmp 0xa46c <.Llzma12_mode_map.part.1+0xac>
0xa6fa:   c7 03 01 00 00 00                     	mov dword ptr [rbx], 1
0xa700:   48 81 c4 28 04 00 00                  	add rsp, 0x428
0xa707:   5b                                    	pop rbx
0xa708:   5d                                    	pop rbp
0xa709:   41 5c                                 	pop r12
0xa70b:   41 5d                                 	pop r13
0xa70d:   41 5e                                 	pop r14
0xa70f:   41 5f                                 	pop r15
0xa711:   c3                                    	ret 
; section: .text._cpuid
; function: _cpuid at 0xa720 -- 0xa73f
0xa720:   f3 0f 1e fa                           	endbr64 
0xa724:   53                                    	push rbx
0xa725:   49 89 f2                              	mov r10, rsi
0xa728:   49 89 d1                              	mov r9, rdx
0xa72b:   48 89 ce                              	mov rsi, rcx
0xa72e:   89 f8                                 	mov eax, edi
0xa730:   0f a2                                 	cpuid 
0xa732:   41 89 02                              	mov dword ptr [r10], eax
0xa735:   41 89 19                              	mov dword ptr [r9], ebx
0xa738:   5b                                    	pop rbx
0xa739:   89 0e                                 	mov dword ptr [rsi], ecx
0xa73b:   41 89 10                              	mov dword ptr [r8], edx
0xa73e:   c3                                    	ret 
; section: .text._get_cpuia
; function: function_a740 at 0xa740 -- 0xa7b4
0xa740:   55                                    	push rbp
0xa741:   45 31 c9                              	xor r9d, r9d
0xa744:   48 89 e5                              	mov rbp, rsp
0xa747:   53                                    	push rbx
0xa748:   89 fb                                 	mov ebx, edi
0xa74a:   4c 8d 45 c0                           	lea r8, [rbp - 0x40]
0xa74e:   48 83 ec 58                           	sub rsp, 0x58
0xa752:   83 3d e7 23 00 00 01                  	cmp dword ptr [rip + 0x23e7], 1
0xa759:   75 36                                 	jne 0xa791 <function_a740+0x51>
0xa75b:   31 c0                                 	xor eax, eax
0xa75d:   4c 89 c7                              	mov rdi, r8
0xa760:   4c 89 45 a8                           	mov qword ptr [rbp - 0x58], r8
0xa764:   48 c7 45 c0 01 00 00 00               	mov qword ptr [rbp - 0x40], 1
0xa76c:   48 89 45 c8                           	mov qword ptr [rbp - 0x38], rax
0xa770:   48 89 45 d0                           	mov qword ptr [rbp - 0x30], rax
0xa774:   48 89 45 d8                           	mov qword ptr [rbp - 0x28], rax
0xa778:   48 89 45 e0                           	mov qword ptr [rbp - 0x20], rax
0xa77c:   48 89 75 e8                           	mov qword ptr [rbp - 0x18], rsi
0xa780:   48 89 75 a0                           	mov qword ptr [rbp - 0x60], rsi
0xa784:   e8 2b 00 00 00                        	call 0xa7b4 <.Llzma_block_param_encoder.0>
0xa789:   4c 8b 45 a8                           	mov r8, qword ptr [rbp - 0x58]
0xa78d:   4c 8b 4d a0                           	mov r9, qword ptr [rbp - 0x60]
0xa791:   48 8d 4d bc                           	lea rcx, [rbp - 0x44]
0xa795:   48 8d 55 b8                           	lea rdx, [rbp - 0x48]
0xa799:   89 df                                 	mov edi, ebx
0xa79b:   ff 05 9f 23 00 00                     	inc dword ptr [rip + 0x239f]
0xa7a1:   48 8d 75 b4                           	lea rsi, [rbp - 0x4c]
0xa7a5:   e8 76 ff ff ff                        	call 0xa720 <_cpuid>
0xa7aa:   8b 45 b4                              	mov eax, dword ptr [rbp - 0x4c]
0xa7ad:   48 83 c4 58                           	add rsp, 0x58
0xa7b1:   5b                                    	pop rbx
0xa7b2:   5d                                    	pop rbp
0xa7b3:   c3                                    	ret 
; function: .Llzma_block_param_encoder.0 at 0xa7b4 -- 0xa81c
0xa7b4:   f3 0f 1e fa                           	endbr64 
0xa7b8:   41 54                                 	push r12
0xa7ba:   48 89 7f 20                           	mov qword ptr [rdi + 0x20], rdi
0xa7be:   48 83 ec 28                           	sub rsp, 0x28
0xa7c2:   48 89 7c 24 10                        	mov qword ptr [rsp + 0x10], rdi
0xa7c7:   e8 44 98 ff ff                        	call 0x4010 <.Llzma_delta_props_decoder>
0xa7cc:   48 8b 7c 24 10                        	mov rdi, qword ptr [rsp + 0x10]
0xa7d1:   48 8b 0d 00 00 00 00                  	mov rcx, qword ptr [rip]
0xa7d8:   48 8b 47 10                           	mov rax, qword ptr [rdi + 0x10]
0xa7dc:   48 89 47 28                           	mov qword ptr [rdi + 0x28], rax
0xa7e0:   48 8b 07                              	mov rax, qword ptr [rdi]
0xa7e3:   48 2b 47 20                           	sub rax, qword ptr [rdi + 0x20]
0xa7e7:   48 89 47 08                           	mov qword ptr [rdi + 8], rax
0xa7eb:   48 89 c2                              	mov rdx, rax
0xa7ee:   48 03 51 08                           	add rdx, qword ptr [rcx + 8]
0xa7f2:   48 89 57 10                           	mov qword ptr [rdi + 0x10], rdx
0xa7f6:   74 1d                                 	je 0xa815 <.Llzma_block_param_encoder.0+0x61>
0xa7f8:   48 89 54 24 08                        	mov qword ptr [rsp + 8], rdx
0xa7fd:   4c 8b 22                              	mov r12, qword ptr [rdx]
0xa800:   48 03 41 10                           	add rax, qword ptr [rcx + 0x10]
0xa804:   48 89 02                              	mov qword ptr [rdx], rax
0xa807:   ff 15 00 00 00 00                     	call qword ptr [rip] <unknown_22894c0824548b48>
0xa80d:   48 8b 54 24 08                        	mov rdx, qword ptr [rsp + 8]
0xa812:   4c 89 22                              	mov qword ptr [rdx], r12
0xa815:   48 83 c4 28                           	add rsp, 0x28
0xa819:   41 5c                                 	pop r12
0xa81b:   c3                                    	ret 
; section: .text._get_cpuid
; function: _get_cpuid at 0xa820 -- 0xa880
0xa820:   f3 0f 1e fa                           	endbr64 
0xa824:   55                                    	push rbp
0xa825:   48 89 f5                              	mov rbp, rsi
0xa828:   4c 89 ce                              	mov rsi, r9
0xa82b:   53                                    	push rbx
0xa82c:   89 fb                                 	mov ebx, edi
0xa82e:   81 e7 00 00 00 80                     	and edi, 0x80000000
0xa834:   48 83 ec 28                           	sub rsp, 0x28
0xa838:   48 89 54 24 18                        	mov qword ptr [rsp + 0x18], rdx
0xa83d:   48 89 4c 24 10                        	mov qword ptr [rsp + 0x10], rcx
0xa842:   4c 89 44 24 08                        	mov qword ptr [rsp + 8], r8
0xa847:   e8 f4 fe ff ff                        	call 0xa740 <function_a740>
0xa84c:   85 c0                                 	test eax, eax
0xa84e:   74 27                                 	je 0xa877 <_get_cpuid+0x57>
0xa850:   39 d8                                 	cmp eax, ebx
0xa852:   72 23                                 	jb 0xa877 <_get_cpuid+0x57>
0xa854:   4c 8b 44 24 08                        	mov r8, qword ptr [rsp + 8]
0xa859:   48 8b 4c 24 10                        	mov rcx, qword ptr [rsp + 0x10]
0xa85e:   45 31 c9                              	xor r9d, r9d
0xa861:   48 89 ee                              	mov rsi, rbp
0xa864:   48 8b 54 24 18                        	mov rdx, qword ptr [rsp + 0x18]
0xa869:   89 df                                 	mov edi, ebx
0xa86b:   e8 b0 fe ff ff                        	call 0xa720 <_cpuid>
0xa870:   b8 01 00 00 00                        	mov eax, 1
0xa875:   eb 02                                 	jmp 0xa879 <_get_cpuid+0x59>
0xa877:   31 c0                                 	xor eax, eax
0xa879:   48 83 c4 28                           	add rsp, 0x28
0xa87d:   5b                                    	pop rbx
0xa87e:   5d                                    	pop rbp
0xa87f:   c3                                    	ret 
; section: .text.lzma_outq_inia
; function: .Llz_stream_decode at 0xa880 -- 0xa897
0xa880:   f3 0f 1e fa                           	endbr64 
0xa884:   31 c0                                 	xor eax, eax
0xa886:   48 85 ff                              	test rdi, rdi
0xa889:   74 0b                                 	je 0xa896 <.Llz_stream_decode+0x16>
0xa88b:   48 8d 57 ff                           	lea rdx, [rdi - 1]
0xa88f:   ff c0                                 	inc eax
0xa891:   48 21 d7                              	and rdi, rdx
0xa894:   eb f0                                 	jmp 0xa886 <.Llz_stream_decode+0x6>
0xa896:   c3                                    	ret 
; section: .text.simple_coder_updata
; function: .Lsimple_coder_update.0 at 0xa8a0 -- 0xa9a5
0xa8a0:   f3 0f 1e fa                           	endbr64 
0xa8a4:   55                                    	push rbp
0xa8a5:   ba 08 00 00 00                        	mov edx, 8
0xa8aa:   48 89 f5                              	mov rbp, rsi
0xa8ad:   be 0a 00 00 00                        	mov esi, 0xa
0xa8b2:   53                                    	push rbx
0xa8b3:   48 89 fb                              	mov rbx, rdi
0xa8b6:   31 ff                                 	xor edi, edi
0xa8b8:   51                                    	push rcx
0xa8b9:   b9 01 00 00 00                        	mov ecx, 1
0xa8be:   e8 ed 02 00 00                        	call 0xabb0 <.Llzma2_decoder_end.1>
0xa8c3:   8b d0                                 	mov edx, eax
0xa8c5:   33 c0                                 	xor eax, eax
0xa8c7:   85 d2                                 	test edx, edx
0xa8c9:   0f 84 d2 00 00 00                     	je 0xa9a1 <.Lsimple_coder_update.0+0x101>
0xa8cf:   4c 8d 43 2c                           	lea r8, [rbx + 0x2c]
0xa8d3:   48 85 ed                              	test rbp, rbp
0xa8d6:   74 07                                 	je 0xa8df <.Lsimple_coder_update.0+0x3f>
0xa8d8:   49 39 e8                              	cmp r8, rbp
0xa8db:   4c 0f 47 c5                           	cmova r8, rbp
0xa8df:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0xa8e6:   4c 8d 88 e8 13 00 00                  	lea r9, [rax + 0x13e8]
0xa8ed:   48 8b 05 00 00 00 00                  	mov rax, qword ptr [rip]
0xa8f4:   48 8d b0 60 07 00 00                  	lea rsi, [rax + 0x760]
0xa8fb:   49 39 d8                              	cmp r8, rbx
0xa8fe:   0f 82 9b 00 00 00                     	jb 0xa99f <.Lsimple_coder_update.0+0xff>
0xa904:   8a 0b                                 	mov cl, byte ptr [rbx]
0xa906:   84 c9                                 	test cl, cl
0xa908:   0f 88 91 00 00 00                     	js 0xa99f <.Lsimple_coder_update.0+0xff>
0xa90e:   80 f9 3f                              	cmp cl, 0x3f
0xa911:   77 14                                 	ja 0xa927 <.Lsimple_coder_update.0+0x87>
0xa913:   4c 8b 16                              	mov r10, qword ptr [rsi]
0xa916:   4c 89 d0                              	mov rax, r10
0xa919:   48 d3 e8                              	shr rax, cl
0xa91c:   a8 01                                 	test al, 1
0xa91e:   b8 00 00 00 00                        	mov eax, 0
0xa923:   75 1b                                 	jne 0xa940 <.Lsimple_coder_update.0+0xa0>
0xa925:   eb 7a                                 	jmp 0xa9a1 <.Lsimple_coder_update.0+0x101>
0xa927:   4c 8b 56 08                           	mov r10, qword ptr [rsi + 8]
0xa92b:   83 e9 40                              	sub ecx, 0x40
0xa92e:   4c 89 d0                              	mov rax, r10
0xa931:   48 d3 e8                              	shr rax, cl
0xa934:   a8 01                                 	test al, 1
0xa936:   74 67                                 	je 0xa99f <.Lsimple_coder_update.0+0xff>
0xa938:   48 8b 3e                              	mov rdi, qword ptr [rsi]
0xa93b:   e8 40 ff ff ff                        	call 0xa880 <.Llz_stream_decode>
0xa940:   0f b6 c9                              	movzx ecx, cl
0xa943:   49 0f bc d2                           	bsf rdx, r10
0xa947:   39 ca                                 	cmp edx, ecx
0xa949:   74 0b                                 	je 0xa956 <.Lsimple_coder_update.0+0xb6>
0xa94b:   49 8d 52 ff                           	lea rdx, [r10 - 1]
0xa94f:   ff c0                                 	inc eax
0xa951:   49 21 d2                              	and r10, rdx
0xa954:   eb ed                                 	jmp 0xa943 <.Lsimple_coder_update.0+0xa3>
0xa956:   8b c0                                 	mov eax, eax
0xa958:   49 8d 04 81                           	lea rax, [r9 + rax*4]
0xa95c:   66 8b 08                              	mov cx, word ptr [rax]
0xa95f:   0f bf 40 02                           	movsx eax, word ptr [rax + 2]
0xa963:   f6 c1 04                              	test cl, 4
0xa966:   75 39                                 	jne 0xa9a1 <.Lsimple_coder_update.0+0x101>
0xa968:   f6 c1 02                              	test cl, 2
0xa96b:   74 05                                 	je 0xa972 <.Lsimple_coder_update.0+0xd2>
0xa96d:   83 e1 fd                              	and ecx, 0xfffffffd
0xa970:   eb 02                                 	jmp 0xa974 <.Lsimple_coder_update.0+0xd4>
0xa972:   f7 d8                                 	neg eax
0xa974:   89 cf                                 	mov edi, ecx
0xa976:   8b d1                                 	mov edx, ecx
0xa978:   f7 df                                 	neg edi
0xa97a:   83 e2 fe                              	and edx, 0xfffffffe
0xa97d:   80 e1 01                              	and cl, 1
0xa980:   0f 44 d7                              	cmove edx, edi
0xa983:   83 e8 04                              	sub eax, 4
0xa986:   48 ff c3                              	inc rbx
0xa989:   48 0f bf c0                           	movsx rax, ax
0xa98d:   83 ea 10                              	sub edx, 0x10
0xa990:   49 01 c1                              	add r9, rax
0xa993:   48 0f bf d2                           	movsx rdx, dx
0xa997:   48 01 d6                              	add rsi, rdx
0xa99a:   e9 5c ff ff ff                        	jmp 0xa8fb <.Lsimple_coder_update.0+0x5b>
0xa99f:   31 c0                                 	xor eax, eax
0xa9a1:   5a                                    	pop rdx
0xa9a2:   5b                                    	pop rbx
0xa9a3:   5d                                    	pop rbp
0xa9a4:   c3                                    	ret 
; section: .text.lzma_lzma_encoder_inia
; function: .Llzma_lzma_encoder_init.0 at 0xa9b0 -- 0xaa1f
0xa9b0:   f3 0f 1e fa                           	endbr64 
0xa9b4:   8b 06                                 	mov eax, dword ptr [rsi]
0xa9b6:   48 89 f2                              	mov rdx, rsi
0xa9b9:   3d c7 01 00 00                        	cmp eax, 0x1c7
0xa9be:   77 59                                 	ja 0xaa19 <.Llzma_lzma_encoder_init.0+0x69>
0xa9c0:   8b 4f 28                              	mov ecx, dword ptr [rdi + 0x28]
0xa9c3:   8d 78 01                              	lea edi, [rax + 1]
0xa9c6:   81 f9 09 01 00 00                     	cmp ecx, 0x109
0xa9cc:   74 49                                 	je 0xaa17 <.Llzma_lzma_encoder_init.0+0x67>
0xa9ce:   81 f9 bb 00 00 00                     	cmp ecx, 0xbb
0xa9d4:   74 41                                 	je 0xaa17 <.Llzma_lzma_encoder_init.0+0x67>
0xa9d6:   81 e9 83 00 00 00                     	sub ecx, 0x83
0xa9dc:   83 f9 2e                              	cmp ecx, 0x2e
0xa9df:   77 13                                 	ja 0xa9f4 <.Llzma_lzma_encoder_init.0+0x44>
0xa9e1:   48 be 01 01 00 00 01 41 00 00         	movabs rsi, 0x410100000101
0xa9eb:   48 d3 ee                              	shr rsi, cl
0xa9ee:   40 80 e6 01                           	and sil, 1
0xa9f2:   75 23                                 	jne 0xaa17 <.Llzma_lzma_encoder_init.0+0x67>
0xa9f4:   48 8b 0d 00 00 00 00                  	mov rcx, qword ptr [rip]
0xa9fb:   89 c6                                 	mov esi, eax
0xa9fd:   83 e0 07                              	and eax, 7
0xaa00:   c1 ee 03                              	shr esi, 3
0xaa03:   4c 8b 01                              	mov r8, qword ptr [rcx]
0xaa06:   89 c1                                 	mov ecx, eax
0xaa08:   b8 01 00 00 00                        	mov eax, 1
0xaa0d:   d3 e0                                 	shl eax, cl
0xaa0f:   41 08 84 30 08 01 00 00               	or byte ptr [r8 + rsi + 0x108], al
0xaa17:   89 3a                                 	mov dword ptr [rdx], edi
0xaa19:   b8 01 00 00 00                        	mov eax, 1
0xaa1e:   c3                                    	ret 
; section: .text.lzma_memlimit_gea
; function: .Llzma_memlimit_get.1 at 0xaa20 -- 0xaad6
0xaa20:   f3 0f 1e fa                           	endbr64 
0xaa24:   41 57                                 	push r15
0xaa26:   31 c0                                 	xor eax, eax
0xaa28:   49 89 f9                              	mov r9, rdi
0xaa2b:   41 56                                 	push r14
0xaa2d:   41 55                                 	push r13
0xaa2f:   41 54                                 	push r12
0xaa31:   55                                    	push rbp
0xaa32:   53                                    	push rbx
0xaa33:   89 cb                                 	mov ebx, ecx
0xaa35:   b9 16 00 00 00                        	mov ecx, 0x16
0xaa3a:   48 83 ec 78                           	sub rsp, 0x78
0xaa3e:   45 85 c0                              	test r8d, r8d
0xaa41:   48 8d 7c 24 18                        	lea rdi, [rsp + 0x18]
0xaa46:   48 89 34 24                           	mov qword ptr [rsp], rsi
0xaa4a:   4c 8d 6c 24 18                        	lea r13, [rsp + 0x18]
0xaa4f:   f3 ab                                 	rep stosd dword ptr [rdi], eax
0xaa51:   89 54 24 0c                           	mov dword ptr [rsp + 0xc], edx
0xaa55:   74 1f                                 	je 0xaa76 <.Llzma_memlimit_get.1+0x56>
0xaa57:   31 d2                                 	xor edx, edx
0xaa59:   4c 89 e9                              	mov rcx, r13
0xaa5c:   4c 89 cf                              	mov rdi, r9
0xaa5f:   e8 0c 62 ff ff                        	call 0xc70 <.Llzma_optimum_normal.0>
0xaa64:   85 c0                                 	test eax, eax
0xaa66:   75 04                                 	jne 0xaa6c <.Llzma_memlimit_get.1+0x4c>
0xaa68:   31 c0                                 	xor eax, eax
0xaa6a:   eb 5b                                 	jmp 0xaac7 <.Llzma_memlimit_get.1+0xa7>
0xaa6c:   4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0xaa71:   4c 03 4c 24 18                        	add r9, qword ptr [rsp + 0x18]
0xaa76:   41 89 de                              	mov r14d, ebx
0xaa79:   45 31 e4                              	xor r12d, r12d
0xaa7c:   4c 8d 7c 24 0c                        	lea r15, [rsp + 0xc]
0xaa81:   48 8b 34 24                           	mov rsi, qword ptr [rsp]
0xaa85:   4c 89 ea                              	mov rdx, r13
0xaa88:   4c 89 cf                              	mov rdi, r9
0xaa8b:   44 89 e5                              	mov ebp, r12d
0xaa8e:   e8 cd 01 00 00                        	call 0xac60 <.Llzma_block_total_size.0>
0xaa93:   85 c0                                 	test eax, eax
0xaa95:   74 09                                 	je 0xaaa0 <.Llzma_memlimit_get.1+0x80>
0xaa97:   4d 39 f4                              	cmp r12, r14
0xaa9a:   75 0d                                 	jne 0xaaa9 <.Llzma_memlimit_get.1+0x89>
0xaa9c:   39 eb                                 	cmp ebx, ebp
0xaa9e:   72 c8                                 	jb 0xaa68 <.Llzma_memlimit_get.1+0x48>
0xaaa0:   31 c0                                 	xor eax, eax
0xaaa2:   39 eb                                 	cmp ebx, ebp
0xaaa4:   0f 94 c0                              	sete al
0xaaa7:   eb 1e                                 	jmp 0xaac7 <.Llzma_memlimit_get.1+0xa7>
0xaaa9:   4c 89 fe                              	mov rsi, r15
0xaaac:   4c 89 ef                              	mov rdi, r13
0xaaaf:   49 ff c4                              	inc r12
0xaab2:   e8 f9 fe ff ff                        	call 0xa9b0 <.Llzma_lzma_encoder_init.0>
0xaab7:   85 c0                                 	test eax, eax
0xaab9:   74 ad                                 	je 0xaa68 <.Llzma_memlimit_get.1+0x48>
0xaabb:   4c 8b 4c 24 20                        	mov r9, qword ptr [rsp + 0x20]
0xaac0:   4c 03 4c 24 18                        	add r9, qword ptr [rsp + 0x18]
0xaac5:   eb ba                                 	jmp 0xaa81 <.Llzma_memlimit_get.1+0x61>
0xaac7:   48 83 c4 78                           	add rsp, 0x78
0xaacb:   5b                                    	pop rbx
0xaacc:   5d                                    	pop rbp
0xaacd:   41 5c                                 	pop r12
0xaacf:   41 5d                                 	pop r13
0xaad1:   41 5e                                 	pop r14
0xaad3:   41 5f                                 	pop r15
0xaad5:   c3                                    	ret 
; section: .text.rc_read_inis
; function: .Lrc_read_init.part.0 at 0xaae0 -- 0xab90
0xaae0:   f3 0f 1e fa                           	endbr64 
0xaae4:   41 55                                 	push r13
0xaae6:   31 c0                                 	xor eax, eax
0xaae8:   41 54                                 	push r12
0xaaea:   55                                    	push rbp
0xaaeb:   53                                    	push rbx
0xaaec:   48 83 ec 18                           	sub rsp, 0x18
0xaaf0:   4c 8b 25 00 00 00 00                  	mov r12, qword ptr [rip]
0xaaf7:   48 89 44 24 08                        	mov qword ptr [rsp + 8], rax
0xaafc:   49 8b 04 24                           	mov rax, qword ptr [r12]
0xab00:   48 85 c0                              	test rax, rax
0xab03:   74 7b                                 	je 0xab80 <.Lrc_read_init.part.0+0xa0>
0xab05:   45 89 c0                              	mov r8d, r8d
0xab08:   42 80 bc 00 41 01 00 00 00            	cmp byte ptr [rax + r8 + 0x141], 0
0xab11:   75 6d                                 	jne 0xab80 <.Lrc_read_init.part.0+0xa0>
0xab13:   42 c6 84 00 41 01 00 00 01            	mov byte ptr [rax + r8 + 0x141], 1
0xab1c:   89 cb                                 	mov ebx, ecx
0xab1e:   49 89 fd                              	mov r13, rdi
0xab21:   89 d5                                 	mov ebp, edx
0xab23:   48 8b 88 80 00 00 00                  	mov rcx, qword ptr [rax + 0x80]
0xab2a:   4c 8b 80 88 00 00 00                  	mov r8, qword ptr [rax + 0x88]
0xab31:   48 89 f7                              	mov rdi, rsi
0xab34:   31 d2                                 	xor edx, edx
0xab36:   48 8d 74 24 08                        	lea rsi, [rsp + 8]
0xab3b:   41 b9 01 00 00 00                     	mov r9d, 1
0xab41:   e8 3a 60 ff ff                        	call 0xb80 <.Llzma2_encoder_init.1>
0xab46:   85 c0                                 	test eax, eax
0xab48:   75 04                                 	jne 0xab4e <.Lrc_read_init.part.0+0x6e>
0xab4a:   31 c0                                 	xor eax, eax
0xab4c:   eb 37                                 	jmp 0xab85 <.Lrc_read_init.part.0+0xa5>
0xab4e:   49 8b 04 24                           	mov rax, qword ptr [r12]
0xab52:   4d 85 ed                              	test r13, r13
0xab55:   48 8b 7c 24 08                        	mov rdi, qword ptr [rsp + 8]
0xab5a:   89 d9                                 	mov ecx, ebx
0xab5c:   41 0f 94 c0                           	sete r8b
0xab60:   89 ea                                 	mov edx, ebp
0xab62:   48 8b b0 88 00 00 00                  	mov rsi, qword ptr [rax + 0x88]
0xab69:   45 0f b6 c0                           	movzx r8d, r8b
0xab6d:   e8 ae fe ff ff                        	call 0xaa20 <.Llzma_memlimit_get.1>
0xab72:   85 c0                                 	test eax, eax
0xab74:   74 d4                                 	je 0xab4a <.Lrc_read_init.part.0+0x6a>
0xab76:   49 8b 04 24                           	mov rax, qword ptr [r12]
0xab7a:   01 98 60 01 00 00                     	add dword ptr [rax + 0x160], ebx
0xab80:   b8 01 00 00 00                        	mov eax, 1
0xab85:   48 83 c4 18                           	add rsp, 0x18
0xab89:   5b                                    	pop rbx
0xab8a:   5d                                    	pop rbp
0xab8b:   41 5c                                 	pop r12
0xab8d:   41 5d                                 	pop r13
0xab8f:   c3                                    	ret 
; section: .text.lzma_check_inia
; function: .Llzma_check_init.part.0 at 0xab90 -- 0xabaf
0xab90:   f3 0f 1e fa                           	endbr64 
0xab94:   89 f8                                 	mov eax, edi
0xab96:   4c 89 c7                              	mov rdi, r8
0xab99:   85 c9                                 	test ecx, ecx
0xab9b:   74 0f                                 	je 0xabac <.Llzma_check_init.part.0+0x1c>
0xab9d:   41 89 f0                              	mov r8d, esi
0xaba0:   89 d1                                 	mov ecx, edx
0xaba2:   48 89 fe                              	mov rsi, rdi
0xaba5:   89 c2                                 	mov edx, eax
0xaba7:   e9 34 ff ff ff                        	jmp 0xaae0 <.Lrc_read_init.part.0>
0xabac:   31 c0                                 	xor eax, eax
0xabae:   c3                                    	ret 
; section: .text.lzma2_decoder_ena
; function: .Llzma2_decoder_end.1 at 0xabb0 -- 0xabdd
0xabb0:   f3 0f 1e fa                           	endbr64 
0xabb4:   48 89 f8                              	mov rax, rdi
0xabb7:   41 50                                 	push r8
0xabb9:   41 89 c8                              	mov r8d, ecx
0xabbc:   48 83 ff 01                           	cmp rdi, 1
0xabc0:   77 05                                 	ja 0xabc7 <.Llzma2_decoder_end.1+0x17>
0xabc2:   48 8b 44 24 08                        	mov rax, qword ptr [rsp + 8]
0xabc7:   89 d1                                 	mov ecx, edx
0xabc9:   89 f2                                 	mov edx, esi
0xabcb:   48 89 c6                              	mov rsi, rax
0xabce:   e8 0d ff ff ff                        	call 0xaae0 <.Lrc_read_init.part.0>
0xabd3:   5a                                    	pop rdx
0xabd4:   85 c0                                 	test eax, eax
0xabd6:   0f 9f c0                              	setg al
0xabd9:   0f b6 c0                              	movzx eax, al
0xabdc:   c3                                    	ret 
; section: .text.lzma_index_iter_rewina
; function: .Llzma_index_iter_rewind.cold at 0xabe0 -- 0xabfe
0xabe0:   f3 0f 1e fa                           	endbr64 
0xabe4:   53                                    	push rbx
0xabe5:   89 cb                                 	mov ebx, ecx
0xabe7:   89 f1                                 	mov ecx, esi
0xabe9:   48 8b 74 24 08                        	mov rsi, qword ptr [rsp + 8]
0xabee:   41 89 d0                              	mov r8d, edx
0xabf1:   89 fa                                 	mov edx, edi
0xabf3:   31 ff                                 	xor edi, edi
0xabf5:   e8 e6 fe ff ff                        	call 0xaae0 <.Lrc_read_init.part.0>
0xabfa:   09 d8                                 	or eax, ebx
0xabfc:   5b                                    	pop rbx
0xabfd:   c3                                    	ret 
; section: .text.lzma_index_memusagz
; function: .Llzma_index_memusage.0 at 0xac00 -- 0xac5f
0xac00:   f3 0f 1e fa                           	endbr64 
0xac04:   41 56                                 	push r14
0xac06:   45 31 f6                              	xor r14d, r14d
0xac09:   41 55                                 	push r13
0xac0b:   49 89 d5                              	mov r13, rdx
0xac0e:   41 54                                 	push r12
0xac10:   49 89 fc                              	mov r12, rdi
0xac13:   55                                    	push rbp
0xac14:   31 ed                                 	xor ebp, ebp
0xac16:   53                                    	push rbx
0xac17:   48 89 f3                              	mov rbx, rsi
0xac1a:   44 89 f0                              	mov eax, r14d
0xac1d:   48 39 d8                              	cmp rax, rbx
0xac20:   73 2f                                 	jae 0xac51 <.Llzma_index_memusage.0+0x51>
0xac22:   48 6b c0 18                           	imul rax, rax, 0x18
0xac26:   41 ff c6                              	inc r14d
0xac29:   4c 01 e0                              	add rax, r12
0xac2c:   83 78 14 00                           	cmp dword ptr [rax + 0x14], 0
0xac30:   4c 8b 00                              	mov r8, qword ptr [rax]
0xac33:   8b 78 08                              	mov edi, dword ptr [rax + 8]
0xac36:   8b 70 0c                              	mov esi, dword ptr [rax + 0xc]
0xac39:   8b 50 10                              	mov edx, dword ptr [rax + 0x10]
0xac3c:   74 0e                                 	je 0xac4c <.Llzma_index_memusage.0+0x4c>
0xac3e:   44 89 f1                              	mov ecx, r14d
0xac41:   41 ff d5                              	call r13
0xac44:   85 c0                                 	test eax, eax
0xac46:   74 0e                                 	je 0xac56 <.Llzma_index_memusage.0+0x56>
0xac48:   ff c5                                 	inc ebp
0xac4a:   eb ce                                 	jmp 0xac1a <.Llzma_index_memusage.0+0x1a>
0xac4c:   89 68 14                              	mov dword ptr [rax + 0x14], ebp
0xac4f:   eb c9                                 	jmp 0xac1a <.Llzma_index_memusage.0+0x1a>
0xac51:   b8 01 00 00 00                        	mov eax, 1
0xac56:   5b                                    	pop rbx
0xac57:   5d                                    	pop rbp
0xac58:   41 5c                                 	pop r12
0xac5a:   41 5d                                 	pop r13
0xac5c:   41 5e                                 	pop r14
0xac5e:   c3                                    	ret 
; section: .text.lzma_block_total_siza
; function: .Llzma_block_total_size.0 at 0xac60 -- 0xace6
0xac60:   f3 0f 1e fa                           	endbr64 
0xac64:   48 85 d2                              	test rdx, rdx
0xac67:   74 7a                                 	je 0xace3 <.Llzma_block_total_size.0+0x83>
0xac69:   41 54                                 	push r12
0xac6b:   49 89 f4                              	mov r12, rsi
0xac6e:   55                                    	push rbp
0xac6f:   48 bd 05 05 00 00 05 05 05 05         	movabs rbp, 0x505050500000505
0xac79:   53                                    	push rbx
0xac7a:   48 89 d3                              	mov rbx, rdx
0xac7d:   4c 39 e7                              	cmp rdi, r12
0xac80:   72 04                                 	jb 0xac86 <.Llzma_block_total_size.0+0x26>
0xac82:   31 c0                                 	xor eax, eax
0xac84:   eb 58                                 	jmp 0xacde <.Llzma_block_total_size.0+0x7e>
0xac86:   48 89 fe                              	mov rsi, rdi
0xac89:   4c 89 e2                              	mov rdx, r12
0xac8c:   48 89 df                              	mov rdi, rbx
0xac8f:   e8 6c 53 ff ff                        	call 0 <.Lx86_code.part.0>
0xac94:   85 c0                                 	test eax, eax
0xac96:   74 ea                                 	je 0xac82 <.Llzma_block_total_size.0+0x22>
0xac98:   8b 4b 28                              	mov ecx, dword ptr [rbx + 0x28]
0xac9b:   89 c8                                 	mov eax, ecx
0xac9d:   83 e0 fd                              	and eax, 0xfffffffd
0xaca0:   3d 09 01 00 00                        	cmp eax, 0x109
0xaca5:   74 15                                 	je 0xacbc <.Llzma_block_total_size.0+0x5c>
0xaca7:   81 e9 81 00 00 00                     	sub ecx, 0x81
0xacad:   83 f9 3a                              	cmp ecx, 0x3a
0xacb0:   77 1e                                 	ja 0xacd0 <.Llzma_block_total_size.0+0x70>
0xacb2:   48 89 e8                              	mov rax, rbp
0xacb5:   48 d3 e8                              	shr rax, cl
0xacb8:   a8 01                                 	test al, 1
0xacba:   74 14                                 	je 0xacd0 <.Llzma_block_total_size.0+0x70>
0xacbc:   66 f7 43 10 80 0f                     	test word ptr [rbx + 0x10], 0xf80
0xacc2:   75 0c                                 	jne 0xacd0 <.Llzma_block_total_size.0+0x70>
0xacc4:   f6 43 1b 05                           	test byte ptr [rbx + 0x1b], 5
0xacc8:   75 06                                 	jne 0xacd0 <.Llzma_block_total_size.0+0x70>
0xacca:   80 7b 1d 03                           	cmp byte ptr [rbx + 0x1d], 3
0xacce:   74 09                                 	je 0xacd9 <.Llzma_block_total_size.0+0x79>
0xacd0:   48 8b 7b 08                           	mov rdi, qword ptr [rbx + 8]
0xacd4:   48 03 3b                              	add rdi, qword ptr [rbx]
0xacd7:   eb a4                                 	jmp 0xac7d <.Llzma_block_total_size.0+0x1d>
0xacd9:   b8 01 00 00 00                        	mov eax, 1
0xacde:   5b                                    	pop rbx
0xacdf:   5d                                    	pop rbp
0xace0:   41 5c                                 	pop r12
0xace2:   c3                                    	ret 
0xace3:   31 c0                                 	xor eax, eax
0xace5:   c3                                    	ret 

;;
;; Data Segment
;;

; section: .rodata.MASK_TO_BIT_NUMBER0
0xad00:   ff 0f b1 70 3f 0f bf ff  03 00 00 00 00 00 00 00   |...p?...........|
0xad10:   07 00 00 00 00 00 00 00  00 3f 00 f8 00 00 4f 00   |.........?....O.|
0xad20:   ff 0f b1 70 3f 0f bf ff  03 00 00 00 00 00 00 00   |...p?...........|
0xad30:   07 00 00 00 00 00 00 00  00 3f 00 f8 00 00 03 00   |.........?......|
0xad40:   0f 20 ff ff 0f ff 00 00  ff ff ff ff ff ff 7f f3   |. ..............|
0xad50:   00 00 ff ff 38 f8 ff fe  ff 00 ff ff ff ff ff 7f   |....8...........|
0xad60:   ef 6b ff ff 0f ff bf 00  ff ff ff ff ff ff ff f3   |.k..............|
0xad70:   ff ff ff ff 3f ff ff fe  ff ff ff ff ff ff ff 7f   |....?...........|
0xad80:   0f                                                 |.               |
; section: .rodata.BRANCH_TABLE0
0xad80:   0f 0f 0f 0f 0f 0f 0f 0f  00 00 00 00 08 0a 00 00   |................|
0xad90:   ff ff 00 00 00 00 00 00  c3 00 0f ff 00 00 c0 c0   |................|
0xada0:   c0 c0 c0 c0 c0 c0 c0 c0  ff ff 00 00 37 00 00 00   |............7...|
0xadb0:   00 00 00 04 00 00 00 00  30 40 70 00 00 04 0d 00   |........0@p.....|
0xadc0:   18                                                 |.               |
; section: .rodata.get_literal_prica
0xadc0:   18 68 ff ff 76 68 ff ff  6b 67 ff ff 6b 67 ff ff   |.h..vh..kg..kg..|
0xadd0:   6b 67 ff ff 6b 67 ff ff  6b 67 ff ff 68 68 ff ff   |kg..kg..kg..hh..|
0xade0:   6b 67 ff ff 6b 67 ff ff  6b 67 ff ff 6b 67 ff ff   |kg..kg..kg..kg..|
0xadf0:   4f 68 ff ff 30 68 ff ff  07 68 ff ff 33 67 ff ff   |Oh..0h...h..3g..|
0xae00:   33 67 ff ff c8 67 ff ff  d4 67 ff ff ec 67 ff ff   |3g...g...g...g..|
0xae10:   0f 68 ff ff ??                                     |.h..?           |
; section: .rodata.lzma2_decode
0xae18:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .rodata.lzma_lzma_encode
0xae20:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .rodata.lzma_lzma_encodd
0xae30:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae40:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae50:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae60:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae70:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae80:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xae90:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaea0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaeb0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaec0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xaed0:   ??                                                 |?               |
; section: .rodata.lzip_decode0
0xaee0:   04 00 10 08 03 00 00 00  03 00 00 00 03 00 00 00   |................|
0xaef0:   04 00 78 06 03 00 00 00  03 00 00 00 30 00 0c 00   |..x.........0...|
0xaf00:   03 00 00 00 04 00 d8 00  03 00 00 00 03 00 00 00   |................|
0xaf10:   03 00 00 00 03 00 00 00  03 00 00 00 43 00 00 00   |............C...|
0xaf20:   32 00 00 00 03 00 00 00  03 00 00 00 13 01 00 00   |2...............|
0xaf30:   92 00 00 00 12 00 00 00  42 00 00 00 93 00 00 00   |........B.......|
0xaf40:   62 00 00 00 b3 00 00 00  b2 00 00 00 03 00 00 00   |b...............|
0xaf50:   03 00 00 00 93 00 00 00  42 00 00 00 c3 00 00 00   |........B.......|
0xaf60:   b2 00 00 00 03 00 00 00  12 00 00 00 04 00 08 07   |................|
0xaf70:   04 00 08 01 12 00 00 00  63 00 00 00 03 00 00 00   |........c.......|
0xaf80:   13 00 00 00 f2 00 00 00  03 00 00 00 a3 00 00 00   |................|
0xaf90:   92 00 00 00 33 01 00 00  f2 00 00 00 43 01 00 00   |....3.......C...|
0xafa0:   22 00 00 00 22 01 00 00  04 00 70 08 22 00 00 00   |"...".....p."...|
0xafb0:   23 00 00 00 72 01 00 00  b3 01 00 00 92 00 00 00   |#...r...........|
0xafc0:   83 00 00 00 23 00 00 00  82 01 00 00 63 01 00 00   |....#.......c...|
0xafd0:   13 00 00 00 04 00 a0 01  22 00 00 00 23 00 00 00   |........"...#...|
0xafe0:   72 01 00 00 b3 01 00 00  b2 01 00 00 03 00 00 00   |r...............|
0xaff0:   03 00 00 00 03 00 00 00  23 01 00 00 43 00 00 00   |........#...C...|
0xb000:   c2 00 00 00 90 01 30 00  72 00 00 00 21 01 04 00   |......0.r...!...|
0xb010:   03 01 00 00 92 00 00 00  22 01 00 00 32 00 00 00   |........"...2...|
0xb020:   33 01 00 00 d2 00 00 00  12 00 00 00 13 00 00 00   |3...............|
0xb030:   04 00 40 0c e2 00 00 00  03 00 00 00 53 01 00 00   |..@.........S...|
0xb040:   22 01 00 00 04 00 d0 06  e2 00 00 00 a3 00 00 00   |"...............|
0xb050:   92 00 00 00 53 01 00 00  a0 00 14 00 d2 01 00 00   |....S...........|
0xb060:   04 00 58 09 62 00 00 00  92 00 00 00 04 00 18 04   |..X.b...........|
0xb070:   42 01 00 00 13 00 00 00  b3 01 00 00 04 00 e0 04   |B...............|
0xb080:   33 00 00 00 a2 01 00 00  43 01 00 00 92 00 00 00   |3.......C.......|
0xb090:   a2 00 00 00 33 02 00 00  72 01 00 00 10 00 40 00   |....3...r.....@.|
0xb0a0:   a0 00 30 00 00 02 20 00  a2 00 00 00 21 00 0c 00   |..0... .....!...|
0xb0b0:   12 00 00 00 04 00 90 07  b2 01 00 00 53 00 00 00   |............S...|
0xb0c0:   93 01 00 00 92 00 00 00  22 01 00 00 83 01 00 00   |........".......|
0xb0d0:   53 00 00 00 82 00 00 00  32 01 00 00 03 02 00 00   |S.......2.......|
0xb0e0:   62 01 00 00 63 01 00 00  b2 00 00 00 22 01 00 00   |b...c......."...|
0xb0f0:   33 00 00 00 33 00 00 00  73 00 00 00 04 00 18 00   |3...3...s.......|
0xb100:   d2 01 00 00 13 02 00 00  52 00 00 00 d3 00 00 00   |........R.......|
0xb110:   02 01 00 00 c3 00 00 00  52 00 00 00 d3 00 00 00   |........R.......|
0xb120:   b2 01 00 00 a3 01 00 00  23 00 00 00 e2 01 00 00   |........#.......|
0xb130:   33 00 00 00 33 00 00 00  b3 01 00 00 a2 00 00 00   |3...3...........|
0xb140:   53 00 00 00 b3 00 00 00  c2 01 00 00 d3 01 00 00   |S...............|
0xb150:   03 00 00 00 22 00 00 00  63 00 00 00 12 00 00 00   |...."...c.......|
0xb160:   e2 01 00 00 23 02 00 00  22 00 00 00 a2 00 00 00   |....#...".......|
0xb170:   53 00 00 00 63 00 00 00  04 00 b0 00 82 01 00 00   |S...c...........|
0xb180:   53 00 00 00 03 00 00 00  03 00 00 00 e3 01 00 00   |S...............|
0xb190:   32 00 00 00 73 00 00 00  02 02 00 00 b3 00 00 00   |2...s...........|
0xb1a0:   52 00 00 00 92 00 00 00  03 00 00 00 93 02 00 00   |R...............|
0xb1b0:   02 02 00 00 53 00 00 00  30 02 40 00 b2 00 00 00   |....S...0.@.....|
0xb1c0:   a1 02 04 00 02 02 00 00  03 02 00 00 42 01 00 00   |............B...|
0xb1d0:   83 01 00 00 92 00 00 00  03 00 00 00 20 01 e0 00   |............ ...|
0xb1e0:   e2 01 00 00 91 02 04 00  04 00 60 09 d2 01 00 00   |..........`.....|
0xb1f0:   03 00 00 00 03 00 00 00  03 00 00 00 03 00 00 00   |................|
0xb200:   04 00 d0 09 e2 01 00 00  04 00 68 04 32 01 00 00   |..........h.2...|
0xb210:   03 00 00 00 03 00 00 00  42 00 00 00 c3 00 00 00   |........B.......|
0xb220:   80 00 18 00 72 01 00 00  21 02 04 00 32 01 00 00   |....r...!...2...|
0xb230:   d2 00 00 00 13 01 00 00  53 00 00 00 92 00 00 00   |........S.......|
0xb240:   53 00 00 00 82 00 00 00  20 00 48 00 52 00 00 00   |S....... .H.R...|
0xb250:   04 00 e8 07 62 00 00 00  92 00 00 00 83 01 00 00   |....b...........|
0xb260:   03 00 00 00 04 00 68 02  32 01 00 00 03 00 00 00   |......h.2.......|
0xb270:   03 00 00 00 42 00 00 00  53 00 00 00 23 01 00 00   |....B...S...#...|
0xb280:   43 00 00 00 c2 00 00 00  03 00 00 00 f0 02 28 00   |C.............(.|
0xb290:   92 01 00 00 11 01 04 00  d2 00 00 00 13 01 00 00   |................|
0xb2a0:   53 00 00 00 92 00 00 00  53 00 00 00 72 00 00 00   |S.......S...r...|
0xb2b0:   82 00 00 00 04 00 e0 06  82 01 00 00 33 00 00 00   |............3...|
0xb2c0:   e3 01 00 00 12 00 00 00  c2 01 00 00 b3 00 00 00   |................|
0xb2d0:   a3 00 00 00 d3 00 00 00  c2 00 00 00 32 01 00 00   |............2...|
0xb2e0:   12 01 00 00 13 01 00 00  02 01 00 00 03 00 00 00   |................|
0xb2f0:   30 00 3c 00 03 00 00 00  61 01 04 00 04 00 28 0b   |0.<.....a.....(.|
0xb300:   42 01 00 00 13 00 00 00  b3 01 00 00 04 00 38 08   |B.............8.|
0xb310:   22 01 00 00 12 00 00 00  50 03 0c 00 b2 01 00 00   |".......P.......|
0xb320:   71 01 04 00 62 01 00 00  63 00 00 00 52 00 00 00   |q...b...c...R...|
0xb330:   93 01 00 00 82 01 00 00  93 00 00 00 82 00 00 00   |................|
0xb340:   03 01 00 00 72 00 00 00  04 00 a8 02 52 03 00 00   |....r.......R...|
0xb350:   23 02 00 00 52 00 00 00  93 01 00 00 c2 01 00 00   |#...R...........|
0xb360:   23 01 00 00 a3 00 00 00  04 00 08 0c 52 03 00 00   |#...........R...|
0xb370:   23 02 00 00 52 00 00 00  33 00 00 00 43 01 00 00   |#...R...3...C...|
0xb380:   82 00 00 00 04 00 f0 03  42 01 00 00 32 00 00 00   |........B...2...|
0xb390:   62 00 00 00 f3 01 00 00  42 00 00 00 00 03 34 00   |b.......B.....4.|
0xb3a0:   70 02 18 00 f2 02 00 00  f1 01 08 00 33 01 00 00   |p...........3...|
0xb3b0:   c2 00 00 00 a3 01 00 00  b2 01 00 00 04 00 18 01   |................|
0xb3c0:   82 01 00 00 43 01 00 00  82 00 00 00 04 00 08 04   |....C...........|
0xb3d0:   82 02 00 00 51 02 04 00  33 00 00 00 d3 00 00 00   |....Q...3.......|
0xb3e0:   c3 00 00 00 92 01 00 00  04 00 f8 00 32 02 00 00   |............2...|
0xb3f0:   11 02 04 00 c3 01 00 00  62 01 00 00 92 00 00 00   |........b.......|
0xb400:   20 02 44 00 a2 01 00 00  04 00 10 0d 42 01 00 00   | .D.........B...|
0xb410:   13 00 00 00 b3 01 00 00  04 00 f8 0a 22 01 00 00   |............"...|
0xb420:   12 00 00 00 50 03 0c 00  b2 01 00 00 71 01 04 00   |....P.......q...|
0xb430:   62 01 00 00 63 00 00 00  52 00 00 00 93 01 00 00   |b...c...R.......|
0xb440:   f2 01 00 00 04 00 f8 06  42 01 00 00 13 00 00 00   |........B.......|
0xb450:   b3 01 00 00 04 00 58 07  32 01 00 00 03 00 00 00   |......X.2.......|
0xb460:   03 00 00 00 42 00 00 00  53 00 00 00 23 01 00 00   |....B...S...#...|
0xb470:   43 00 00 00 c2 00 00 00  03 00 00 00 b3 00 00 00   |C...............|
0xb480:   32 01 00 00 93 00 00 00  c2 00 00 00 63 02 00 00   |2...........c...|
0xb490:   f2 01 00 00 93 00 00 00  12 00 00 00 04 00 10 05   |................|
0xb4a0:   32 02 00 00 22 00 00 00  c2 00 00 00 a3 01 00 00   |2..."...........|
0xb4b0:   02 02 00 00 43 02 00 00  53 00 00 00 10 04 68 00   |....C...S.....h.|
0xb4c0:   70 02 20 00 72 02 00 00  31 02 08 00 72 00 00 00   |p. .r...1...r...|
0xb4d0:   82 00 00 00 12 01 00 00  04 00 28 0c 82 02 00 00   |..........(.....|
0xb4e0:   e3 02 00 00 32 02 00 00  43 02 00 00 92 01 00 00   |....2...C.......|
0xb4f0:   82 00 00 00 43 02 00 00  04 00 60 0c e2 03 00 00   |....C.....`.....|
0xb500:   03 00 00 00 53 04 00 00  32 02 00 00 02 02 00 00   |....S...2.......|
0xb510:   04 00 88 01 30 01 cc 01  70 00 10 01 60 00 d0 00   |....0...p...`...|
0xb520:   30 00 3c 00 40 04 1c 00  01 00 04 00 81 02 14 00   |0.<.@...........|
0xb530:   a2 00 00 00 70 02 38 02  c2 01 00 00 04 00 c0 08   |....p.8.........|
0xb540:   f2 03 00 00 53 03 00 00  13 01 00 00 f2 00 00 00   |....S...........|
0xb550:   13 01 00 00 e2 01 00 00  72 01 00 00 02 01 00 00   |........r.......|
0xb560:   04 00 a8 06 82 01 00 00  43 01 00 00 53 00 00 00   |........C...S...|
0xb570:   e2 00 00 00 e2 00 00 00  23 01 00 00 83 01 00 00   |........#.......|
0xb580:   c2 00 00 00 f2 03 00 00  e3 04 00 00 82 00 00 00   |................|
0xb590:   72 01 00 00 43 01 00 00  53 00 00 00 e2 00 00 00   |r...C...S.......|
0xb5a0:   e2 00 00 00 23 01 00 00  b2 00 00 00 93 01 00 00   |....#...........|
0xb5b0:   23 00 00 00 52 00 00 00  62 02 00 00 10 00 5c 00   |#...R...b.....\.|
0xb5c0:   62 01 00 00 21 02 04 00  04 00 e0 01 b2 02 00 00   |b...!...........|
0xb5d0:   a2 01 00 00 43 02 00 00  83 00 00 00 52 01 00 00   |....C.......R...|
0xb5e0:   13 00 00 00 c2 00 00 00  32 00 00 00 13 01 00 00   |........2.......|
0xb5f0:   04 00 f0 0c 72 02 00 00  03 00 00 00 c2 00 00 00   |....r...........|
0xb600:   c2 00 00 00 04 00 c0 0b  72 02 00 00 12 00 00 00   |........r.......|
0xb610:   33 01 00 00 33 00 00 00  f2 01 00 00 f3 01 00 00   |3...3...........|
0xb620:   02 01 00 00 04 00 90 0a  32 04 00 00 23 00 00 00   |........2...#...|
0xb630:   53 00 00 00 93 01 00 00  04 00 98 0b 62 02 00 00   |S...........b...|
0xb640:   83 00 00 00 82 00 00 00  b2 01 00 00 c3 01 00 00   |................|
0xb650:   42 00 00 00 04 00 e0 03  12 02 00 00 43 00 00 00   |B...........C...|
0xb660:   92 00 00 00 52 01 00 00  a3 02 00 00 f2 01 00 00   |....R...........|
0xb670:   83 01 00 00 a2 00 00 00  b3 00 00 00 b3 00 00 00   |................|
0xb680:   02 01 00 00 63 00 00 00  20 00 84 00 c0 01 64 00   |....c... .....d.|
0xb690:   e0 01 50 00 60 01 34 00  32 02 00 00 11 03 10 00   |..P.`.4.2.......|
0xb6a0:   04 00 88 0a 12 02 00 00  42 00 00 00 03 01 00 00   |........B.......|
0xb6b0:   00 03 10 00 e2 02 00 00  04 00 c0 0a 42 01 00 00   |............B...|
0xb6c0:   13 00 00 00 b3 01 00 00  04 00 98 07 32 01 00 00   |............2...|
0xb6d0:   03 00 00 00 03 00 00 00  42 00 00 00 d2 00 00 00   |........B.......|
0xb6e0:   13 01 00 00 53 00 00 00  04 00 18 09 22 01 00 00   |....S......."...|
0xb6f0:   12 00 00 00 04 00 d0 01  82 01 00 00 33 01 00 00   |............3...|
0xb700:   c2 00 00 00 a3 01 00 00  b2 01 00 00 33 00 00 00   |............3...|
0xb710:   43 01 00 00 82 01 00 00  53 00 00 00 23 01 00 00   |C.......S...#...|
0xb720:   43 00 00 00 c2 00 00 00  03 00 00 00 04 00 40 05   |C.............@.|
0xb730:   32 01 00 00 03 00 00 00  03 00 00 00 42 00 00 00   |2...........B...|
0xb740:   d2 00 00 00 13 01 00 00  04 00 f8 08 e2 00 00 00   |................|
0xb750:   f2 00 00 00 00 02 0c 00  a2 01 00 00 10 05 94 00   |................|
0xb760:   70 03 74 00 70 03 68 00  b0 03 30 00 20 01 04 00   |p.t.p.h...0. ...|
0xb770:   31 03 10 00 82 00 00 00  22 00 00 00 04 00 90 09   |1.......".......|
0xb780:   e3 01 00 00 13 01 00 00  12 05 00 00 a3 01 00 00   |................|
0xb790:   f3 00 00 00 04 00 a8 04  12 04 00 00 43 01 00 00   |............C...|
0xb7a0:   93 00 00 00 04 00 e0 00  d2 01 00 00 d3 01 00 00   |................|
0xb7b0:   12 00 00 00 d3 00 00 00  c2 01 00 00 43 01 00 00   |............C...|
0xb7c0:   93 00 00 00 c2 01 00 00  03 02 00 00 a2 00 00 00   |................|
0xb7d0:   12 01 00 00 92 03 00 00  b3 03 00 00 33 01 00 00   |............3...|
0xb7e0:   c3 00 00 00 62 02 00 00  63 02 00 00 82 00 00 00   |....b...c.......|
0xb7f0:   63 00 00 00 52 01 00 00  73 01 00 00 73 00 00 00   |c...R...s...s...|
0xb800:   a2 00 00 00 c2 01 00 00  23 01 00 00 53 01 00 00   |........#...S...|
0xb810:   92 01 00 00 32 00 00 00  b3 00 00 00 a3 00 00 00   |....2...........|
0xb820:   f3 00 00 00 92 00 00 00  22 01 00 00 a2 03 00 00   |........".......|
0xb830:   b3 04 00 00 82 00 00 00  f2 00 00 00 63 02 00 00   |............c...|
0xb840:   c2 01 00 00 33 00 00 00  b3 01 00 00 32 01 00 00   |....3.......2...|
0xb850:   04 00 58 01 d2 01 00 00  03 00 00 00 03 00 00 00   |..X.............|
0xb860:   03 00 00 00 03 00 00 00  62 00 00 00 c2 00 00 00   |........b.......|
0xb870:   13 02 00 00 f2 01 00 00  f3 01 00 00 62 00 00 00   |............b...|
0xb880:   03 00 00 00 33 00 00 00  03 00 00 00 04 00 78 08   |....3.........x.|
0xb890:   e2 00 00 00 63 01 00 00  b2 00 00 00 22 01 00 00   |....c......."...|
0xb8a0:   62 00 00 00 a3 00 00 00  e3 01 00 00 82 00 00 00   |b...............|
0xb8b0:   72 01 00 00 23 02 00 00  42 01 00 00 53 01 00 00   |r...#...B...S...|
0xb8c0:   13 00 00 00 04 00 b0 02  12 00 00 00 c2 00 00 00   |................|
0xb8d0:   52 00 00 00 52 00 00 00  63 00 00 00 04 00 28 02   |R...R...c.....(.|
0xb8e0:   e2 00 00 00 a3 00 00 00  92 01 00 00 83 02 00 00   |................|
0xb8f0:   12 02 00 00 33 00 00 00  a0 03 1c 00 72 03 00 00   |....3.......r...|
0xb900:   21 03 04 00 83 00 00 00  c3 01 00 00 c2 01 00 00   |!...............|
0xb910:   53 00 00 00 83 00 00 00  b3 00 00 00 60 05 58 00   |S...........`.X.|
0xb920:   b2 04 00 00 04 00 60 0a  82 01 00 00 43 01 00 00   |......`.....C...|
0xb930:   82 00 00 00 a3 00 00 00  e2 00 00 00 b3 01 00 00   |................|
0xb940:   04 00 c8 09 82 01 00 00  73 01 00 00 c2 01 00 00   |........s.......|
0xb950:   63 00 00 00 a3 01 00 00  c2 00 00 00 a3 00 00 00   |c...............|
0xb960:   92 00 00 00 83 01 00 00  a2 01 00 00 70 05 2c 00   |............p.,.|
0xb970:   e2 03 00 00 91 03 04 00  33 00 00 00 43 01 00 00   |........3...C...|
0xb980:   53 00 00 00 e2 00 00 00  e2 00 00 00 63 00 00 00   |S...........c...|
0xb990:   93 01 00 00 04 00 a8 08  82 01 00 00 43 01 00 00   |............C...|
0xb9a0:   f2 02 00 00 04 00 b0 05  e2 01 00 00 f3 00 00 00   |................|
0xb9b0:   23 00 00 00 42 00 00 00  43 01 00 00 04 00 98 0a   |#...B...C.......|
0xb9c0:   73 00 00 00 03 00 00 00  04 00 b8 05 82 05 00 00   |s...............|
0xb9d0:   21 05 04 00 c2 01 00 00  13 01 00 00 73 01 00 00   |!...........s...|
0xb9e0:   82 00 00 00 b2 01 00 00  53 00 00 00 a3 01 00 00   |........S.......|
0xb9f0:   03 00 00 00 20 05 38 00  12 05 00 00 30 00 dc 00   |.... .8.....0...|
0xba00:   20 05 68 00 f0 01 58 00  01 00 04 00 04 00 b8 00   | .h...X.........|
0xba10:   12 00 00 00 22 01 00 00  33 00 00 00 a3 01 00 00   |...."...3.......|
0xba20:   82 00 00 00 13 00 00 00  c2 01 00 00 63 00 00 00   |............c...|
0xba30:   33 00 00 00 03 02 00 00  13 00 00 00 03 00 00 00   |3...............|
0xba40:   04 00 d8 01 13 01 00 00  a3 00 00 00 22 01 00 00   |............"...|
0xba50:   62 00 00 00 a3 00 00 00  23 01 00 00 22 01 00 00   |b.......#..."...|
0xba60:   b3 00 00 00 b0 05 24 00  72 04 00 00 b1 05 04 00   |......$.r.......|
0xba70:   b2 01 00 00 93 00 00 00  04 00 28 00 f2 01 00 00   |..........(.....|
0xba80:   83 00 00 00 62 00 00 00  f3 01 00 00 82 01 00 00   |....b...........|
0xba90:   73 00 00 00 92 03 00 00  a3 04 00 00 22 01 00 00   |s..........."...|
0xbaa0:   43 01 00 00 93 00 00 00  02 01 00 00 52 00 00 00   |C...........R...|
0xbab0:   83 01 00 00 c2 01 00 00  73 00 00 00 32 00 00 00   |........s...2...|
0xbac0:   03 02 00 00 23 00 00 00  b2 01 00 00 04 00 48 03   |....#.........H.|
0xbad0:   12 00 00 00 32 00 00 00  a2 00 00 00 72 00 00 00   |....2.......r...|
0xbae0:   53 00 00 00 04 00 48 0a  32 00 00 00 d2 00 00 00   |S.....H.2.......|
0xbaf0:   23 00 00 00 32 03 00 00  e2 00 00 00 03 01 00 00   |#...2...........|
0xbb00:   63 03 00 00 b2 02 00 00  72 01 00 00 93 01 00 00   |c.......r.......|
0xbb10:   63 02 00 00 33 00 00 00  a3 00 00 00 43 00 00 00   |c...3.......C...|
0xbb20:   a2 04 00 00 04 00 d0 07  32 00 00 00 04 00 c0 07   |........2.......|
0xbb30:   32 00 00 00 d2 00 00 00  33 01 00 00 e2 01 00 00   |2.......3.......|
0xbb40:   33 01 00 00 c2 00 00 00  90 05 1c 00 32 04 00 00   |3...........2...|
0xbb50:   04 00 90 05 32 00 00 00  d2 00 00 00 32 01 00 00   |....2.......2...|
0xbb60:   83 02 00 00 62 05 00 00  04 00 38 09 32 00 00 00   |....b.....8.2...|
0xbb70:   d2 00 00 00 b3 00 00 00  a3 00 00 00 b2 01 00 00   |................|
0xbb80:   32 00 00 00 c3 01 00 00  52 01 00 00 01 00 40 00   |2.......R.....@.|
0xbb90:   80 00 24 00 42 04 00 00  04 00 20 00 33 00 00 00   |..$.B..... .3...|
0xbba0:   62 01 00 00 f3 00 00 00  c2 00 00 00 42 00 00 00   |b...........B...|
0xbbb0:   12 00 00 00 83 00 00 00  03 00 00 00 03 00 00 00   |................|
0xbbc0:   22 00 00 00 c3 01 00 00  53 00 00 00 22 00 00 00   |".......S..."...|
0xbbd0:   d2 01 00 00 33 00 00 00  01 00 48 00 02 04 00 00   |....3.....H.....|
0xbbe0:   c0 00 bc 00 01 00 04 00  04 00 40 04 42 01 00 00   |..........@.B...|
0xbbf0:   a2 03 00 00 b3 04 00 00  93 00 00 00 c2 01 00 00   |................|
0xbc00:   73 00 00 00 33 01 00 00  c2 00 00 00 f2 00 00 00   |s...3...........|
0xbc10:   33 02 00 00 22 01 00 00  92 00 00 00 53 00 00 00   |3...".......S...|
0xbc20:   e3 01 00 00 82 00 00 00  13 00 00 00 04 00 c0 00   |................|
0xbc30:   12 00 00 00 83 00 00 00  23 00 00 00 82 01 00 00   |........#.......|
0xbc40:   63 01 00 00 13 00 00 00  12 02 00 00 a3 01 00 00   |c...............|
0xbc50:   b3 00 00 00 b2 01 00 00  93 00 00 00 04 00 c8 00   |................|
0xbc60:   12 00 00 00 22 01 00 00  33 00 00 00 a3 01 00 00   |...."...3.......|
0xbc70:   82 00 00 00 13 00 00 00  04 00 d0 00 32 01 00 00   |............2...|
0xbc80:   33 00 00 00 d3 00 00 00  c3 00 00 00 92 01 00 00   |3...............|
0xbc90:   80 05 18 00 62 04 00 00  91 04 04 00 03 00 00 00   |....b...........|
0xbca0:   04 00 48 09 82 01 00 00  f3 01 00 00 42 02 00 00   |..H.........B...|
0xbcb0:   83 00 00 00 c3 01 00 00  c2 01 00 00 33 02 00 00   |............3...|
0xbcc0:   62 02 00 00 b0 04 68 00  70 04 24 00 c2 03 00 00   |b.....h.p.$.....|
0xbcd0:   31 04 08 00 13 02 00 00  92 01 00 00 33 00 00 00   |1...........3...|
0xbce0:   63 01 00 00 02 01 00 00  04 00 78 00 43 00 00 00   |c.........x.C...|
0xbcf0:   42 00 00 00 82 01 00 00  73 00 00 00 83 01 00 00   |B.......s.......|
0xbd00:   53 00 00 00 13 00 00 00  22 00 00 00 04 00 40 00   |S.......".....@.|
0xbd10:   82 01 00 00 b3 00 00 00  12 00 00 00 83 01 00 00   |................|
0xbd20:   c2 01 00 00 13 00 00 00  82 00 00 00 63 00 00 00   |............c...|
0xbd30:   33 02 00 00 62 02 00 00  a3 01 00 00 32 01 00 00   |3...b.......2...|
0xbd40:   23 02 00 00 04 00 50 00  22 01 00 00 a3 01 00 00   |#.....P.".......|
0xbd50:   82 00 00 00 13 00 00 00  c2 01 00 00 83 02 00 00   |................|
0xbd60:   62 02 00 00 23 01 00 00  32 00 00 00 d3 00 00 00   |b...#...2.......|
0xbd70:   12 01 00 00 53 00 00 00  04 00 a8 00 63 00 00 00   |....S.......c...|
0xbd80:   92 01 00 00 33 01 00 00  23 00 00 00 c2 00 00 00   |....3...#.......|
0xbd90:   02 01 00 00 43 02 00 00  d2 01 00 00 32 00 00 00   |....C.......2...|
0xbda0:   63 02 00 00 04 00 38 00  42 01 00 00 32 00 00 00   |c.....8.B...2...|
0xbdb0:   62 00 00 00 a3 00 00 00  e3 01 00 00 82 00 00 00   |b...............|
0xbdc0:   13 00 00 00 c2 01 00 00  63 00 00 00 83 00 00 00   |........c.......|
0xbdd0:   42 00 00 00 04 00 a0 00  12 00 00 00 c2 00 00 00   |B...............|
0xbde0:   52 00 00 00 83 01 00 00  c2 01 00 00 33 00 00 00   |R...........3...|
0xbdf0:   c3 01 00 00 62 01 00 00  53 00 00 00 c2 04 00 00   |....b...S.......|
0xbe00:   a3 04 00 00 04 00 48 00  53 00 00 00 a2 00 00 00   |......H.S.......|
0xbe10:   92 00 00 00 33 00 00 00  02 01 00 00 c3 00 00 00   |....3...........|
0xbe20:   33 01 00 00 32 01 00 00  32 00 00 00 83 00 00 00   |3...2...2.......|
0xbe30:   42 00 00 00 33 01 00 00  32 01 00 00 d3 00 00 00   |B...3...2.......|
0xbe40:   63 01 00 00 b2 00 00 00  93 00 00 00 13 00 00 00   |c...............|
0xbe50:   04 00 70 00 52 03 00 00  e3 01 00 00 33 00 00 00   |..p.R.......3...|
0xbe60:   32 00 00 00 73 00 00 00  13 00 00 00 b3 01 00 00   |2...s...........|
0xbe70:   04 00 58 00 52 03 00 00  e3 01 00 00 33 00 00 00   |..X.R.......3...|
0xbe80:   32 00 00 00 33 00 00 00  43 01 00 00 82 00 00 00   |2...3...C.......|
0xbe90:   04 00 60 00 32 01 00 00  a3 01 00 00 92 01 00 00   |..`.2...........|
0xbea0:   53 00 00 00 04 00 68 00  12 00 00 00 c2 00 00 00   |S.....h.........|
0xbeb0:   63 01 00 00 c2 00 00 00  a3 00 00 00 62 01 00 00   |c...........b...|
0xbec0:   30 06 50 00 f0 04 30 00  d0 04 1c 00 92 04 00 00   |0.P...0.........|
0xbed0:   51 04 0c 00 33 02 00 00  62 02 00 00 a3 01 00 00   |Q...3...b.......|
0xbee0:   b3 00 00 00 10 06 94 00  22 06 00 00 04 00 30 00   |........".....0.|
0xbef0:   42 01 00 00 32 00 00 00  62 00 00 00 23 01 00 00   |B...2...b...#...|
0xbf00:   a3 00 00 00 e3 00 00 00  12 00 00 00 92 01 00 00   |................|
0xbf10:   10 05 28 02 30 06 04 02  60 06 cc 01 b0 04 98 01   |..(.0...`.......|
0xbf20:   60 06 6c 01 70 04 3c 01  b0 04 0c 01 01 00 28 00   |`.l.p.<.......(.|
0xbf30:   b2 04 00 00 71 04 20 00  e0 05 0c 03 62 04 00 00   |....q. .....b...|
0xbf40:   04 00 58 0c 62 04 00 00  43 02 00 00 12 00 00 00   |..X.b...C.......|
0xbf50:   f3 02 00 00 c2 01 00 00  83 01 00 00 10 00 37 06   |..............7.|
0xbf60:   83 00 00 00 23 00 00 00  82 01 00 00 63 01 00 00   |....#.......c...|
0xbf70:   40 06 14 00 42 06 00 00  04 00 f0 04 b2 01 00 00   |@...B...........|
0xbf80:   93 00 00 00 e2 00 00 00  c3 00 00 00 04 00 90 06   |................|
0xbf90:   82 01 00 00 33 00 00 00  33 00 00 00 33 01 00 00   |....3...3...3...|
0xbfa0:   12 01 00 00 04 00 b8 07  32 01 00 00 03 00 00 00   |........2.......|
0xbfb0:   03 00 00 00 03 00 00 00  23 01 00 00 43 00 00 00   |........#...C...|
0xbfc0:   c2 00 00 00 01 00 50 00  e0 04 38 00 e0 04 20 00   |......P...8... .|
0xbfd0:   32 05 00 00 04 00 08 03  12 00 00 00 d2 01 00 00   |2...............|
0xbfe0:   04 00 10 07 e2 03 00 00  03 00 00 00 53 04 00 00   |............S...|
0xbff0:   12 05 00 00 33 05 00 00  32 02 00 00 43 02 00 00   |....3...2...C...|
0xc000:   03 00 00 00 f2 04 00 00  f3 02 00 00 f0 03 2c 00   |..............,.|
0xc010:   f2 03 00 00 04 00 28 04  52 01 00 00 93 01 00 00   |......(.R.......|
0xc020:   12 02 00 00 83 02 00 00  52 02 00 00 63 02 00 00   |........R...c...|
0xc030:   04 00 f0 05 12 00 00 00  32 00 00 00 04 00 b8 0a   |........2.......|
0xc040:   12 00 00 00 32 00 00 00  e0 05 0c 00 e2 05 00 00   |....2...........|
0xc050:   81 06 04 00 62 01 00 00  b0 06 28 00 02 05 00 00   |....b.....(.....|
0xc060:   e1 04 04 00 04 00 60 07  e2 00 00 00 32 00 00 00   |......`.....2...|
0xc070:   a3 01 00 00 72 00 00 00  62 01 00 00 93 00 00 00   |....r...b.......|
0xc080:   04 00 08 0d e3 01 00 00  04 00 c8 02 83 00 00 00   |................|
0xc090:   03 00 00 00 c2 01 00 00  c3 00 00 00 03 01 00 00   |................|
0xc0a0:   03 00 00 00 13 00 00 00  02 01 00 00 52 00 00 00   |............R...|
0xc0b0:   f3 00 00 00 e3 00 00 00  c2 06 00 00 c3 02 00 00   |................|
0xc0c0:   43 01 00 00 52 02 00 00  23 00 00 00 63 03 00 00   |C...R...#...c...|
0xc0d0:   f3 01 00 00 92 01 00 00  12 00 00 00 62 03 00 00   |............b...|
0xc0e0:   f3 02 00 00 33 02 00 00  b0 05 60 00 92 06 00 00   |....3.....`.....|
0xc0f0:   04 00 88 00 12 00 00 00  02 01 00 00 63 01 00 00   |............c...|
0xc100:   13 00 00 00 12 02 00 00  a3 01 00 00 32 01 00 00   |............2...|
0xc110:   f3 01 00 00 b2 01 00 00  93 00 00 00 04 00 90 00   |................|
0xc120:   32 01 00 00 a3 01 00 00  92 01 00 00 53 00 00 00   |2...........S...|
0xc130:   04 00 80 00 12 00 00 00  c2 00 00 00 63 01 00 00   |............c...|
0xc140:   c2 00 00 00 a3 00 00 00  62 01 00 00 70 05 30 00   |........b...p.0.|
0xc150:   70 05 1c 00 32 05 00 00  f1 04 08 00 33 02 00 00   |p...2.......3...|
0xc160:   62 02 00 00 10 00 78 00  92 04 00 00 e1 06 04 00   |b.....x.........|
0xc170:   04 00 98 00 83 00 00 00  62 02 00 00 a3 01 00 00   |........b.......|
0xc180:   32 01 00 00 33 00 00 00  f3 01 00 00 42 02 00 00   |2...3.......B...|
0xc190:   04 00 f8 09 83 00 00 00  b2 01 00 00 32 00 00 00   |............2...|
0xc1a0:   c3 01 00 00 10 05 40 01  90 05 24 01 d0 06 34 00   |......@...$...4.|
0xc1b0:   a0 04 14 00 c2 06 00 00  04 00 98 01 e2 00 00 00   |................|
0xc1c0:   32 00 00 00 a3 01 00 00  42 01 00 00 62 00 00 00   |2.......B...b...|
0xc1d0:   04 00 10 0b 92 01 00 00  50 05 08 00 62 05 00 00   |........P...b...|
0xc1e0:   04 00 80 03 42 01 00 00  32 00 00 00 43 01 00 00   |....B...2...C...|
0xc1f0:   c3 00 00 00 04 00 10 00  42 01 00 00 a2 03 00 00   |........B.......|
0xc200:   b3 04 00 00 93 00 00 00  73 00 00 00 12 00 00 00   |........s.......|
0xc210:   03 00 00 00 92 01 00 00  a2 03 00 00 93 05 00 00   |................|
0xc220:   02 01 00 00 d2 00 00 00  e3 01 00 00 82 00 00 00   |................|
0xc230:   13 00 00 00 c2 01 00 00  a3 00 00 00 04 00 00 0b   |................|
0xc240:   c2 06 00 00 f3 01 00 00  c3 02 00 00 f3 00 00 00   |................|
0xc250:   e3 01 00 00 c2 01 00 00  d3 01 00 00 52 04 00 00   |............R...|
0xc260:   43 04 00 00 03 00 00 00  02 05 00 00 13 03 00 00   |C...............|
0xc270:   73 00 00 00 32 05 00 00  f3 01 00 00 43 02 00 00   |s...2.......C...|
0xc280:   83 02 00 00 12 00 00 00  92 00 00 00 33 00 00 00   |............3...|
0xc290:   f2 03 00 00 f3 03 00 00  b2 05 00 00 93 05 00 00   |................|
0xc2a0:   03 01 00 00 d2 00 00 00  82 05 00 00 93 05 00 00   |................|
0xc2b0:   63 00 00 00 32 01 00 00  23 02 00 00 a3 00 00 00   |c...2...#.......|
0xc2c0:   61 02 5b 00 62 00 00 00  e0 06 c8 13 00 06 5c 13   |a.[.b.........\.|
0xc2d0:   c0 05 20 13 60 05 98 12  00 05 14 12 30 07 e0 10   |.. .`.......0...|
0xc2e0:   30 04 7c 10 a0 02 90 0d  80 04 00 0d 90 03 d8 0c   |0.|.............|
0xc2f0:   10 02 14 0c 60 04 4c 0b  60 04 34 0b 10 04 24 0b   |....`.L.`.4...$.|
0xc300:   e0 05 78 0a 90 04 3c 0a  70 01 c8 08 c0 05 50 08   |..x...<.p.....P.|
0xc310:   80 05 fc 07 80 05 e4 07  20 01 e4 06 b0 00 8c 03   |........ .......|
0xc320:   90 00 00 03 d0 00 b8 02  20 00 20 01 10 00 ec 00   |........ . .....|
0xc330:   20 07 d4 00 60 05 8c 00  30 07 08 00 12 04 00 00   | ...`...0.......|
0xc340:   00                                                 |.               |
; section: .rodata.crc64_clmul1
0xc340:   00 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc350:   00 00 00 00 00 00 00 00  00 00 00 00 00 20 00 00   |............. ..|
0xc360:   00 00 00 00 00 00 00 00  00 00 00 00 00 80 00 00   |................|
0xc370:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 04 00   |................|
0xc380:   00 00 00 00 00 00 04 00  00 00 00 00 00 00 00 00   |................|
0xc390:   00 00 00 00 00 00 00 00  00 00 00 00 00 01 00 00   |................|
0xc3a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 08 00   |................|
0xc3b0:   00 00 00 00 00 00 00 00  00 00 00 00 40 00 08 00   |............@...|
0xc3c0:   01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc3d0:   00 00 00 00 00 02 00 00  00 00 00 00 00 00 00 00   |................|
0xc3e0:   00 00 00 00 00 00 00 00  00 00 00 00 10 00 00 00   |................|
0xc3f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 10 00 00   |................|
0xc400:   00 00 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |.... ...........|
0xc410:   00 00 00 00 00 00 00 20  00 00 00 00 00 00 00 00   |....... ........|
0xc420:   00 00 00 00 00 00 00 00  00 00 00 00 00 02 00 00   |................|
0xc430:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 01 00   |................|
0xc440:   00 00 00 00 00 01 00 00  00 00 00 00 00 00 00 00   |................|
0xc450:   00 00 00 00 00 00 00 04  00 00 00 00 00 00 00 00   |................|
0xc460:   00 00 00 00 00 00 00 01  00 00 00 00 00 00 00 00   |................|
0xc470:   00 00 00 00 00 00 10 00  00 00 00 00 00 00 00 00   |................|
0xc480:   00 00 00 00 00 40 00 00  00 00 00 00 00 00 00 00   |.....@..........|
0xc490:   00 00 00 00 00 40 00 00  00 00 00 00 00 00 08 00   |.....@..........|
0xc4a0:   00 00 00 00 00 80 00 00  00 00 00 00 00 00 00 00   |................|
0xc4b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 40 00 00   |.............@..|
0xc4c0:   00 00 00 00 00 00 00 00  00 00 00 00 04 00 00 00   |................|
0xc4d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 20 00   |.............. .|
0xc4e0:   00 00 00 00 00 00 00 00  00 00 00 00 40 00 00 00   |............@...|
0xc4f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 00   |................|
0xc500:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 02   |................|
0xc510:   00 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0xc520:   00 00 00 00 00 00 00 00  00 00 00 00 00 08 00 00   |................|
0xc530:   00 00 00 00 00 00 00 00  00 00 00 00 08 00 00 00   |................|
0xc540:   00 00 00 00 00 00 00 00  00 00 00 00 02 00 20 00   |.............. .|
0xc550:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 10 00   |................|
0xc560:   00 00 00 00 00 00 00 00  00 00 00 00 00 42 00 00   |.............B..|
0xc570:   00 00 00 00 00 00 00 00  00 00 00 80 00 00 00 00   |................|
0xc580:   00 00 00 00 00 00 00 00  00 00 00 00 54 40 00 00   |............T@..|
0xc590:   00 00 00 00 00 00 00 00  00 40 00 00 00 00 00 00   |.........@......|
0xc5a0:   00 04 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xc5b0:   00 00 00 00 00 00 00 00  00 00 00 00 80 00 00 00   |................|
0xc5c0:   00 00 00 00 00 00 00 00  00 00 00 00 02 00 00 00   |................|
0xc5d0:   00 00 00 00 00 00 00 00  00 00 00 00 88 00 00 00   |................|
0xc5e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 40 20 00   |.............@ .|
0xc5f0:   00 00 00 00 00 00 00 00  00 00 00 02 00 00 00 00   |................|
0xc600:   00 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00   |................|
0xc610:   00 00 00 00 00 00 00 00  00 10 00 00 00 00 00 00   |................|
0xc620:   00 00 00 00 00 00 00 00  00 00 01 00 00 00 00 00   |................|
0xc630:   00 00 00 00 00 00 00 00  00 00 08 00 00 00 00 00   |................|
0xc640:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 22 00   |..............".|
0xc650:   00 00 00 00 00 00 01 00  00 00 00 00 00 00 00 00   |................|
0xc660:   00 00 00 00 00 00 00 00  00 02 08 00 00 00 00 00   |................|
0xc670:   00 00 00 00 00 00 00 00  00 00 00 00 80 00 01 00   |................|
0xc680:   00 00 00 00 00 00 00 00  20 00 00 00 00 00 00 00   |........ .......|
0xc690:   00 00 00 00 00 00 00 00  00 00 10 00 00 00 00 00   |................|
0xc6a0:   00 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00   |................|
0xc6b0:   00 00 00 00 00 00 00 00  00 80 00 00 00 00 00 00   |................|
0xc6c0:   00 00 00 00 00 00 00 00  00 08 01 00 00 00 00 00   |................|
0xc6d0:   00 00 00 00 00 00 00 00  00 00 00 00 40 40 00 00   |............@@..|
0xc6e0:   00 00 00 00 00 00 00 00  00 00 00 01 00 00 00 00   |................|
0xc6f0:   00 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0xc700:   00 00 00 00 00 00 00 00  00 00 04 00 00 00 00 00   |................|
0xc710:   00 00 00 00 00 00 00 00  00 01 00 00 00 00 00 00   |................|
0xc720:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 01   |................|
0xc730:   00 00 00 00 00 00 00 00  40 02 20 00 00 00 00 00   |........@. .....|
0xc740:   01 00 00 00 00 00 00 00  00 02 00 00 00 00 00 00   |................|
0xc750:   01 00 00 00 00 00 00 00  00 00 40 00 00 00 00 00   |..........@.....|
0xc760:   00 00 00 00 00 00 00 00  00 00 00 00 20 02 00 00   |............ ...|
0xc770:   00 00 00 00 00 00 00 00  10 00 00 00 00 00 00 00   |................|
0xc780:   00 00 00 00 00 00 02 00  00 00 00 00 00 00 00 00   |................|
0xc790:   00 00 00 00 00 00 00 00  00 00 00 00 40 40 08 00   |............@@..|
0xc7a0:   00 00 00 00 00 00 00 00  00 08 00 00 00 00 00 00   |................|
0xc7b0:   00 00 00 00 00 00 40 00  00 00 00 00 00 00 00 00   |......@.........|
0xc7c0:   00 00 00 00 00 00 20 00  00 00 00 00 00 00 00 00   |...... .........|
0xc7d0:   00 00 00 00 00 00 00 00  00 00 00 00 00 21 00 00   |.............!..|
0xc7e0:   00 00 00 00 00 00 00 00  18 20 01 00 08 00 08 00   |......... ......|
0xc7f0:   00 00 00 00 00 00 00 00  08 00 40 00 00 00 00 00   |..........@.....|
0xc800:   00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00   |................|
0xc810:   00 00 00 00 00 00 00 10  00 00 00 00 00 00 00 00   |................|
0xc820:   00 00 00 00 00 00 00 00  00 02 04 00 00 00 00 00   |................|
0xc830:   00 00 00 00 00 00 00 00  00 20 00 00 00 00 00 00   |......... ......|
0xc840:   00 00 00 00 00 00 00 00  00 00 20 00 00 00 00 00   |.......... .....|
0xc850:   00 00 00 00 00 00 00 00  80 00 00 00 00 00 00 00   |................|
0xc860:   00 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00   |........@.......|
0xc870:   00 00 00 00 00 00 00 00  16 00 21 00 00 00 00 00   |..........!.....|
0xc880:   00 00 00 00 00 00 00 00  10 02 00 00 00 00 00 00   |................|
0xc890:   00 00 00 00 00 00 00 00  00 00 00 00 c0 40 09 00   |.............@..|
0xc8a0:   00 00 00 00 00 20 00 00  00 00 00 00 00 00 00 00   |..... ..........|
0xc8b0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 40 00   |..............@.|
0xc8c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 04   |................|
0xc8d0:   00 00 00 00 00 00 00 00  00 00 00 00 08 00 04 00   |................|
0xc8e0:   00 00 00 00 00 00 00 00  00 00 00 00 20 10 00 00   |............ ...|
0xc8f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 09 00   |................|
0xc900:   01 00 00 00 00 00 00 00  00 00 00 80 00 00 00 00   |................|
0xc910:   00 00 00 00 00 00 00 00  00 00 00 80 00 00 10 00   |................|
0xc920:   00 00 00 00 00 00 00 00  00 00 00 80 30 00 04 00   |............0...|
0xc930:   00 00 00 00 00 00 00 00  00 00 00 80 20 00 00 00   |............ ...|
0xc940:   00 00 00 00 00 40 00 00  00 00 00 00 00 00 04 00   |.....@..........|
0xc950:   00 00 00 00 00 00 00 00  00 00 00 00 08 10 08 00   |................|
0xc960:   00 00 00 00 00 00 00 00  00 00 00 00 04 00 08 00   |................|
0xc970:   00 00 00 00 00 00 00 00  00 00 00 00 10 02 00 00   |................|
0xc980:   00 00 00 00 00 00 00 00  00 00 00 00 02 00 40 00   |..............@.|
0xc990:   00 00 00 00 00 00 00 00  00 00 00 00 02 08 01 00   |................|
0xc9a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 02 00   |................|
0xc9b0:   00 00 00 00 00 00 00 00  00 00 00 00 40 02 06 00   |............@...|
0xc9c0:   00 00 00 00 00 00 00 00  00 00 00 00 20 00 08 00   |............ ...|
0xc9d0:   00 00 00 00 00 00 00 00  00 00 00 00 9a 10 1d 00   |................|
0xc9e0:   00 00 00 00 00 00 00 00  00 00 00 00 02 20 00 00   |............. ..|
0xc9f0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 0c 00   |................|
0xca00:   00 00 00 00 00 00 00 00  00 00 00 00 02 00 2c 00   |..............,.|
0xca10:   00 00 00 00 00 00 00 00  00 00 00 00 80 00 20 00   |.............. .|
0xca20:   00 00 00 00 00 00 00 00  00 00 00 00 00 10 04 00   |................|
0xca30:   00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0xca40:   00 00 00 00 00 00 04 00  00 00 00 00 00 00 04 00   |................|
0xca50:   00 00 00 00 00 00 00 00  00 00 00 00 02 00 06 00   |................|
0xca60:   00 00 00 00 00 20 00 00  00 00 00 00 00 00 01 00   |..... ..........|
0xca70:   00 00 00 00 00 00 00 00  00 00 00 00 20 01 18 02   |............ ...|
0xca80:   00 00 00 00 00 00 00 00  00 00 00 00 00 40 08 00   |.............@..|
0xca90:   00 00 00 00 00 00 00 00  00 00 00 00 00 04 00 00   |................|
0xcaa0:   00 00 00 00 21 80 00 00  be 18 bc 80 92 30 ad 83   |....!........0..|
0xcab0:   00                                                 |.               |
; section: .rodata.lzma12_mf_mao.0
0xcab0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcac0:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .rodata.rc_encode
0xcac8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcad8:   00                                                 |.               |
; section: .data.rel.ro.filter_optmap.0
0xcad8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data.rel.ro.lookup_filter.part.0
0xcae0:   00 00 00 00 00 00 00 00  22                        |........"       |
; section: .data.rel.ro.decoders0
0xcae8:   22 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |"...............|
0xcaf8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb08:   22                                                 |"               |
; section: .data.rel.ro.encoders0
0xcb08:   22 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |"...............|
0xcb18:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb38:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .EXTERN
0xcb48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb58:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0xcb68:   ??                                                 |?               |
